{"version":3,"file":"chunks/709/37b9a24ae0263b54a320.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/planeamento/nonwovens/FormNonwovensUpsert.jsx","webpack://sgp/./src/pages/planeamento/ordemFabrico/FormNonwovens.jsx","webpack://sgp/./src/components/Tabs.jsx","webpack://sgp/./src/pages/planeamento/ordemFabrico/FormRequirements.jsx","webpack://sgp/./src/pages/planeamento/ordemFabrico/FormOFabricoValidar.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace, InputAddon } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button } from \"antd\";\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport { OFabricoContext } from '../ordemFabrico/FormOFabricoValidar';\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        nw_cod_sup: Joi.any().label(\"Nonwoven Superior\").required(),\r\n        nw_cod_inf: Joi.any().label(\"Nonwoven Inferiror\").required()\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nconst LoadMateriasPrimasLookup = async (token) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/materiasprimaslookup/`, filter: {}, parameters: { type: 'nonwovens' }, cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput, changedValues, parentLoading }) => {\r\n    const ctx = useContext(OFabricoContext);\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.nonwovens_id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n    const [matPrimasLookup, setMatPrimasLookup] = useState();\r\n\r\n    const init = (data = {}, lookup = false) => {\r\n        const { nonwovens } = record;\r\n        const { nonwovens_id, token } = data;\r\n        (async () => {\r\n            let _matPrimas = null;\r\n            if (lookup || !matPrimasLookup) {\r\n                _matPrimas = await LoadMateriasPrimasLookup(token);\r\n                setMatPrimasLookup(_matPrimas);\r\n            }\r\n            let nData = {};\r\n            if (nonwovens_id) {\r\n                if (!_matPrimas) {\r\n                    _matPrimas = matPrimasLookup;\r\n                }\r\n\r\n                let [n] = nonwovens.filter(v => v.id === nonwovens_id);\r\n                if (n) {\r\n                    nData = {\r\n                        nw_cod_sup: { key: n.nw_cod_sup, value: n.nw_cod_sup, label: n.nw_des_sup },\r\n                        nw_cod_inf: { key: n.nw_cod_inf, value: n.nw_cod_inf, label: n.nw_des_inf },\r\n                        designacao: n.designacao\r\n                    };\r\n                }\r\n            }\r\n\r\n            if (operation.key === \"update\") {\r\n                (setFormTitle) && setFormTitle({ title: `Editar Nonwovens ${ctx.item_cod}`, subTitle: `${ctx.item_nome}` });\r\n            } else {\r\n                (setFormTitle) && setFormTitle({ title: `Definir Nonwovens ${ctx.item_cod}`, subTitle: `${ctx.item_nome}` });\r\n            }\r\n            form.setFieldsValue(nData);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        if (!changedValues) {\r\n            init({ nonwovens_id: record.nonwovens_id, token: cancelFetch });\r\n        }\r\n        return (() => cancelFetch.cancel(\"Form Nonwovens Upsert Cancelled\"));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        if (changedValues && !parentLoading) {\r\n            if (\"nonwovens_id\" in changedValues) {\r\n                init({ nonwovens_id: changedValues.nonwovens_id, token: cancelFetch });\r\n            } else {\r\n                init({ nonwovens_id: record.nonwovens_id, token: cancelFetch });\r\n            }\r\n        }\r\n        return (() => cancelFetch.cancel(\"Form Nonwovens Upsert Cancelled\"));\r\n    }, [changedValues, parentLoading]);\r\n\r\n    const onFinish = async (values) => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const msgKeys = [];\r\n        const v = schema().validate(values, { abortEarly: false });\r\n        status.error = [...status.error, ...(v.error ? v.error?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        status.warning = [...status.warning, ...(v.warning ? v.warning?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        if (v.error) {\r\n            status.error.push({ message: \"OS Nonwovens Superior e Inferior têm de estar preenchidos!\" });\r\n            setSubmitting(false);\r\n        }\r\n\r\n        if (status.error.length === 0) {\r\n            const { nw_cod_sup: { value: nw_cod_sup, label: nw_des_sup } = {} } = values;\r\n            const { nw_cod_inf: { value: nw_cod_inf, label: nw_des_inf } = {} } = values;\r\n            const response = await fetchPost({ url: `${API_URL}/newartigononwovens/`, parameters: { ...values, id: record?.nonwovens_id, produto_id: ctx.produto_id, nw_cod_sup, nw_des_sup, nw_cod_inf, nw_des_inf } });\r\n            if (response.data.status !== \"error\") {\r\n                parentReload({}, \"lookup\");\r\n            }\r\n            setResultMessage(response.data);\r\n        }\r\n        setFormStatus(status);\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n        setSubmitting(false);\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setSubmitting(false);\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    const onSubmit = useCallback(async () => {\r\n        setSubmitting(true);\r\n        onFinish(form.getFieldsValue(true));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Definir Nonwovens</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`fps`} onFinish={onFinish} /* onValuesChange={onValuesChange} */ component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-NONWOVENS-UPSERT\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\" /* pos: (forInput ? \"top\" : \"left\"), align: (forInput ? \"start\" : \"end\"), vAlign: \"center\", width: \"140px\" */, wrap: false, overflow: false, colon: false, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        {forInput && <>\r\n                            <FieldSet margin={false} field={{ wide: [6, 4] }}>\r\n                                <Field name=\"designacao\" label={{ enabled: false }}><Input placeholder=\"Designação\" size=\"small\" /></Field>\r\n                            </FieldSet>\r\n                            <VerticalSpace height=\"12px\" />\r\n                        </>\r\n                        }\r\n\r\n\r\n                        <Field wide={10} name=\"nw_cod_sup\" label={{ text: `${forInput ? \"Nonwoven \" : \"\"}Superior` }} required={false}>\r\n                            <SelectField size=\"small\" data={matPrimasLookup} keyField=\"ITMREF_0\" textField=\"ITMDES1_0\"\r\n                                optionsRender={(d, keyField, textField) => ({ label: `${d[textField]}`, value: d[keyField] })}\r\n                                showSearch\r\n                                labelInValue\r\n                                filterOption={(input, option) => option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                            />\r\n                        </Field>\r\n                        <Field wide={10} name=\"nw_cod_inf\" label={{ text: `${forInput ? \"Nonwoven \" : \"\"}Inferior` }} required={false}>\r\n                            <SelectField size=\"small\" data={matPrimasLookup} keyField=\"ITMREF_0\" textField=\"ITMDES1_0\"\r\n                                optionsRender={(d, keyField, textField) => ({ label: `${d[textField]}`, value: d[keyField] })}\r\n                                labelInValue\r\n                                showSearch\r\n                                filterOption={(input, option) => option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                            />\r\n                        </Field>\r\n\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button disabled={submitting} onClick={onSubmit} type=\"primary\">Guardar</Button>\r\n                        {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon, VerticalSpace, HorizontalRule } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport { Button, Spin } from \"antd\";\r\nimport { LoadingOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport FormNonwovensUpsert from '../nonwovens/FormNonwovensUpsert';\r\nimport { OFabricoContext } from './FormOFabricoValidar';\r\n\r\nconst Drawer = ({ showWrapper, setShowWrapper, parentReload }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n    const { record = {}, forInput } = showWrapper;\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type=\"drawer\"\r\n            destroyOnClose={true}\r\n            //width={width}\r\n            mask={true}\r\n            /* style={{ maginTop: \"48px\" }} */\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            width={800}\r\n            bodyStyle={{ height: \"450px\" /*  paddingBottom: 80 *//* , overflowY: \"auto\", minHeight: \"350px\", maxHeight: \"calc(100vh - 50px)\" */ }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n        >\r\n            <FormNonwovensUpsert setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} forInput={forInput} />\r\n        </WrapperForm>\r\n    );\r\n}\r\n\r\nconst loadNonwovensLookup = async ({ produto_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/nonwovenslookup/`, filter: { produto_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nexport default ({ changedValues }) => {\r\n    const { form, guides, schema, fieldStatus, ...ctx } = useContext(OFabricoContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [showForm, setShowForm] = useState({ show: false });\r\n    const [nonwovens, setNonwovens] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const { produto_id } = ctx;\r\n        const cancelFetch = cancelToken();\r\n        loadData({ nonwovens_id: form.getFieldValue(\"nonwovens_id\"), produto_id, token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Nonwovens Cancelled\"));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        if (changedValues) {\r\n            if (\"nonwovens_id\" in changedValues) {\r\n                /*  setLoading(true);\r\n                 loadData({ [idRefName]: changedValues[idRefName], token: cancelFetch }); */\r\n            }\r\n        }\r\n        return (() => cancelFetch.cancel(\"Form Nonwovens Cancelled\"));\r\n    }, [changedValues]);\r\n\r\n    const loadData = (data = {}, type = \"init\") => {\r\n        const { produto_id } = ctx;\r\n        const { token } = data;\r\n        switch (type) {\r\n            case \"lookup\":\r\n                setLoading(true);\r\n                (async () => {\r\n                    setNonwovens(await loadNonwovensLookup({ produto_id, token }));\r\n                    setLoading(false);\r\n                })();\r\n                break;\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    let _nonwovens = nonwovens;\r\n                    if (produto_id) {\r\n                        _nonwovens = await loadNonwovensLookup({ produto_id, token });\r\n                        setNonwovens(_nonwovens);\r\n                    }\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    const onShowForm = (newForm = false, forInput = false) => {\r\n        if (newForm) {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: {}, forInput }));\r\n        } else {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue([\"nonwovens_id\"]), nonwovens }, forInput }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <Drawer showWrapper={showForm} setShowWrapper={setShowForm} parentReload={loadData} />\r\n                <FormLayout\r\n                    id=\"LAY-NONWOVENS\"\r\n                    guides={guides}\r\n                    layout=\"vertical\"\r\n                    style={{ width: \"100%\", /* padding: \"5px\", border: \"solid 1px #dee2e6\", borderRadius: \"3px\" *//* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{\r\n                        //wide: [3, 2, 1, '*'],\r\n                        margin: \"2px\", overflow: false, guides: guides,\r\n                        label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", width: \"80px\", wrap: false, overflow: false, colon: false, ellipsis: true },\r\n                        alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                        layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                        addons: {}, //top|right|center|bottom|left\r\n                        required: true,\r\n                        style: { alignSelf: \"top\" }\r\n                    }}\r\n                    fieldSet={{\r\n                        guides: guides,\r\n                        wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                    }}\r\n                >\r\n                    <VerticalSpace />\r\n                    <HorizontalRule title=\"1. Nonwovens\" />\r\n                    <VerticalSpace />\r\n                    {/* <Item><h4 style={{ padding: \"5px\" }}>Nonwovens</h4></Item> */}\r\n                    <FieldSet margin={false} field={{ wide: [6, 2] }} style={{ alignItems: \"center\" }}>\r\n                        <Field name=\"nonwovens_id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: false, text: \"Nonwovens\", pos: \"left\" }} addons={{\r\n                            ...(form.getFieldValue(\"nonwovens_id\") && { right: <Button onClick={() => onShowForm(false, true)} style={{ marginLeft: \"3px\" }} size=\"small\"><EditOutlined style={{ fontSize: \"16px\" }} /></Button> })\r\n                        }}>\r\n                            <SelectField allowClear size=\"small\" data={nonwovens} keyField=\"id\" textField=\"designacao\"\r\n                                optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                            />\r\n                        </Field>\r\n                        <Item><Button onClick={() => onShowForm(true, true)} size=\"small\">Novo</Button></Item>\r\n                    </FieldSet>\r\n                    <FieldSet margin={false}>\r\n                        <FormNonwovensUpsert parentLoading={loading} record={{ nonwovens, ...form.getFieldsValue([\"nonwovens_id\"]) }} wrapForm={false} forInput={false} parentReload={loadData} changedValues={changedValues} />\r\n                    </FieldSet>\r\n\r\n                </FormLayout>\r\n            </Spin>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport classNames from \"classnames\";\r\nimport { Tabs } from \"antd\";\r\n\r\nconst useStyles = createUseStyles({\r\n    dark1: {\r\n        '& > .ant-tabs-nav': {\r\n            backgroundColor: \"#f0f0f0!important\"\r\n        },\r\n        '& .ant-tabs-tab': {\r\n            backgroundColor: \"#d9d9d9!important\"\r\n        },\r\n        '& .ant-tabs-tab-active':{\r\n            backgroundColor: \"#fff!important\"\r\n        }\r\n\r\n    }\r\n});\r\n\r\nexport const { TabPane } = Tabs;\r\n\r\nexport default ({ children, className, dark = 0, ...rest }) => {\r\n    const classes = useStyles();\r\n    const css = classNames(className, { [classes.dark1]: dark === 1 });\r\n    return (\r\n        <Tabs className={css} {...rest}>\r\n            {children}\r\n        </Tabs>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { noValue } from \"utils\";\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon, VerticalSpace, HorizontalRule } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport { Button, Spin, Input, Skeleton, Tooltip, InputNumber, DatePicker, TimePicker } from \"antd\";\r\nconst { TextArea } = Input;\r\nimport { LoadingOutlined, EditOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, THICKNESS, ENROLAMENTO_OPTIONS, TIPOEMENDA_OPTIONS } from 'config';\r\nimport FormNonwovens from './FormNonwovens';\r\nimport { dateTimeDiffValidator } from \"utils/schemaValidator\";\r\nimport { OFabricoContext } from './FormOFabricoValidar';\r\nimport { MediaContext } from '../../App';\r\nimport moment from 'moment';\r\n\r\n\r\nconst loadArtigoDetail = async ({ item_cod, item_nome, produto_cod }, token) => {\r\n    let artigo = {};\r\n    let exists = false;\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/sellitemsdetailsget/`, filter: { \"cod\": item_cod }, cancelToken: token });\r\n\r\n    if (rows.length > 0) {\r\n        exists = true;\r\n        artigo = {\r\n            \"artigo_id\": rows[0].id,\r\n            \"artigo_nw1\": rows[0].nw1,\r\n            \"artigo_nw2\": rows[0].nw2,\r\n            \"artigo_width\": rows[0].lar,\r\n            \"artigo_formula\": rows[0].formu,\r\n            \"artigo_diam\": rows[0].diam_ref,\r\n            \"artigo_core\": rows[0].core,\r\n            \"artigo_gram\": rows[0].gsm,\r\n            \"artigo_gtin\": rows[0].gtin,\r\n            \"artigo_thickness\": rows[0].thickness,\r\n            \"produto_cod\": rows[0].produto_cod,\r\n        };\r\n    } else {\r\n        const designacao = item_nome.split(' ').reverse();\r\n        artigo[\"produto_cod\"] = produto_cod;\r\n        artigo[\"artigo_thickness\"] = THICKNESS;\r\n        for (let v of designacao) {\r\n            if (v.includes(\"''\") || v.includes(\"'\")) {\r\n                artigo[\"artigo_core\"] = v.replaceAll(\"'\", \"\");\r\n                continue;\r\n            }\r\n            if (v.toLowerCase().startsWith('l')) {\r\n                artigo[\"artigo_width\"] = v.toLowerCase().replaceAll(\"l\", \"\");\r\n                continue;\r\n            }\r\n            if (v.toLowerCase().startsWith('d')) {\r\n                artigo[\"artigo_diam\"] = v.toLowerCase().replaceAll(\"d\", \"\");\r\n                continue;\r\n            }\r\n            if (v.toLowerCase().startsWith('g') || (!isNaN(v) && Number.isInteger(parseFloat(v)))) {\r\n                artigo[\"artigo_gram\"] = v.toLowerCase().replaceAll(\"g\", \"\");\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n    return { artigo, exists };\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default ({ /* record, form, guides, schema, */ changedValues, /* nonwovensChangedValues, fieldStatus */ }) => {\r\n    const { form, guides, schema, fieldStatus, ...ctx } = useContext(OFabricoContext);\r\n    /* const mediaCtx = useContext(MediaContext); */\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [coresLookup, setCoresLookup] = useState([]);\r\n    const [artigoExists, setArtigoExists] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        loadData({ token: cancelFetch });\r\n        /* const { item } = record;\r\n        loadData({ artigospecs_id: id, item }); */\r\n        return (() => cancelFetch.cancel(\"Form Requirements Cancelled\"));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (changedValues) {\r\n            /* if (\"start_date\" in changedValues || \"start_hour\" in changedValues || \"end_date\" in changedValues || \"end_hour\" in changedValues) {\r\n                const { start_date, start_hour, end_date, end_hour } = form.getFieldsValue(true);\r\n                setFieldStatus(dateTimeDiffValidator(start_date, start_hour, end_date, end_hour).fields);\r\n            } */\r\n        }\r\n    }, [changedValues]);\r\n\r\n    const loadData = ({ token }, type = \"init\") => {\r\n        switch (type) {\r\n            case \"lookup\":\r\n                setLoading(true);\r\n                (async () => {\r\n                    setLoading(false);\r\n                })();\r\n                break;\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    const { artigo, exists } = await loadArtigoDetail(ctx, token);\r\n                    artigo[\"qty_item\"] = ctx.qty_item;\r\n                    setArtigoExists(exists);\r\n                    let sd = noValue(form.getFieldValue(\"start_prev_date\"), ctx.start_prev_date);\r\n                    let ed = noValue(form.getFieldValue(\"end_prev_date\"), ctx.end_prev_date);\r\n                    const plan = {\r\n                        start_prev_date: sd ? moment(sd, 'YYYY-MM-DD HH:mm') : null,\r\n                        end_prev_date: ed ? moment(ed, 'YYYY-MM-DD HH:mm') : null,\r\n                        f_amostragem: (form.getFieldValue(\"amostragem\")) ? form.getFieldValue(\"amostragem\") : 4,\r\n                        sentido_enrolamento: form.getFieldValue(\"sentido_enrolamento\") ? parseInt(form.getFieldValue(\"sentido_enrolamento\")) : 1,\r\n                        observacoes: form.getFieldValue(\"observacoes\") ? form.getFieldValue(\"observacoes\") : ''\r\n                    }\r\n                    await sleep(600);\r\n                    form.setFieldsValue({ ...artigo, ...plan });\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n            {!loading &&\r\n                <>\r\n                    <FormLayout\r\n                        id=\"LAY-REQ\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        fieldStatus={fieldStatus}\r\n                        field={{\r\n                            wide: [4, 4, '*'],\r\n                            margin: \"2px\", overflow: true, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: false, ellipsis: true },\r\n                            alert: { pos: \"alert\", tooltip: false, container: true, /* container: \"el-external\"*/ },\r\n                            layout: { top: \"\", right: \"\", center: \"align-self: center;\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"center\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: false, layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        <FieldSet margin={false} layout=\"vertical\">\r\n                            <HorizontalRule title=\"1. Artigo\" description={form.getFieldValue(\"produto_cod\")} />\r\n                            {/* <FieldSet margin={false}>\r\n                                <Field wide={16} forInput={false} required={false} label={{ text: \"Produto\" }} name=\"produto_cod\"><Input size=\"small\" /></Field>\r\n                            </FieldSet> */}\r\n                            <FieldSet>\r\n                                <Field forInput={!artigoExists} required={false} label={{ text: \"Gtin\" }} name=\"artigo_gtin\"><Input size=\"small\" /></Field>\r\n                                <AlertsContainer style={{ alignSelf: \"end\", paddingBottom: \"2px\" }} main={true} />\r\n                            </FieldSet>\r\n                            <FieldSet field={{ wide: [2, 2, 1, 2, 2, '*'] }}>\r\n                                <Field forInput={!artigoExists} required={false} label={{ text: \"Largura\" }} name=\"artigo_width\"><InputAddon size=\"small\" addonAfter={<b>mm</b>} maxLength={4} /></Field>\r\n                                <Field forInput={!artigoExists} required={false} label={{ text: \"Diâmetro\" }} name=\"artigo_diam\"><InputAddon size=\"small\" addonAfter={<b>mm</b>} maxLength={4} /></Field>\r\n                                <Field forInput={!artigoExists} required={false} label={{ text: \"Core\" }} name=\"artigo_core\"><InputAddon size=\"small\" addonAfter={<b>''</b>} maxLength={1} /></Field>\r\n                                <Field forInput={!artigoExists} required={false} label={{ text: \"Gramagem\" }} name=\"artigo_gram\"><InputAddon size=\"small\" addonAfter={<b>gsm</b>} maxLength={4} /></Field>\r\n                                <Field forInput={!artigoExists} required={false}\r\n                                    label={{\r\n                                        text: <Tooltip title=\"A espessura é usada como valor de referência, na conversão de metros&#xB2; -> metros lineares.\" color=\"blue\">\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", gap: \"3px\" }}>Espessura<InfoCircleOutlined style={{ color: \"#096dd9\" }} /></div>\r\n                                        </Tooltip>\r\n                                    }}\r\n                                    name=\"artigo_thickness\">\r\n                                    <InputAddon size=\"small\" addonAfter={<b>&#x00B5;</b>} maxLength={4} />\r\n                                </Field>\r\n                                <AlertsContainer style={{ alignSelf: \"end\", paddingBottom: \"2px\" }} main={true} />\r\n                            </FieldSet>\r\n                        </FieldSet>\r\n                        <VerticalSpace />\r\n                        {/*                         <HorizontalRule title=\"2. Encomenda\" />\r\n                        <FieldSet margin={false}>\r\n                            <Field wide={3} forInput={false} required={false} label={{ text: \"Qtd. Encomenda\" }} name=\"qty_item\"><InputAddon size=\"small\" addonAfter={<b>m&#178;</b>} maxLength={4} /></Field>\r\n                            <Field wide={3} forInput={false} required={false} label={{ text: \"Metros/Bobine\" }} name=\"linear_meters\"><InputAddon size=\"small\" addonAfter={<b>m</b>} maxLength={4} /></Field>\r\n                            <Field wide={3} forInput={false} required={false} label={{ text: <span>Metros&#178;/Bobine</span> }} name=\"sqm_bobine\"><InputAddon size=\"small\" addonAfter={<b>m&#178;</b>} maxLength={4} /></Field>\r\n                            <Field wide={2} forInput={false} required={false} label={{ text: \"Nº Bobines\" }} name=\"nbobines\"><InputNumber size=\"small\" min={1} max={10000} /></Field>\r\n                        </FieldSet>\r\n                        <VerticalSpace /> */}\r\n                        <HorizontalRule title=\"2. Planificação\" />\r\n                        <FieldSet field={{ wide: [3, 3, 4], label: { pos: \"top\", wrap: true, ellipsis: false, width: \"130px\" } }}>\r\n                            <Field required={true} label={{ text: \"Data Prevista Início\" }} name=\"start_prev_date\"><DatePicker showTime size=\"small\" format=\"YYYY-MM-DD HH:mm\" /></Field>\r\n                            <Field forInput={false} required={true} label={{ text: \"Data Prevista Fim\" }} name=\"end_prev_date\"><DatePicker showTime size=\"small\" format=\"YYYY-MM-DD HH:mm\" /></Field>\r\n                            <AlertsContainer style={{ alignSelf: \"end\", paddingBottom: \"6px\" }} main={true} />\r\n                        </FieldSet>\r\n                        {/* <FieldSet field={{ wide: [3, 3, 4], label: { pos: \"top\", wrap: true, ellipsis: false, width: \"130px\" } }}>\r\n                            <Field required={true} label={{ text: \"Data Início\" }} name=\"start_date\"><DatePicker showTime size=\"small\" /></Field>\r\n                            <Field required={true} label={{ text: \"Data Fim\" }} name=\"end_date\"><DatePicker showTime size=\"small\" /></Field>\r\n                            <AlertsContainer style={{ alignSelf: \"end\", paddingBottom: \"6px\" }} main={true} />\r\n                        </FieldSet> */}\r\n                        {/*                         <VerticalSpace />\r\n                        <HorizontalRule title=\"4. Core\" />\r\n                        <VerticalSpace />\r\n                        <FieldSet margin={false}>\r\n                            <Field wide={[10]} name=\"core_cod\" label={{ enabled: false, text: \"Core\", pos: \"top\" }} required={false}>\r\n                                <SelectField size=\"small\" data={coresLookup} keyField=\"ITMREF_0\" textField=\"ITMDES1_0\"\r\n                                    optionsRender={(d, keyField, textField) => ({ label: `${d[textField]}`, value: d[keyField] })}\r\n                                    showSearch\r\n                                    labelInValue\r\n                                    filterOption={(input, option) => option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                />\r\n                            </Field>\r\n                        </FieldSet> */}\r\n                        <VerticalSpace />\r\n                        {/* <HorizontalRule title=\"4. Emendas\" />\r\n                        <VerticalSpace />\r\n                        <FieldSet margin={false} field={{ wide: 4, style: { alignSelf: \"left\" }, label: { pos: \"top\", wrap: false, ellipsis: false, width: \"130px\" } }} layout=\"vertical\">\r\n                            <Field name=\"tipo_emenda\" label={{ text: \"Tipo Emenda\" }}>\r\n                                <SelectField size=\"small\" data={TIPOEMENDA_OPTIONS} keyField=\"value\" textField=\"label\"\r\n                                    optionsRender={(d, keyField, textField) => ({ label: `${d[textField]}`, value: d[keyField] })}\r\n                                />\r\n                            </Field>\r\n                            <FieldSet margin={false}>\r\n                                <Field wide={2} name=\"maximo\" label={{ text: \"Máximo\" }}><InputNumber size=\"small\" addonAfter={<b>%</b>} min={0} max={100} /></Field>\r\n                                <Field wide={2} label={{ text: \"Emendas/Rolo\" }} name=\"nemendas_rolo\"><InputNumber size=\"small\" min={0} max={100} /></Field>\r\n                                <Field wide={2} overflow={true} label={{ text: \"Paletes/Contentor\" }} name=\"nemendas_paletescontentor\"><InputNumber size=\"small\" min={0} max={100} /></Field>\r\n                            </FieldSet>\r\n                        </FieldSet>\r\n                        <VerticalSpace /> */}\r\n                        <HorizontalRule title=\"3. Amostragem, Enrolamento e Observações\" />\r\n                        <VerticalSpace />\r\n                        <FieldSet margin={false} field={{ wide: 4, style: { alignSelf: \"left\" }, label: { pos: \"top\", wrap: false, ellipsis: false, width: \"130px\" } }} layout=\"vertical\">\r\n                            <FieldSet margin={false}>\r\n                                <Field wide={4} name=\"sentido_enrolamento\" label={{ enabled: true, text: \"Sentido Enrolamento\" }}>\r\n                                    <SelectField size=\"small\" data={ENROLAMENTO_OPTIONS} keyField=\"value\" textField=\"label\"\r\n                                        optionsRender={(d, keyField, textField) => ({ label: d[textField], value: d[keyField] })}\r\n                                    />\r\n                                </Field>\r\n                                <Field wide={2} label={{ text: \"Amostragem\" }} name=\"f_amostragem\"><InputNumber size=\"small\" min={0} max={100} /></Field>\r\n                            </FieldSet>\r\n                            <Field required={false} wide={16} label={{ text: \"Observações\" }} name=\"observacoes\"><TextArea autoSize={{ minRows: 4, maxRows: 6 }} allowClear maxLength={3000} /></Field>\r\n                        </FieldSet>\r\n                    </FormLayout>\r\n                    {/* <FormNonwovens forInput={false} id={form.getFieldValue(\"nonwovens_id\")} record={record} form={form} guides={guides} schema={schema} changedValues={nonwovensChangedValues} /> */}\r\n\r\n\r\n\r\n                </>\r\n            }\r\n        </Spin >\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, Suspense } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { useDataAPI } from \"utils/useDataAPI\";\r\nimport { hasValue, deepMerge,useSubmitting } from \"utils\";\r\nimport { getSchema, dateTimeDiffValidator } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon } from \"components/formLayout\";\r\nimport Tabs, { TabPane } from \"components/Tabs\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport IconButton from \"components/iconButton\";\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Typography, Form, Button, Menu, Dropdown, Switch, Select, Tag, Tooltip, Popconfirm, notification, DatePicker, InputNumber, TimePicker, Spin } from \"antd\";\r\nconst { Option, OptGroup } = Select;\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\n\r\nimport FormRequirements from './FormRequirements';\r\nimport FormNonwovens from './FormNonwovens';\r\nconst FormPaletizacao = React.lazy(() => import('./FormPaletizacao'));\r\nconst FormFormulacao = React.lazy(() => import('./FormFormulacao'));\r\nconst FormGamaOperatoria = React.lazy(() => import('./FormGamaOperatoria'));\r\nconst FormSpecs = React.lazy(() => import('./FormSpecs'));\r\nconst FormAgg = React.lazy(() => import('./FormAgg'));\r\nconst FormNwsCore = React.lazy(() => import('./FormNwsCore'));\r\nconst FormCortes = React.lazy(() => import('./FormCortes'));\r\n\r\nexport const OFabricoContext = React.createContext({});\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        start_prev_date: Joi.any().label(\"Data de Início\"),\r\n        end_prev_date: Joi.any().label(\"Data de Fim\")\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst LoadOFabricoTemp = async (record, token) => {\r\n    const { iorder, item, cliente_cod, ofabrico } = record;\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/tempofabricoget/`, filter: { of_id: ofabrico, item_cod: item, cliente_cod, order_cod: iorder }, cancelToken: token });\r\n    return rows;\r\n}\r\n\r\n\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload }) => {\r\n    /*     const { temp_ofabrico_agg, temp_ofabrico, item_id, produto_id, produto_cod, ofabrico } = record; */\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const submitting = useSubmitting();\r\n    const [fieldStatus, setFieldStatus] = useState({});\r\n    const submitForProduction = useRef(false);\r\n\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n    const [paletizacaoChangedValues, setPaletizacaoChangedValues] = useState({});\r\n    const [formulacaoChangedValues, setFormulacaoChangedValues] = useState({});\r\n    const [gamaOperatoriaChangedValues, setGamaOperatoriaChangedValues] = useState({});\r\n    const [artigoSpecsChangedValues, setArtigoSpecsChangedValues] = useState({});\r\n    const [nonwovensChangedValues, setNonwovensChangedValues] = useState({});\r\n    const [requirementsChangedValues, setRequirementsChangedValues] = useState({});\r\n    const [aggChangedValues, setAggChangedValues] = useState({});\r\n    const [cortesOrdemChangedValues, setCortesOrdemChangedValues] = useState({});\r\n\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n\r\n    const contextValue = {\r\n        agg_id: record.temp_ofabrico_agg,\r\n        of_id: record.temp_ofabrico,\r\n        of_cod: record.ofabrico,\r\n        produto_id: record.produto_id,\r\n        produto_cod: record.produto_cod,\r\n        item_id: record.item_id,\r\n        item_cod: record.item,\r\n        item_nome: record.item_nome,\r\n        order: record.iorder,\r\n        cliente_cod: record.cliente_cod,\r\n        cliente_nome: record.cliente_nome,\r\n        qty_item: record.qty_item,\r\n        sage_start_date: record.start_date,\r\n        sage_end_date: record.end_date,\r\n        start_prev_date: record.start_prev_date,\r\n        end_prev_date: record.end_prev_date,\r\n        fieldStatus,\r\n        setFieldStatus,\r\n        form,\r\n        guides,\r\n        schema\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        setFormTitle({ title: `Planear Ordem de Fabrico ${record.ofabrico}`, subTitle: `${record.item} - ${record.item_nome}` });\r\n        (async () => {\r\n            let [oFabricoTemp] = await LoadOFabricoTemp(record, cancelFetch);\r\n            oFabricoTemp = { ...oFabricoTemp /* core_cod: { key: oFabricoTemp?.core_cod, value: oFabricoTemp?.core_cod, label: oFabricoTemp?.core_des } */ };\r\n            form.setFieldsValue({ ...oFabricoTemp, nbobines: (record.qty_item / oFabricoTemp.sqm_bobine).toFixed(2) });\r\n            setLoading(false);\r\n        })();\r\n        return (() => cancelFetch.cancel(\"Form OFabrico Plannig Cancelled\"));\r\n    }, []);\r\n\r\n    const onValuesChange = (changedValues, allValues) => {\r\n        if (\"paletizacao_id\" in changedValues) {\r\n            setPaletizacaoChangedValues(changedValues);\r\n        } else if (\"formulacao_id\" in changedValues) {\r\n            setFormulacaoChangedValues(changedValues);\r\n        } else if (\"gamaoperatoria_id\" in changedValues) {\r\n            setGamaOperatoriaChangedValues(changedValues);\r\n        } else if (\"artigospecs_id\" in changedValues) {\r\n            setArtigoSpecsChangedValues(changedValues);\r\n        } else if (\"nonwovens_id\" in changedValues) {\r\n            setNonwovensChangedValues(changedValues);\r\n        } /* else if (\"core_id\" in changedValues) {\r\n            setCoreChangedValues(changedValues);\r\n        } */ else if (\"agg_id\" in changedValues) {\r\n            setAggChangedValues(changedValues);\r\n        } else if (\"cortesordem_id\" in changedValues || \"cortes\" in changedValues) {\r\n            setCortesOrdemChangedValues(changedValues);\r\n        } else {\r\n            setRequirementsChangedValues(changedValues);\r\n        }\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        if (!submitting.init()) { return; }\r\n\r\n        const forproduction = submitForProduction.current;\r\n        submitForProduction.current = false;\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const msgKeys = [\"start_prev_date\", \"end_prev_date\"];\r\n        const { cliente_cod, cliente_nome, iorder, item, ofabrico, produto_id, produto_cod, item_id, temp_ofabrico } = record;\r\n        const { core_cod: { value: core_cod, label: core_des } = {} } = values;\r\n        const { cortes_id/* , cortesordem_id */ } = form.getFieldsValue(true);\r\n        let diff = {};\r\n        const v = schema().custom((v, h) => {\r\n            const { start_prev_date, end_prev_date } = v;\r\n            diff = dateTimeDiffValidator(start_prev_date, end_prev_date);\r\n            if (diff.errors == true) {\r\n                return h.message(\"A Data de Fim tem de ser Maior que a Data de Início\", { key: \"start_date\", label: \"start_date\" })\r\n            }\r\n        }).validate(values, { abortEarly: false });\r\n        status.error = [...status.error, ...(v.error ? v.error?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        status.warning = [...status.warning, ...(v.warning ? v.warning?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        if (!v.error) { }\r\n        if (status.error.length === 0) {\r\n            const { start_prev_date, end_prev_date } = values;\r\n\r\n            if (\"nonwovens_id\" in values && values[\"nonwovens_id\"] === undefined) {\r\n                values[\"nonwovens_id\"] = -1;\r\n            }\r\n            if (\"artigospecs_id\" in values && values[\"artigospecs_id\"] === undefined) {\r\n                values[\"artigospecs_id\"] = -1;\r\n            }\r\n            if (\"formulacao_id\" in values && values[\"formulacao_id\"] === undefined) {\r\n                values[\"formulacao_id\"] = -1;\r\n            }\r\n            if (\"gamaoperatoria_id\" in values && values[\"gamaoperatoria_id\"] === undefined) {\r\n                values[\"gamaoperatoria_id\"] = -1;\r\n            }\r\n            if (\"cortesordem_id\" in values && values[\"cortesordem_id\"] === undefined) {\r\n                values[\"cortesordem_id\"] = -1;\r\n            }\r\n            const response = await fetchPost({ url: `${API_URL}/savetempordemfabrico/`, parameters: { ...values, ofabrico_cod: ofabrico, ofabrico_id: temp_ofabrico, forproduction, qty_item: record.qty_item, start_prev_date: start_prev_date.format('YYYY-MM-DD HH:mm:ss'), /* end_prev_date: end_prev_date.format('YYYY-MM-DD HH:mm:ss'), */ cliente_cod, cliente_nome, iorder, item, item_id, core_cod, core_des, produto_id, produto_cod, cortes_id/* , cortesordem_id */ } });\r\n            setResultMessage(response.data);\r\n            if (forproduction) {\r\n                parentReload();\r\n            }\r\n        }\r\n        setFieldStatus(diff.fields);\r\n        setFormStatus(status);\r\n    };\r\n\r\n    const onSuccessOK = () => {\r\n        submitting.end();\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        submitting.end();\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    const onSubmitForProduction = useCallback(() => {\r\n        submitting.trigger();//setSubmitting(true);\r\n        submitForProduction.current = true;\r\n        form.submit();\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        submitting.trigger();\r\n        form.submit();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <ResultMessage\r\n                    result={resultMessage}\r\n                    successButtonOK={<Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Continuar</Button>}\r\n                    successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                    errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                    errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n                >\r\n                    <AlertsContainer id=\"el-external\" />\r\n                    <AlertMessages formStatus={formStatus} />\r\n                    <OFabricoContext.Provider value={contextValue} /* value={{ temp_ofabrico_agg, temp_ofabrico, item_id, produto_id, produto_cod, ofabrico, form, guides, schema }} */>\r\n                        <Form form={form} name={`form-of-validar`} onFinish={onFinish} onValuesChange={onValuesChange}>\r\n                            <Tabs /* onChange={() => { }} */ type=\"card\" dark={1} defaultActiveKey=\"1\" activeKey={activeTab} onChange={(k) => setActiveTab(k)}>\r\n                                <TabPane tab=\"Requisitos\" key=\"1\" forceRender={true}>\r\n                                    <FormRequirements changedValues={requirementsChangedValues} />\r\n                                </TabPane>\r\n                                <TabPane tab=\"Ordens Fabrico\" key=\"2\">\r\n                                    <Suspense fallback={<></>}><FormAgg changedValues={aggChangedValues} /></Suspense>\r\n                                </TabPane>\r\n                                <TabPane tab=\"Nonwovens\" key=\"8\">\r\n                                    <Suspense fallback={<></>}><FormNonwovens changedValues={nonwovensChangedValues} /></Suspense>\r\n                                    {/* <Suspense fallback={<></>}><FormNwsCore nwChangedValues={nonwovensChangedValues}  coreChangedValues={coreChangedValues} /></Suspense> */}\r\n                                </TabPane>\r\n                                <TabPane tab=\"Especificações\" key=\"3\">\r\n                                    <Suspense fallback={<></>}><FormSpecs changedValues={artigoSpecsChangedValues} /></Suspense>\r\n                                </TabPane>\r\n                                <TabPane tab=\"Formulação\" key=\"4\">\r\n                                    <Suspense fallback={<></>}><FormFormulacao changedValues={formulacaoChangedValues} /></Suspense>\r\n                                </TabPane>\r\n                                <TabPane tab=\"Gama Operatória\" key=\"5\">\r\n                                    <Suspense fallback={<></>}><FormGamaOperatoria changedValues={gamaOperatoriaChangedValues} /></Suspense>\r\n                                </TabPane>\r\n                                {/*                                <TabPane tab=\"Paletização\" key=\"6\">\r\n                                    <Suspense fallback={<></>}><FormPaletizacao changedValues={paletizacaoChangedValues} /></Suspense>\r\n                                </TabPane> */}\r\n                                <TabPane tab=\"Cortes\" key=\"7\">\r\n                                    <Suspense fallback={<></>}><FormCortes changedValues={cortesOrdemChangedValues} /></Suspense>\r\n                                </TabPane>\r\n                                {/* <TabPane tab=\"Paletes Stock\" key=\"9\">\r\n                                    <Suspense fallback={<></>}><FormPaletesStock id={form.getFieldValue(\"artigospecs_id\")} record={record} form={form} guides={guides} schema={schema} changedValues={artigoSpecsChangedValues} /></Suspense>\r\n                                </TabPane> */}\r\n                            </Tabs>\r\n                        </Form>\r\n                    </OFabricoContext.Provider>\r\n                </ResultMessage>\r\n                <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button disabled={submitting.state} type=\"primary\" onClick={onSubmitForProduction}>Submeter para Produção</Button>\r\n                        <Button disabled={submitting.state} onClick={onSubmit}>Guardar Ordem de Fabrico</Button>\r\n                        {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n            </Spin>\r\n        </>\r\n    );\r\n\r\n}"],"names":["schema","keys","excludeKeys","getSchema","nw_cod_sup","Joi","label","required","nw_cod_inf","unknown","LoadMateriasPrimasLookup","token","fetchPost","url","API_URL","filter","parameters","type","cancelToken","rows","data","id","record","setFormTitle","parentRef","closeParent","parentReload","wrapForm","forInput","changedValues","parentLoading","ctx","useContext","OFabricoContext","form","Form","useState","submitting","setSubmitting","error","warning","info","success","formStatus","setFormStatus","guides","nonwovens_id","key","values","operation","status","resultMessage","setResultMessage","matPrimasLookup","setMatPrimasLookup","init","lookup","nonwovens","_matPrimas","nData","v","n","value","nw_des_sup","nw_des_inf","designacao","title","item_cod","subTitle","item_nome","setFieldsValue","useEffect","cancelFetch","cancel","onFinish","msgKeys","validate","abortEarly","details","includes","context","push","message","length","produto_id","response","onClose","onSubmit","useCallback","getFieldsValue","result","successButtonOK","onClick","resetFields","successButtonClose","errorButtonOK","errorButtonClose","name","component","layout","style","width","padding","field","wide","margin","overflow","enabled","pos","wrap","colon","ellipsis","alert","tooltip","container","top","right","center","bottom","left","alignSelf","fieldSet","placeholder","size","height","text","keyField","textField","optionsRender","d","showSearch","labelInValue","filterOption","input","option","toLowerCase","indexOf","elId","current","disabled","Drawer","showWrapper","setShowWrapper","formTitle","iref","useRef","onVisible","prev","show","destroyOnClose","mask","setVisible","visible","bodyStyle","footer","ref","textAlign","FormNonwovensUpsert","loadNonwovensLookup","sort","fieldStatus","loading","setLoading","showForm","setShowForm","setNonwovens","loadData","getFieldValue","_nonwovens","onShowForm","newForm","spinning","indicator","LoadingOutlined","fontSize","spin","tip","align","vAlign","addons","alignItems","marginLeft","EditOutlined","allowClear","display","minWidth","useStyles","createUseStyles","dark1","backgroundColor","TabPane","Tabs","children","className","dark","rest","classes","css","classNames","TextArea","Input","loadArtigoDetail","produto_cod","artigo","exists","nw1","nw2","lar","formu","diam_ref","core","gsm","gtin","thickness","split","reverse","THICKNESS","replaceAll","startsWith","isNaN","Number","isInteger","parseFloat","sleep","ms","Promise","resolve","setTimeout","artigoExists","setArtigoExists","qty_item","sd","noValue","start_prev_date","ed","end_prev_date","plan","moment","f_amostragem","sentido_enrolamento","parseInt","observacoes","description","paddingBottom","main","addonAfter","maxLength","color","flexDirection","gap","InfoCircleOutlined","showTime","format","ENROLAMENTO_OPTIONS","min","max","autoSize","minRows","maxRows","Select","FormFormulacao","React","FormGamaOperatoria","FormSpecs","FormAgg","FormCortes","LoadOFabricoTemp","iorder","item","cliente_cod","ofabrico","of_id","order_cod","useSubmitting","setFieldStatus","submitForProduction","activeTab","setActiveTab","setPaletizacaoChangedValues","formulacaoChangedValues","setFormulacaoChangedValues","gamaOperatoriaChangedValues","setGamaOperatoriaChangedValues","artigoSpecsChangedValues","setArtigoSpecsChangedValues","nonwovensChangedValues","setNonwovensChangedValues","requirementsChangedValues","setRequirementsChangedValues","aggChangedValues","setAggChangedValues","cortesOrdemChangedValues","setCortesOrdemChangedValues","contextValue","agg_id","temp_ofabrico_agg","temp_ofabrico","of_cod","item_id","order","cliente_nome","sage_start_date","start_date","sage_end_date","end_date","oFabricoTemp","nbobines","sqm_bobine","toFixed","forproduction","core_cod","core_des","cortes_id","diff","custom","h","dateTimeDiffValidator","errors","undefined","ofabrico_cod","ofabrico_id","fields","onSubmitForProduction","trigger","submit","end","Provider","onValuesChange","allValues","defaultActiveKey","activeKey","onChange","k","tab","forceRender","FormRequirements","Suspense","fallback","FormNonwovens","state"],"sourceRoot":""}