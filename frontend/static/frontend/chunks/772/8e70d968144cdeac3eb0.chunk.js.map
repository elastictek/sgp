{"version":3,"file":"chunks/772/8e70d968144cdeac3eb0.chunk.js","mappings":"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","sources":["webpack://sgp/./src/components/ProgressBar.jsx","webpack://sgp/./src/components/ActionButton.jsx","webpack://sgp/./src/components/TagButton.jsx","webpack://sgp/./src/pages/OFabricoList.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    progress: {\r\n        height: \"8px\",\r\n        width:\"100%\",\r\n        overflow: \"hidden\",\r\n        marginTop:\"10px\",\r\n        backgroundColor: \"#f5f5f5\",\r\n        borderRadius: \"2px\",\r\n        boxShadow: \"inset 0 1px 2px rgba(0,0,0,0.1)\",\r\n        '& span': {\r\n            position: \"absolute\",\r\n            display: \"block\",\r\n            width: \"100%\",\r\n            color: \"black\"\r\n        },\r\n        '& .progress-bar': {\r\n            float: \"left\",\r\n            width: \"0\",\r\n            height: \"100%\",\r\n            color: \"#fff\",\r\n            textAlign: \"center\",\r\n            backgroundColor: \"#91d5ff\",\r\n            boxShadow: \"inset 0 -5px 0 rgb(0 0 0 / 15%)\",\r\n            //transition: \"width .6s ease\",\r\n            '& .show': {\r\n                fontSize:\"11px\",\r\n                marginTop:\"-16px\",\r\n                display: \"block!important\"\r\n            }\r\n        },\r\n        '& .progress-bar-success': {\r\n            boxShadow: \"inset 0 -5px 0 rgb(0 0 0 / 15%)\",\r\n            backgroundColor: \"#389e0d\"\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport default ({ value, min = 0, max, r }) => {\r\n    const classes = useStyles();\r\n    const percent = ((value * 100) / max);\r\n\r\n\r\n    const css = classNames({ \"progress-bar\": true, \"progress-bar-success\": (value >= max) });\r\n    return (\r\n        <div className={classes.progress}>\r\n            <div className={css} style={{ width: `${percent}%` }}>\r\n                <span className=\"show\">{value}/{max}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {\r\n    EuiButtonIcon,\r\n    EuiFlexItem,\r\n    EuiFlexGroup\r\n} from '@elastic/eui';\r\nimport { Popover, Dropdown } from \"antd\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { GrApps } from \"react-icons/gr\";\r\nimport { FaBeer } from 'react-icons/fa';\r\nimport { Button } from \"antd\";\r\nimport classNames from \"classnames\";\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    svg: {\r\n        cursor: \"pointer\",\r\n        verticalAlign: 'middle',\r\n        '& path': {\r\n            stroke: \"#0050b3\",\r\n            strokeWidth: \"2px\"\r\n        },\r\n        '&:active': {\r\n            transform: \"scale(0.8)\",\r\n            boxShadow: \"1px 1px 5px rgba(0, 0, 0, 0.24)\"\r\n        },\r\n        '&:hover': {\r\n            '& path': {\r\n                stroke: \"#1890ff\",\r\n                strokeWidth: \"2px\"\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ({ content, trigger = [\"click\"], ...rest }) => {\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <Dropdown overlay={content} placement=\"bottomLeft\" trigger={trigger}>\r\n            <div>\r\n                <IconContext.Provider value={{ className: classes.svg }}>\r\n                    <GrApps />\r\n                </IconContext.Provider>\r\n            </div>\r\n        </Dropdown>\r\n\r\n\r\n    );\r\n}","import React from 'react';\r\nimport { Tag } from \"antd\";\r\nimport classNames from \"classnames\";\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    tag: {\r\n        cursor: \"pointer\",\r\n        '&:active': {\r\n            transform: \"scale(0.9)\",\r\n            boxShadow: \"1px 1px 5px rgba(0, 0, 0, 0.24)\"\r\n        },\r\n        '&:hover': {\r\n            opacity:.8\r\n        }\r\n    }\r\n})\r\n\r\nexport default ({className, children, ...rest}) => {\r\n    const classes = useStyles();\r\n    const css = classNames(className, classes.tag);\r\n    return (\r\n        <Tag className={css} {...rest}>{children}</Tag>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, Suspense, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken, fetchPostBlob } from \"utils/fetch\";\r\nimport { API_URL, GTIN } from \"config\";\r\nimport { useDataAPI } from \"utils/useDataAPI\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { getFilterRangeValues, getFilterValue, isValue } from 'utils';\r\n\r\nimport FormManager, { FieldLabel, FieldSet as OldFieldSet, FilterTags, AutoCompleteField as OldAutoCompleteField, useMessages, DropDown } from \"components/form\";\r\nimport { FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, InputAddon, SelectField, TitleForm, WrapperForm, SelectDebounceField, AutoCompleteField, RangeDateField, FilterDrawer } from \"components/formLayout\";\r\nimport Drawer from \"components/Drawer\";\r\nimport Table, { setColumns } from \"components/table\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport Portal from \"components/portal\";\r\nimport MoreFilters from 'assets/morefilters.svg'\r\nimport SubLayout from \"components/SubLayout\";\r\nimport Container from \"components/container\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport ProgressBar from \"components/ProgressBar\";\r\nimport ActionButton from \"components/ActionButton\";\r\nimport TagButton from \"components/TagButton\";\r\nimport { GrStorage } from \"react-icons/gr\";\r\nimport { RiRefreshLine } from \"react-icons/ri\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\n\r\nimport { FcCancel, FcClock, FcAdvance, FcUnlock, FcTodoList } from \"react-icons/fc\";\r\nimport YScroll from \"components/YScroll\";\r\n\r\nconst FormOFabricoValidar = React.lazy(() => import('./planeamento/ordemFabrico/FormOFabricoValidar'));\r\nconst FormMenuActions = React.lazy(() => import('./currentline/FormMenuActions'));\r\nimport { SocketContext } from './App';\r\n\r\n\r\nimport { Alert, Input, Space, Typography, Form, Button, Menu, Dropdown, Switch, Select, Tag, Tooltip, Popconfirm, notification, Spin, Modal } from \"antd\";\r\nimport { FilePdfTwoTone, FileExcelTwoTone, FileWordTwoTone, FileFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n\r\nimport Icon, { ExclamationCircleOutlined, InfoCircleOutlined, SearchOutlined, UserOutlined, DownOutlined, ProfileOutlined, RightOutlined, ClockCircleOutlined, CloseOutlined, CheckCircleOutlined, SyncOutlined, CheckOutlined, EllipsisOutlined, MenuOutlined, LoadingOutlined, UnorderedListOutlined } from \"@ant-design/icons\";\r\nconst ButtonGroup = Button.Group;\r\nimport { DATE_FORMAT, DATETIME_FORMAT, THICKNESS } from 'config';\r\nimport { VerticalSpace } from 'components/formLayout';\r\nconst { Title } = Typography;\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst filterRules = (keys) => {\r\n    return getSchema({\r\n        //field1: Joi.string().label(\"Designação\")\r\n    }, keys).unknown(true);\r\n}\r\n\r\nconst filterSchema = ({ ordersField, customersField, itemsField, ordemFabricoStatusField }) => [\r\n    { f_ofabrico: { label: \"Ordem de Fabrico\" } },\r\n    { f_agg: { label: \"Agregação Ordem de Fabrico\" } },\r\n    { fofstatus: { label: \"Estado\", field: ordemFabricoStatusField, initialValue: 'Todos', ignoreFilterTag: (v) => v === 'Todos' } },\r\n    { fmulti_order: { label: \"Nº Encomenda/Nº Proforma\", field: ordersField } },\r\n    { fmulti_customer: { label: \"Nº/Nome de Cliente\", field: customersField } },\r\n    { fmulti_item: { label: \"Cód/Designação Artigo\", field: itemsField } },\r\n    { forderdate: { label: \"Data Encomenda\", field: { type: \"rangedate\", size: 'small' } } },\r\n    { fstartprevdate: { label: \"Data Prevista Início\", field: { type: \"rangedate\", size: 'small' } } },\r\n    { fendprevdate: { label: \"Data Prevista Fim\", field: { type: \"rangedate\", size: 'small' } } },\r\n\r\n    /* { SHIDAT_0: { label: \"Data Expedição\", field: { type: \"rangedate\" } } },\r\n    { LASDLVNUM_0: { label: \"Nº Última Expedição\" } },\r\n    { ofstatus: { label: \"Ordem de Fabrico: Estado\", field: ordemFabricoStatusField, ignoreFilterTag: (v) => v === 'all' } } */\r\n];\r\n\r\n//const filterSchema = ({ /*field_multi, field_daterange, field*/ }) => [\r\n/*{ field1: { label: \"field\", field: field } },\r\n{ field2: { label: \"Date Range\", field: { type: \"rangedate\" } } },\r\n{ field3: { label: \"Multi\", field: field_multi } }*/\r\n//];\r\n\r\nconst ToolbarTable = ({ form, dataAPI, setFlyoutStatus, flyoutStatus, ordemFabricoStatusField }) => {\r\n\r\n    const onChange = () => {\r\n        form.submit();\r\n    }\r\n\r\n    const leftContent = (\r\n        <>\r\n            {/* <Button type=\"primary\" size=\"small\" disabled={flyoutStatus.visible ? true : false} onClick={() => setFlyoutStatus(prev => ({ ...prev, visible: !prev.visible }))}>Flyout</Button> */}\r\n        </>\r\n    );\r\n\r\n    const rightContent = (\r\n        <Space>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", whiteSpace: \"nowrap\" }}>\r\n\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", whiteSpace: \"nowrap\" }}>\r\n                <Form form={form} initialValues={{ fofstatus: \"Todos\" }}>\r\n                    <FormLayout id=\"tbt-of\" schema={schema}>\r\n                        <Field name=\"fofstatus\" label={{ enabled: true, width: \"60px\", text: \"Estado\", pos: \"left\" }}>{ordemFabricoStatusField({ onChange })}</Field>\r\n                    </FormLayout>\r\n                </Form>\r\n            </div>\r\n        </Space>\r\n    );\r\n    return (\r\n        <Toolbar left={leftContent} right={rightContent} />\r\n    );\r\n}\r\n\r\n\r\n\r\nconst GlobalSearch = ({ form, dataAPI, columns, setShowFilter, showFilter, ordemFabricoStatusField } = {}) => {\r\n    const [formData, setFormData] = useState({});\r\n    const [changed, setChanged] = useState(false);\r\n    const onFinish = (type = \"filter\", values = null) => {\r\n        if (values === null || values === undefined) {\r\n            values = form.getFieldsValue(true);\r\n        }\r\n        switch (type) {\r\n            case \"filter\":\r\n                (!changed) && setChanged(true);\r\n                const _values = {\r\n                    ...values,\r\n                    f_ofabrico: getFilterValue(values?.f_ofabrico, 'any'),\r\n                    f_agg: getFilterValue(values?.f_agg, 'any'),\r\n                    fmulti_customer: getFilterValue(values?.fmulti_customer, 'any'),\r\n                    fmulti_order: getFilterValue(values?.fmulti_order, 'any'),\r\n                    fmulti_item: getFilterValue(values?.fmulti_item, 'any'),\r\n                    forderdate: getFilterRangeValues(values[\"forderdate\"]?.formatted),\r\n                    fstartprevdate: getFilterRangeValues(values[\"fstartprevdate\"]?.formatted),\r\n                    fendprevdate: getFilterRangeValues(values[\"fendprevdate\"]?.formatted)\r\n                };\r\n                dataAPI.addFilters(_values);\r\n                dataAPI.first();\r\n                dataAPI.fetchPost();\r\n                break;\r\n        }\r\n    };\r\n\r\n    const onValuesChange = (type, changedValues, allValues) => {\r\n        switch (type) {\r\n            case \"filter\":\r\n                form.setFieldsValue(allValues);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const fetchCustomers = async (value) => {\r\n        const { data: { rows } } = await fetchPost({ url: `${API_URL}/sellcustomerslookup/`, pagination: { limit: 10 }, filter: { [\"fmulti_customer\"]: `%${value.replaceAll(' ', '%%')}%` } });\r\n        return rows;\r\n    }\r\n    const fetchOrders = async (value) => {\r\n        const { data: { rows } } = await fetchPost({ url: `${API_URL}/sellorderslookup/`, pagination: { limit: 10 }, filter: { [\"fmulti_order\"]: `%${value.replaceAll(' ', '%%')}%` } });\r\n        console.log(\"FETECHED\", rows)\r\n        return rows;\r\n    }\r\n    const fetchItems = async (value) => {\r\n        const { data: { rows } } = await fetchPost({ url: `${API_URL}/sellitemslookup/`, pagination: { limit: 10 }, filter: { [\"fmulti_item\"]: `%${value.replaceAll(' ', '%%')}%` } });\r\n        return rows;\r\n    }\r\n\r\n    const customersField = () => (\r\n        <AutoCompleteField\r\n            placeholder=\"Cliente\"\r\n            size=\"small\"\r\n            keyField=\"BPCNAM_0\"\r\n            textField=\"BPCNAM_0\"\r\n            dropdownMatchSelectWidth={250}\r\n            allowClear\r\n            onPressEnter={onFinish}\r\n            fetchOptions={fetchCustomers}\r\n        />\r\n    );\r\n    const ordersField = () => (\r\n        <AutoCompleteField\r\n            placeholder=\"Encomenda/Prf\"\r\n            size=\"small\"\r\n            keyField=\"SOHNUM_0\"\r\n            textField=\"computed\"\r\n            dropdownMatchSelectWidth={250}\r\n            allowClear\r\n            fetchOptions={fetchOrders}\r\n        />\r\n    );\r\n    const itemsField = () => (\r\n        <AutoCompleteField\r\n            placeholder=\"Artigo\"\r\n            size=\"small\"\r\n            keyField=\"ITMREF_0\"\r\n            textField=\"computed\"\r\n            dropdownMatchSelectWidth={250}\r\n            allowClear\r\n            fetchOptions={fetchItems}\r\n        />\r\n    );\r\n\r\n    const downloadFile = (data, filename, mime, bom) => {\r\n        var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\r\n        var blob = new Blob(blobData, { type: mime || 'application/octet-stream' });\r\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n            // IE workaround for \"HTML7007: One or more blob URLs were\r\n            // revoked by closing the blob for which they were created.\r\n            // These URLs will no longer resolve as the data backing\r\n            // the URL has been freed.\"\r\n            window.navigator.msSaveBlob(blob, filename);\r\n        }\r\n        else {\r\n            var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\r\n            var tempLink = document.createElement('a');\r\n            tempLink.style.display = 'none';\r\n            tempLink.href = blobURL;\r\n            tempLink.setAttribute('download', filename);\r\n\r\n            // Safari thinks _blank anchor are pop ups. We only want to set _blank\r\n            // target if the browser does not support the HTML5 download attribute.\r\n            // This allows you to download files in desktop safari if pop up blocking\r\n            // is enabled.\r\n            if (typeof tempLink.download === 'undefined') {\r\n                tempLink.setAttribute('target', '_blank');\r\n            }\r\n\r\n            document.body.appendChild(tempLink);\r\n            tempLink.click();\r\n\r\n            // Fixes \"webkit blob resource error 1\"\r\n            setTimeout(function () {\r\n                document.body.removeChild(tempLink);\r\n                window.URL.revokeObjectURL(blobURL);\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    const menu = (\r\n        <Menu onClick={(v) => exportFile(v)}>\r\n            <Menu.Item key=\"pdf\" icon={<FilePdfTwoTone twoToneColor=\"red\" />}>Pdf</Menu.Item>\r\n            <Menu.Item key=\"excel\" icon={<FileExcelTwoTone twoToneColor=\"#52c41a\" />}>Excel</Menu.Item>\r\n            <Menu.Item key=\"word\" icon={<FileWordTwoTone />}>Word</Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const exportFile = async (type) => {\r\n        const requestData = dataAPI.getPostRequest();\r\n        requestData.parameters = {\r\n            ...requestData.parameters,\r\n            \"config\": \"default\",\r\n            \"orientation\": \"landscape\",\r\n            \"template\": \"TEMPLATES-LIST/LIST-A4-${orientation}\",\r\n            \"title\": \"Ordens de Fabrico\",\r\n            \"export\": type.key,\r\n            cols: columns\r\n        }\r\n        const response = await fetchPostBlob(requestData);\r\n        switch (type.key) {\r\n            case \"pdf\":\r\n                downloadFile(response.data, `list-${new Date().toJSON().slice(0, 10)}.pdf`);\r\n                break;\r\n            case \"excel\":\r\n                downloadFile(response.data, `list-${new Date().toJSON().slice(0, 10)}.xlsx`);\r\n                break;\r\n            case \"word\":\r\n                downloadFile(response.data, `list-${new Date().toJSON().slice(0, 10)}.docx`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <FilterDrawer schema={filterSchema({ form, ordersField, customersField, itemsField, ordemFabricoStatusField })} filterRules={filterRules()} form={form} width={350} setShowFilter={setShowFilter} showFilter={showFilter} />\r\n            <Form form={form} name={`fps`} onFinish={(values) => onFinish(\"filter\", values)} onValuesChange={onValuesChange}>\r\n                <FormLayout\r\n                    id=\"LAY-OFFLIST\"\r\n                    layout=\"horizontal\"\r\n                    style={{ width: \"700px\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{ guides: false, wide: [3, 3, 3, 4, 1.5, 1.5], style: { marginLeft: \"2px\", alignSelf: \"end\" } }}\r\n                    fieldSet={{ guides: false, wide: 16, margin: false, layout: \"horizontal\", overflow: false }}\r\n                >\r\n                    <Field name=\"fmulti_customer\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Cliente\", pos: \"top\" }}>\r\n                        {customersField()}\r\n                    </Field>\r\n                    <Field name=\"fmulti_order\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Encomenda/Prf\", pos: \"top\" }}>\r\n                        {ordersField()}\r\n                    </Field>\r\n                    <Field name=\"fmulti_item\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Artigo\", pos: \"top\" }}>\r\n                        {itemsField()}\r\n                    </Field>\r\n                    <Field name=\"forderdate\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Data Encomenda\", pos: \"top\" }}>\r\n                        <RangeDateField size='small' />\r\n                    </Field>\r\n                    <FieldItem label={{ enabled: false }}>\r\n                        <ButtonGroup size='small' style={{ marginLeft: \"5px\" }}>\r\n                            <Button style={{ padding: \"0px 3px\" }} onClick={() => form.submit()}><SearchOutlined /></Button>\r\n                            <Button style={{ padding: \"0px 3px\" }}><MoreFilters style={{ fontSize: \"16px\", marginTop: \"2px\" }} onClick={() => setShowFilter(prev => !prev)} /></Button>\r\n                            {/* <Dropdown overlay={menu}>\r\n                            <Button style={{ padding: \"3px\" }}><DownOutlined /></Button>\r\n                        </Dropdown> */}\r\n                        </ButtonGroup>\r\n                    </FieldItem>\r\n                    <FieldItem label={{ enabled: false }}><Dropdown overlay={menu}>\r\n                        <Button size=\"small\" icon={<FileFilled />}><DownOutlined /></Button>\r\n                    </Dropdown>\r\n                    </FieldItem>\r\n                </FormLayout>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\n// const TitlePopup = ({ status, action, ofabrico }) => {\r\n//     /*     if (ativa == 1 && completa == 0){\r\n//             return <div><b>Finalizar</b> a Ordem de Fabrico?</div>\r\n//         }\r\n//         if (ativa == 0 && completa == 0){\r\n//             return <div><b>Iniciar</b> a Ordem de Fabrico?</div>\r\n//         } */\r\n//     return (\r\n//         <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n//             <div><ExclamationCircleOutlined /></div>\r\n//             <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n//                 <div><h3><b style={{ textTransform: \"capitalize\" }}>{action}</b> a Ordem de Fabrico?</h3></div>\r\n//                 <div style={{ color: \"#1890ff\" }}>{ofabrico}</div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n\r\n// }\r\n\r\n\r\n/* const menu = (action, showPopconfirm) => {\r\n    return (\r\n        <Menu onClick={(k) => showPopconfirm(k.key)}>\r\n            {action.includes('ignorar') &&\r\n                <Menu.Item key=\"ignorar\" icon={<FcCancel size=\"18px\" />}>Ignorar</Menu.Item>\r\n            }\r\n            {action.includes('reabrir') &&\r\n                <Menu.Item key=\"reabrir\" icon={<FcUnlock size=\"18px\" />}>Reabrir</Menu.Item>\r\n            }\r\n            {action.includes('suspender') &&\r\n                <Menu.Item key=\"suspender\" icon={<FcClock size=\"18px\" />}>A Aguardar...</Menu.Item>\r\n            }\r\n            {action.includes('iniciar') &&\r\n                <Menu.Item key=\"iniciar\" icon={<FcAdvance size=\"18px\" />}>Em Curso...</Menu.Item>\r\n            }\r\n        </Menu>\r\n    );\r\n} */\r\n\r\n\r\nconst ColumnProgress = ({ record, type }) => {\r\n    let current, total;\r\n    let showProgress = (record.ativa == 1 && record.completa == 0) ? true : false;\r\n    if (type === 1) {\r\n        current = record.n_paletes_produzidas;\r\n        total = record.num_paletes_produzir;\r\n    } else if (type === 2) {\r\n        current = record.n_paletes_stock_in;\r\n        total = record.num_paletes_stock;\r\n    } else if (type === 3) {\r\n        current = record.n_paletes_produzidas + record.n_paletes_stock_in;\r\n        total = record.num_paletes_produzir + record.num_paletes_stock;\r\n    }\r\n\r\n    return (<>\r\n        {showProgress ?\r\n            <ProgressBar value={current} max={total} />\r\n            : <div style={{ textAlign: \"center\" }}>{current}/{total}</div>}\r\n    </>);\r\n}\r\n\r\nconst schemaConfirm = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        produto_cod: Joi.string().label(\"Designação do Produto\").required(),\r\n        artigo_formu: Joi.string().label(\"Fórmula\").required(),\r\n        artigo_nw1: Joi.string().label(\"Nonwoven 1\").required(),\r\n        artigo_width: Joi.number().integer().min(1).max(5000).label(\"Largura\").required(),\r\n        artigo_diam: Joi.number().integer().min(1).max(5000).label(\"Diâmetro\").required(),\r\n        artigo_core: Joi.number().integer().valid(3, 6).label(\"Core\").required(),\r\n        artigo_gram: Joi.number().integer().min(1).max(1000).label(\"Gramagem\").required(),\r\n        artigo_thickness: Joi.number().integer().min(0).max(5000).label(\"Espessura\").required()\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst TitleConfirm = ({ status, action, ofabrico }) => {\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"10px\", alignItems: \"center\" }}>\r\n            <div><ExclamationCircleOutlined style={{ color: \"#faad14\" }} /></div>\r\n            <div style={{ fontSize: \"14px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                <div><b style={{ textTransform: \"capitalize\" }}>{action}</b> Ordem de Fabrico?</div>\r\n                <div style={{ color: \"#1890ff\" }}>{ofabrico}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ContentConfirm = ({ status, temp_ofabrico, cliente_cod, cliente_nome, iorder, item, item_nome, ofabrico, produto_id, produto_cod, action }) => {\r\n\r\n    /*     \r\n        useEffect(() => {\r\n            console.log(\"ENTREIIII NO CONTENT CONFIRM\")\r\n    \r\n        },[ofabrico]); */\r\n\r\n    if (produto_id) {\r\n        return (<div>Confirmar a Ordem de Fabrico:\r\n            <ul>\r\n                <li>Produto <b>{produto_cod}</b></li>\r\n                <li>Artigo <b>{item}</b></li>\r\n                <li>Des.Artigo <b>{item_nome}</b></li>\r\n                {iorder && <li>Encomenda <b>{iorder}</b></li>}\r\n                {iorder && <li>Cliente <b>{cliente_nome}</b></li>}\r\n            </ul>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                <li> Artigo <b>{item}</b></li>\r\n                <li>Des.Artigo <b>{item_nome}</b></li>\r\n                {iorder && <li>Encomenda <b>{iorder}</b></li>}\r\n                {iorder && <li>Cliente <b>{cliente_nome}</b></li>}\r\n            </ul>\r\n            <div>Para Validar a Ordem de Fabrico tem de Confirmar/Preencher os seguintes dados:</div>\r\n            <VerticalSpace />\r\n            <FormLayout\r\n                id=\"LAY-PROD\"\r\n                guides={false}\r\n                layout=\"vertical\"\r\n                style={{ width: \"100%\", padding: \"0px\" }}\r\n                schema={schemaConfirm}\r\n                fieldStatus={{}}\r\n                field={{ forInput: true, wide: [16], alert: { pos: \"right\", tooltip: true, container: false } }}\r\n                fieldSet={{ guides: false, wide: 16 }}\r\n            >\r\n                <FieldSet>\r\n                    <Field name=\"produto_cod\" label={{ enabled: false }}><Input placeholder=\"Designação do Produto\" size=\"small\" /></Field>\r\n                </FieldSet>\r\n                <FieldSet field={{ wide: [4, 4, 4, 4], margin: \"2px\" }}>\r\n                    <Field required={false} label={{ text: <Tooltip title=\"O código Gtin se deixado em branco será calculado automáticamente\" color=\"blue\"><div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", gap: \"3px\" }}>Gtin<InfoCircleOutlined style={{ color: \"#096dd9\" }} /></div></Tooltip> }} name=\"artigo_gtin\"><Input size=\"small\" /></Field>\r\n                    <Field required={true} label={{ text: \"Fórmula\" }} name=\"artigo_formu\"><Input size=\"small\" /></Field>\r\n                    <Field required={true} label={{ text: \"Nw1\" }} name=\"artigo_nw1\"><Input size=\"small\" /></Field>\r\n                    <Field required={false} label={{ text: \"Nw2\" }} name=\"artigo_nw2\"><Input size=\"small\" /></Field>\r\n                </FieldSet>\r\n                <FieldSet field={{ wide: [3, 3, 3, 3, 3, '*'] }}>\r\n                    <Field required={true} label={{ text: \"Largura\" }} name=\"artigo_width\"><InputAddon size=\"small\" addonAfter={<b>mm</b>} maxLength={4} /></Field>\r\n                    <Field required={true} label={{ text: \"Diâmetro\" }} name=\"artigo_diam\"><InputAddon size=\"small\" addonAfter={<b>mm</b>} maxLength={4} /></Field>\r\n                    <Field required={true} label={{ text: \"Core\" }} name=\"artigo_core\"><InputAddon size=\"small\" addonAfter={<b>''</b>} maxLength={1} /></Field>\r\n                    <Field required={true} label={{ text: \"Gramagem\" }} name=\"artigo_gram\"><InputAddon size=\"small\" addonAfter={<b>mm</b>} maxLength={4} /></Field>\r\n                    <Field required={true}\r\n                        label={{\r\n                            text: <Tooltip title=\"A espessura é usada como valor de referência, na conversão de metros&#xB2; -> metros lineares.\" color=\"blue\">\r\n                                <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", gap: \"3px\" }}>Espessura<InfoCircleOutlined style={{ color: \"#096dd9\" }} /></div>\r\n                            </Tooltip>\r\n                        }}\r\n                        name=\"artigo_thickness\">\r\n                        <InputAddon size=\"small\" addonAfter={<b>&#x00B5;</b>} maxLength={4} />\r\n                    </Field>\r\n                </FieldSet>\r\n            </FormLayout>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst PromiseConfirm = ({ showConfirm, setShowConfirm }) => {\r\n    const [form] = Form.useForm();\r\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n    const [modalText, setModalText] = React.useState('Content of the modal');\r\n    const { status, temp_ofabrico, cliente_cod, cliente_nome, iorder, item, item_nome, ofabrico, produto_id, produto_cod, action, onAction } = showConfirm.data;\r\n    const [formStatus, setFormStatus] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!produto_id && ofabrico) {\r\n            let artigo = { artigo_thickness: THICKNESS, produto_cod: undefined, artigo_gtin: undefined, artigo_core: undefined, artigo_formu: undefined, artigo_nw1: undefined, artigo_nw2: undefined, artigo_width: undefined, artigo_diam: undefined, artigo_gram: undefined };\r\n            const designacao = item_nome.split(' ').reverse();\r\n            for (let v of designacao) {\r\n                if (v.includes(\"''\") || v.includes(\"'\")) {\r\n                    artigo[\"artigo_core\"] = v.replaceAll(\"'\", \"\");\r\n                    continue;\r\n                }\r\n                if (v.toUpperCase().startsWith('H')) {\r\n                    artigo[\"artigo_formu\"] = v.toUpperCase();\r\n                    continue;\r\n                }\r\n                if (v.toUpperCase().startsWith('ELA-')) {\r\n                    artigo[\"artigo_nw1\"] = v.toUpperCase();\r\n                    continue;\r\n                }\r\n                if (v.toLowerCase().startsWith('l')) {\r\n                    artigo[\"artigo_width\"] = v.toLowerCase().replaceAll(\"l\", \"\");\r\n                    continue;\r\n                }\r\n                if (v.toLowerCase().startsWith('d')) {\r\n                    artigo[\"artigo_diam\"] = v.toLowerCase().replaceAll(\"d\", \"\");\r\n                    continue;\r\n                }\r\n                if (v.toLowerCase().startsWith('g') || (!isNaN(v) && Number.isInteger(parseFloat(v)))) {\r\n                    artigo[\"artigo_gram\"] = v.toLowerCase().replaceAll(\"g\", \"\");\r\n                    continue;\r\n                }\r\n            }\r\n            setFormStatus({});\r\n            form.setFieldsValue({ ...artigo });\r\n        }\r\n    }, [ofabrico]);\r\n\r\n\r\n\r\n    // const confirm = async () => {\r\n    //     setConfirmLoading(true);\r\n    //     const response = await onAction(rowKey, record, action, () => { });\r\n    //     //const { ofabrico, ofabrico_sgp, ativa, completa } = record;\r\n    //     //const response = await fetchPost({ url: `${API_URL}/setofabricostatus/`, parameters: { ofabrico, ofabrico_sgp, ativa, completa } });\r\n    //     setConfirmLoading(false);\r\n    //     setEstadoRecord(false);\r\n    //     /*         if (response.data.status !== \"error\") {\r\n    //                 reloadParent();\r\n    //             } */\r\n    //     //openNotificationWithIcon(response.data);\r\n    // }\r\n\r\n    // const handleOk = (values) => {\r\n    //     console.log(values);\r\n    //     /* setModalText('The modal will be closed after two seconds');\r\n    //     setConfirmLoading(true);\r\n    //     setTimeout(() => {\r\n    //         setShowConfirm({ show: false, data: {} });\r\n    //         setConfirmLoading(false);\r\n    //     }, 2000); */\r\n    // };\r\n\r\n    const handleCancel = () => {\r\n        setShowConfirm({ show: false, data: {} });\r\n    };\r\n\r\n    const onFinish = async (values) => {\r\n        let response;\r\n        let v;\r\n\r\n        if (form.getFieldValue('type') === 'ignorar' && ofabrico) {\r\n            response = await onAction(showConfirm.data, 'ignorar');\r\n        } else if (!produto_id && ofabrico) {\r\n            v = schemaConfirm().validate(values, { abortEarly: false });\r\n            if (!v.error) {\r\n                response = await onAction(showConfirm.data, action, { ...values, artigo_nome: item_nome, main_gtin: GTIN });\r\n            }\r\n        } else {\r\n            response = await onAction(showConfirm.data, action);\r\n        }\r\n        if (response?.data?.status === \"error\") {\r\n            setFormStatus({ error: [{ message: response.data.title }] });\r\n        } else {\r\n            if (!v?.error) {\r\n                setShowConfirm({ show: false, data: {} });\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = (type = 'validar') => {\r\n        form.setFieldsValue({ type });\r\n        form.submit();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<TitleConfirm status={status} action={action} ofabrico={ofabrico} />}\r\n                visible={showConfirm.show}\r\n                //onOk={() => form.submit()}\r\n                centered\r\n                confirmLoading={confirmLoading}\r\n                //onCancel={handleCancel}\r\n                maskClosable={false}\r\n                footer={[\r\n                    <Button key=\"1\" danger type=\"primary\" onClick={() => onSubmit('ignorar')}>Ignorar</Button>,\r\n                    <Button key=\"2\" onClick={handleCancel}>Cancelar</Button>,\r\n                    <Button key=\"3\" type=\"primary\" onClick={onSubmit}>Validar</Button>\r\n                ]}\r\n            >\r\n                <Form form={form} name={`fpi`} onFinish={onFinish} component=\"form\">\r\n                    <AlertMessages formStatus={formStatus} />\r\n                    <ContentConfirm {...showConfirm.data} />\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nconst ColumnEstado = ({ record, onAction, showConfirm, setShowConfirm, showMenuActions, setShowMenuActions }) => {\r\n    const { status, temp_ofabrico } = record;\r\n    const [action, setAction] = useState();\r\n\r\n    const onShowConfirm = (action) => {\r\n        const { status, temp_ofabrico, cliente_cod, cliente_nome, iorder, item, item_nome, ofabrico, produto_id, produto_cod, qty_item, item_thickness, item_diam, item_core, item_width, item_id } = record;\r\n        setShowConfirm({ show: true, data: { status, temp_ofabrico, cliente_cod, cliente_nome, iorder, item, item_nome, ofabrico, produto_id, produto_cod, action, qty_item, item_thickness, item_diam, item_core, item_width, item_id, onAction } });\r\n    }\r\n    const onShowMenuActions = () => {\r\n        const { status, cod, temp_ofabrico_agg } = record;\r\n        setShowMenuActions({ show: true, data: { status, aggCod: cod, aggId: temp_ofabrico_agg, onAction } });\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            {((status == 0 || !status) && !temp_ofabrico) && <>\r\n                <TagButton onClick={() => onShowConfirm('validar')} style={{ width: \"98px\", textAlign: \"center\" }} icon={<CheckOutlined />} color=\"#108ee9\">Validar</TagButton>\r\n                {/*                 <Dropdown overlay={() => menu(['ignorar'], onShowConfirm)} trigger={['click']}>\r\n                    <TagButton>...</TagButton>\r\n                </Dropdown> */}\r\n            </>}\r\n            {((status == 1 || !status) && temp_ofabrico) && <>\r\n                <TagButton onClick={() => onAction(record, \"inpreparation\", () => { })} style={{ width: \"110px\", textAlign: \"center\" }} icon={<UnorderedListOutlined />} color=\"warning\">Em Elaboração</TagButton>\r\n            </>}\r\n            {(status == 2 && temp_ofabrico) && <>\r\n                <TagButton onClick={() => onShowMenuActions()} style={{ width: \"110px\", textAlign: \"center\" }} icon={<UnorderedListOutlined />} color=\"orange\">Na Produção</TagButton>\r\n            </>}\r\n            {/*             {status == 4 && <>\r\n                <TagButton onClick={() => showPopconfirm('finalizar')} style={{ width: \"98px\", textAlign: \"center\" }} icon={<SyncOutlined spin />} color=\"processing\">Em Curso</TagButton>\r\n                <Dropdown overlay={() => menu(['reabrir', 'suspender'], showPopconfirm)} trigger={['click']}>\r\n                    <TagButton>...</TagButton>\r\n                </Dropdown>\r\n            </>} */}\r\n            {status == 3 && <>\r\n                <TagButton onClick={() => onShowMenuActions()} style={{ width: \"105px\", textAlign: \"center\" }} icon={<SyncOutlined spin />} color=\"success\">Em Produção</TagButton>\r\n            </>}\r\n            {/*             {status == 3 && <>\r\n                <TagButton onClick={() => showPopconfirm('iniciar')} style={{ width: \"98px\", textAlign: \"center\" }} icon={<ClockCircleOutlined />} color=\"warning\">A Aguardar</TagButton>\r\n                <Dropdown overlay={() => menu(['iniciar', 'reabrir'], showPopconfirm)} trigger={['click']}>\r\n                    <TagButton>...</TagButton>\r\n                </Dropdown>\r\n            </>} */}\r\n            {status == 9 && <>\r\n                <Tag /* onClick={showPopConfirm}  */ style={{ width: \"98px\", textAlign: \"center\" }} color=\"error\">Finalizada</Tag>\r\n                {/*                 <Dropdown overlay={() => menu(['reabrir'], showPopconfirm)} trigger={['click']}>\r\n                    <TagButton>...</TagButton>\r\n                </Dropdown> */}\r\n            </>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst TitleMenuActions = ({ aggCod }) => {\r\n    const v = useContext(SocketContext);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => { }, [v]);\r\n\r\n    const onValidate = () => {\r\n        navigate('/app/validateReellings', { state: {} });\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"10px\", alignItems: \"center\" }}>\r\n            <div style={{ fontSize: \"14px\", display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                <Space>\r\n                    <div><b style={{ textTransform: \"capitalize\" }}></b>{aggCod}</div>\r\n                    {v !== null && <Alert onClick={onValidate} style={{ cursor: \"pointer\", padding: \"1px 15px\" }} message={<div><span style={{ fontSize: \"14px\", fontWeight: 700 }}>{JSON.parse(v.data).cnt}</span> Bobinagens por <Button size='small' style={{ paddingLeft: \"0px\" }} onClick={onValidate} type=\"link\">Validar.</Button></div>} type=\"warning\" showIcon />}\r\n                </Space>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MenuActions = ({ showMenuActions, setShowMenuActions }) => {\r\n    const [form] = Form.useForm();\r\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n    const [modalText, setModalText] = React.useState('Content of the modal');\r\n    const { aggId, aggCod } = showMenuActions.data;\r\n    const [formStatus, setFormStatus] = useState({});\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    const handleCancel = () => {\r\n        setShowMenuActions({ show: false, data: {} });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<TitleMenuActions aggCod={aggCod} />}\r\n                visible={showMenuActions.show}\r\n                centered\r\n                onCancel={handleCancel}\r\n                confirmLoading={confirmLoading}\r\n                maskClosable={true}\r\n                footer={null}\r\n                destroyOnClose={true}\r\n                bodyStyle={{ height: \"800px\", backgroundColor: \"#f0f0f0\" }}\r\n                width={\"90%\"}\r\n            >\r\n                <YScroll>\r\n                    <Suspense fallback={<></>}><FormMenuActions aggId={aggId} /></Suspense>\r\n                </YScroll>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n    const [showFilter, setShowFilter] = useState(false);\r\n    const [showValidar, setShowValidar] = useState({ show: false });\r\n    const [formFilter] = Form.useForm();\r\n    const dataAPI = useDataAPI({\r\n        payload: {\r\n            url: `${API_URL}/ofabricolist/`, parameters: {}, pagination: { enabled: true, page: 1, pageSize: 10 }, filter: {}, sort: [\r\n                /* { column: 'status', direction: 'ASC', options: \"NULLS FIRST\" },  */\r\n                { column: 'ofabrico', direction: 'DESC' },\r\n                /* { column: 'completa' }, { column: 'end_date', direction: 'DESC' } */\r\n            ]\r\n        }\r\n    });\r\n    const elFilterTags = document.getElementById('filter-tags');\r\n    const [flyoutStatus, setFlyoutStatus] = useState({ visible: false, fullscreen: false });\r\n    const flyoutFooterRef = useRef();\r\n    const [estadoRecord, setEstadoRecord] = useState(false);\r\n\r\n    const [showConfirm, setShowConfirm] = useState({ show: false, data: {} });\r\n    const [showMenuActions, setShowMenuActions] = useState({ show: false, data: {} });\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        dataAPI.first();\r\n        dataAPI.fetchPost({ token: cancelFetch });\r\n        return (() => cancelFetch.cancel());\r\n    }, []);\r\n\r\n    const selectionRowKey = (record) => {\r\n        return `${record.ofabrico}-${isValue(record.item, undefined)}-${isValue(record.iorder, undefined)}`;\r\n    }\r\n\r\n    const reloadFromChild = () => {\r\n        dataAPI.fetchPost();\r\n    }\r\n\r\n    const onEstadoChange = async (record, action, data) => {\r\n        const { cliente_cod, cliente_nome, iorder, item, ofabrico, produto_id, qty_item, item_diam, item_core, item_thickness, item_width, item_id } = record;\r\n        let response;\r\n        switch (action) {\r\n            case 'validar':\r\n                setLoading(true);\r\n                response = await fetchPost({\r\n                    url: `${API_URL}/savetempordemfabrico/`,\r\n                    parameters: { cliente_cod, cliente_nome, iorder, item, ofabrico_cod: ofabrico, produto_id, artigo: data, qty_item, artigo_diam: item_diam, artigo_core: item_core, artigo_width: item_width, item_id, artigo_thickness: item_thickness }\r\n                });\r\n                if (response.data.status !== \"error\") {\r\n                    dataAPI.fetchPost();\r\n                }\r\n                setLoading(false);\r\n                return response;\r\n            case 'ignorar':\r\n                setLoading(true);\r\n                response = await fetchPost({ url: `${API_URL}/ignorarordemfabrico/`, parameters: { ofabrico } });\r\n                if (response.data.status !== \"error\") {\r\n                    dataAPI.fetchPost();\r\n                }\r\n                setLoading(false);\r\n                return response;\r\n            case 'inpreparation':\r\n                setShowValidar(prev => ({ ...prev, show: !prev.show, record }));\r\n                break;\r\n            case 'reabrir':\r\n                console.log('reabrir', record);\r\n                break;\r\n            case 'iniciar':\r\n                console.log('iniciar', record);\r\n                break;\r\n            case 'finalizar':\r\n                console.log('finalizar', record);\r\n                break;\r\n            case 'suspender':\r\n                console.log('suspender', record);\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        /* setPopupEstadoRecord(rowKey);\r\n        console.log(\"--->>\", rowKey,action, record); */\r\n    }\r\n\r\n    const columns = setColumns(\r\n        {\r\n            dataAPI,\r\n            data: dataAPI.getData().rows,\r\n            uuid: \"ofabricolist\",\r\n            include: {\r\n                ...((common) => (\r\n                    {\r\n                        cod: { title: \"Agg\", width: 140, render: v => <span style={{ color: \"#096dd9\" }}>{v}</span>, ...common },\r\n                        ofabrico: { title: \"Ordem Fabrico\", width: 140, render: v => <b>{v}</b>, ...common },\r\n                        prf: { title: \"PRF\", width: 140, render: v => <b>{v}</b>, ...common },\r\n                        iorder: { title: \"Encomenda(s)\", width: 140, ...common },\r\n                        /* ofabrico_sgp: { title: \"OF.SGP\", width: 60, render: v => <>{v}</>, ...common }, */\r\n                        estado: { title: \"\", width: 125, render: (v, r) => <ColumnEstado record={r} showMenuActions={showMenuActions} setShowMenuActions={setShowMenuActions} showConfirm={showConfirm} setShowConfirm={setShowConfirm} onAction={onEstadoChange} /*    setEstadoRecord={setEstadoRecord} estadoRecord={estadoRecord} reloadParent={reloadFromChild} rowKey={selectionRowKey(r)} record={r} */ />, ...common },\r\n                        /* options: { title: \"\", sort: false, width: 25, render: (v, r) => <ActionButton content={<MenuActionButton record={r} />} />, ...common }, */\r\n                        //item: { title: \"Artigo(s)\", width: 140, render: v => <>{v}</>, ...common },\r\n                        item_nome: { title: \"Artigo(s)\", ellipsis: true, render: v => <div style={{ /* overflow:\"hidden\", textOverflow:\"ellipsis\" */whiteSpace: 'nowrap' }}>{v}</div>, ...common },\r\n                        cliente_nome: { title: \"Cliente(s)\", ellipsis: true, render: v => <div style={{ whiteSpace: 'nowrap' }}><b>{v}</b></div>, ...common },\r\n                        start_date: { title: \"Início Previsto\", ellipsis: true, render: (v, r) => <div style={{ whiteSpace: 'nowrap' }}><span>{dayjs((r.start_prev_date) ? r.start_prev_date : v).format(DATETIME_FORMAT)}</span></div>, ...common },\r\n                        end_date: { title: \"Fim Previsto\", ellipsis: true, render: (v, r) => <div style={{ whiteSpace: 'nowrap' }}><span>{(r.end_prev_date) && dayjs(r.end_prev_date).format(DATETIME_FORMAT)}</span></div>, ...common },\r\n                        //produzidas: { title: \"Produzidas\", width: 100, render: (v, r) => <ColumnProgress type={1} record={r} />, ...common },\r\n                        //pstock: { title: \"Para Stock\", width: 100, render: (v, r) => <ColumnProgress type={2} record={r} />, ...common },\r\n                        //total: { title: \"Total\", width: 100, render: (v, r) => <ColumnProgress type={3} record={r} />, ...common },\r\n                        /* details: {\r\n                            title: \"\", width: 50, render: (v, r) => <Space>\r\n                                {r.stock == 1 && <GrStorage title=\"Para Stock\" />}\r\n                                {r.retrabalho == 1 && <RiRefreshLine title=\"Para Retrabalho\" />}\r\n                            </Space>, table: \"sgp_op\", ...common\r\n                        } */\r\n\r\n\r\n                        //PRFNUM_0: { title: \"Prf\", width: '160px', ...common },\r\n                        //DSPTOTQTY_0: { title: \"Quantidade\", width: '160px', ...common }\r\n                        //COLUNA2: { title: \"Coluna 2\", width: '160px', render: v => dayjs(v).format(DATE_FORMAT), ...common },\r\n                        //COLUNA3: { title: \"Coluna 3\", width: '20%', render: v => <div style={{ whiteSpace: 'nowrap' }}><b>{v}</b></div>, ...common }\r\n                    }\r\n                ))({ idx: 1, optional: false })\r\n            },\r\n            exclude: []\r\n        }\r\n    );\r\n\r\n    const closeFlyout = () => {\r\n        setFlyoutStatus(prev => ({ ...prev, visible: false }));\r\n    }\r\n\r\n    const ordemFabricoStatusField = ({ onChange } = {}) => {\r\n        return (\r\n            <SelectField onChange={onChange} keyField=\"value\" valueField=\"label\" style={{ width: 150 }} options={\r\n                [{ value: \"Todos\", label: \"Todos\" },\r\n                { value: \"Por Validar\", label: \"Por validar\" },\r\n                { value: \"Em Elaboração\", label: \"Em Elaboração\" },\r\n                { value: \"Na Produção\", label: \"Na Produção\" },\r\n                { value: \"Em Produção\", label: \"Em Produção\" },\r\n                { value: \"Finalizada\", label: \"Finalizada\" }]\r\n            } />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} style={{ top: \"50%\", left: \"50%\", position: \"absolute\" }} >\r\n                <MenuActions showMenuActions={showMenuActions} setShowMenuActions={setShowMenuActions} />\r\n                <PromiseConfirm showConfirm={showConfirm} setShowConfirm={setShowConfirm} />\r\n                <Suspense fallback={<></>}><Drawer showWrapper={showValidar} setShowWrapper={setShowValidar} parentReload={dataAPI.fetchPost}><FormOFabricoValidar /></Drawer></Suspense>\r\n                {/* <ModalValidar showValidar={showValidar} setShowValidar={setShowValidar} /> */}\r\n                {/*                 <SubLayout flyoutWidth=\"700px\" flyoutStatus={flyoutStatus} style={{ height: \"100vh\" }}>\r\n                    <SubLayout.content> */}\r\n                <ToolbarTable form={formFilter} dataAPI={dataAPI} setFlyoutStatus={setFlyoutStatus} flyoutStatus={flyoutStatus} ordemFabricoStatusField={ordemFabricoStatusField} />\r\n                {elFilterTags && <Portal elId={elFilterTags}>\r\n                    <FilterTags form={formFilter} filters={dataAPI.getAllFilter()} schema={filterSchema} rules={filterRules()} />\r\n                </Portal>}\r\n                <Table\r\n                    title={<Title level={4}>Ordens de Fabrico</Title>}\r\n                    columnChooser={false}\r\n                    reload\r\n                    stripRows\r\n                    darkHeader\r\n                    size=\"small\"\r\n                    toolbar={<GlobalSearch columns={columns?.report} form={formFilter} dataAPI={dataAPI} setShowFilter={setShowFilter} showFilter={showFilter} ordemFabricoStatusField={ordemFabricoStatusField} />}\r\n                    selection={{ enabled: false, rowKey: record => selectionRowKey(record), onSelection: setSelectedRows, multiple: false, selectedRows, setSelectedRows }}\r\n                    paginationProps={{ pageSizeOptions: [10, 15, 20, 30] }}\r\n                    dataAPI={dataAPI}\r\n                    columns={columns}\r\n                    onFetch={dataAPI.fetchPost}\r\n                //scroll={{ x: '100%', y: \"75vh\", scrollToFirstRowOnChange: true }}\r\n                />\r\n                {/*                     </SubLayout.content>\r\n                    <SubLayout.flyout>\r\n                        <Container.Header fullScreen={false} setStatus={setFlyoutStatus} left={<Title level={4} style={{ marginBottom: \"0px\" }}>Title</Title>} />\r\n                        <Container.Body>\r\n\r\n                        </Container.Body> */}\r\n                {/* <Container.Footer right={<div ref={flyoutFooterRef}/>} /> */}\r\n                {/*                     </SubLayout.flyout>\r\n                </SubLayout>\r\n */}\r\n            </Spin>\r\n\r\n\r\n        </>\r\n    )\r\n}"],"names":["createUseStyles","progress","height","width","overflow","marginTop","backgroundColor","borderRadius","boxShadow","position","display","color","float","textAlign","fontSize","svg","cursor","verticalAlign","stroke","strokeWidth","transform","useStyles","tag","opacity","className","children","rest","classes","css","classNames","FormOFabricoValidar","React","FormMenuActions","ButtonGroup","Select","Modal","Button","Title","Typography","schema","keys","excludeKeys","getSchema","unknown","filterRules","filterSchema","ordersField","customersField","itemsField","f_ofabrico","label","f_agg","fofstatus","field","ordemFabricoStatusField","initialValue","ignoreFilterTag","v","fmulti_order","fmulti_customer","fmulti_item","forderdate","type","size","fstartprevdate","fendprevdate","ToolbarTable","form","dataAPI","setFlyoutStatus","flyoutStatus","leftContent","rightContent","style","flexDirection","whiteSpace","alignItems","initialValues","id","name","enabled","text","pos","onChange","submit","left","right","GlobalSearch","columns","setShowFilter","showFilter","useState","changed","setChanged","onFinish","values","getFieldsValue","_values","getFilterValue","getFilterRangeValues","formatted","addFilters","first","fetchPost","onValuesChange","changedValues","allValues","setFieldsValue","fetchCustomers","value","url","API_URL","pagination","limit","filter","replaceAll","rows","data","fetchOrders","fetchItems","placeholder","keyField","textField","dropdownMatchSelectWidth","allowClear","onPressEnter","fetchOptions","downloadFile","filename","mime","bom","blob","Blob","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","menu","onClick","exportFile","key","icon","FilePdfTwoTone","twoToneColor","FileExcelTwoTone","FileWordTwoTone","requestData","getPostRequest","parameters","cols","fetchPostBlob","response","Date","toJSON","slice","layout","padding","guides","wide","marginLeft","alignSelf","fieldSet","margin","required","center","SearchOutlined","prev","overlay","FileFilled","DownOutlined","schemaConfirm","produto_cod","Joi","artigo_formu","artigo_nw1","artigo_width","integer","min","max","artigo_diam","artigo_core","valid","artigo_gram","artigo_thickness","TitleConfirm","status","action","ofabrico","gap","ExclamationCircleOutlined","textTransform","ContentConfirm","temp_ofabrico","cliente_cod","cliente_nome","iorder","item","item_nome","produto_id","fieldStatus","forInput","alert","tooltip","container","title","InfoCircleOutlined","addonAfter","maxLength","PromiseConfirm","showConfirm","setShowConfirm","Form","confirmLoading","onAction","formStatus","setFormStatus","useEffect","artigo","THICKNESS","undefined","artigo_gtin","artigo_nw2","split","reverse","includes","toUpperCase","startsWith","toLowerCase","isNaN","Number","isInteger","parseFloat","getFieldValue","validate","abortEarly","error","artigo_nome","main_gtin","GTIN","message","show","onSubmit","visible","centered","maskClosable","footer","danger","component","ColumnEstado","record","setShowMenuActions","showMenuActions","onShowMenuActions","cod","temp_ofabrico_agg","aggCod","aggId","TagButton","qty_item","item_thickness","item_diam","item_core","item_width","item_id","onShowConfirm","CheckOutlined","UnorderedListOutlined","SyncOutlined","spin","TitleMenuActions","useContext","SocketContext","navigate","useNavigate","onValidate","state","fontWeight","JSON","parse","cnt","paddingLeft","showIcon","MenuActions","onCancel","destroyOnClose","bodyStyle","YScroll","Suspense","fallback","loading","setLoading","selectedRows","setSelectedRows","showValidar","setShowValidar","formFilter","useDataAPI","payload","page","pageSize","sort","column","direction","elFilterTags","getElementById","fullscreen","useRef","cancelFetch","cancelToken","token","cancel","common","onEstadoChange","ofabrico_cod","setColumns","getData","uuid","include","idx","optional","render","prf","estado","r","ellipsis","start_date","dayjs","start_prev_date","format","DATETIME_FORMAT","end_date","end_prev_date","exclude","valueField","options","spinning","indicator","LoadingOutlined","top","Drawer","showWrapper","setShowWrapper","parentReload","elId","filters","getAllFilter","rules","level","columnChooser","reload","stripRows","darkHeader","toolbar","report","selection","rowKey","isValue","selectionRowKey","onSelection","multiple","paginationProps","pageSizeOptions","onFetch"],"sourceRoot":""}