{"version":3,"file":"chunks/src_pages_planeamento_ordemFabrico_FormGamaOperatoria_jsx.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/planeamento/gamaOperatoria/FormGamaOperatoriaUpsert.jsx","webpack://sgp/./src/pages/planeamento/ordemFabrico/FormGamaOperatoria.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace, InputAddon } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber, DatePicker } from \"antd\";\r\nimport { PlusOutlined, VerticalAlignBottomOutlined } from '@ant-design/icons';\r\nimport { MdAdjust } from 'react-icons/md';\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, GAMAOPERATORIA } from 'config';\r\nimport { OFabricoContext } from '../ordemFabrico/FormOFabricoValidar';\r\nconst gamaOperatoriaItems = GAMAOPERATORIA.filter(v => !v?.disabled);\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        //designacao: Joi.string().label(\"Designação\").required()\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const ctx = useContext(OFabricoContext);\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.gamaoperatoria_id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n\r\n    const init = (lookup = false) => {\r\n        (async () => {\r\n            if (lookup) {\r\n\r\n            }\r\n            if (operation.key === \"update\") {\r\n                (setFormTitle) && setFormTitle({ title: `Editar Gama Operatória` });\r\n                form.setFieldsValue({ ...record.gamaOperatoria, ...record.gamaOperatoriaItems });\r\n            } else {\r\n                (setFormTitle) && setFormTitle({ title: `Nova Gama Operatória ${ctx.item_cod}`, subTitle: `${ctx.item_nome}` });\r\n                const initValues = {};\r\n                initValues[`nitems`] = gamaOperatoriaItems.length;\r\n                for (let [idx, v] of gamaOperatoriaItems.entries()) {\r\n                    initValues[`key-${idx}`] = v.key;\r\n                    initValues[`des-${idx}`] = v.designacao;\r\n                    initValues[`tolerancia-${idx}`] = v.tolerancia;\r\n                }\r\n                form.setFieldsValue(initValues);\r\n            }\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(true);\r\n    }, []);\r\n\r\n    const onValuesChange = (changedValues) => {\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const v = schema().validate(values, { abortEarly: false });\r\n\r\n        if (!v.error) {\r\n            let error = false;\r\n            for (let k in values) {\r\n                if (k !== 'designacao' && (values[k] === undefined || values[k] === null)) {\r\n                    error = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (error) {\r\n                status.error.push({ message: \"Os items da Gama Operatória têm de estar preenchidos!\" });\r\n            }\r\n            if (status.error.length === 0) {\r\n                const response = await fetchPost({ url: `${API_URL}/newgamaoperatoria/`, parameters: { ...form.getFieldsValue(true), produto_id: ctx.produto_id } });\r\n                if (response.data.status !== \"error\") {\r\n                    parentReload({ gamaoperatoria_id: record.gamaoperatoria_id }, \"init\");\r\n                }\r\n                setResultMessage(response.data);\r\n            }\r\n        }\r\n        setSubmitting(false);\r\n        setFormStatus(status);\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n        setSubmitting(false);\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setSubmitting(false);\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    const onSubmit = useCallback(async () => {\r\n        setSubmitting(true);\r\n        onFinish(form.getFieldsValue(true));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Criar Nova Gama Operatória</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`fps`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-GAMAOPERATORIA-UPSERT\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        {forInput && <>\r\n                            <FieldSet margin={false} field={{ wide: [6, 4] }}>\r\n                                <Field name=\"designacao\" label={{ enabled: false }}><Input placeholder=\"Designação\" size=\"small\" /></Field>\r\n                            </FieldSet>\r\n                            <VerticalSpace height=\"24px\" />\r\n                        </>\r\n                        }\r\n\r\n                        <FieldSet wide={16} margin={false} layout=\"vertical\">\r\n                            {gamaOperatoriaItems.map((v, idx) =>\r\n                                <FieldSet key={`gop-${idx}`} wide={16} field={{ wide: [5, 9, 2] }} margin={false}>\r\n                                    <FieldItem label={{ enabled: false }} style={{ fontSize: \"11px\" }}>\r\n                                        <b>{v.designacao}</b> ({v.unidade})\r\n                                    </FieldItem>\r\n                                    <FieldSet wide={9} margin={false}>\r\n                                        {[...Array(v.nvalues)].map((x, i) =>\r\n                                            <Field split={9} key={`${v.key}-${i}`} name={`v${v.key}-${i}`} label={{ enabled: false }}>\r\n                                                <InputNumber min={v.min} max={v.max} controls={false} size=\"small\" precision={v?.precision} />\r\n                                            </Field>\r\n                                        )}\r\n                                    </FieldSet>\r\n                                    <Field name={`tolerancia-${idx}`} label={{ enabled: false }}><InputNumber style={{ maxWidth: \"70px\" }} addonBefore=\"&plusmn;\" min={0} max={100} controls={false} size=\"small\" /></Field>\r\n                                </FieldSet>\r\n                            )}\r\n                        </FieldSet>\r\n\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button disabled={submitting} onClick={onSubmit} type=\"primary\">Guardar</Button>\r\n                        {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport { Button, Spin } from \"antd\";\r\nimport { LoadingOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport FormGamaOperatoriaUpsert from '../gamaOperatoria/FormGamaOperatoriaUpsert';\r\nimport { OFabricoContext } from './FormOFabricoValidar';\r\n\r\nconst Drawer = ({ showWrapper, setShowWrapper, parentReload }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n    const { record = {} } = showWrapper;\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type=\"drawer\"\r\n            destroyOnClose={true}\r\n            //width={width}\r\n            mask={true}\r\n            /* style={{ maginTop: \"48px\" }} */\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            width={800}\r\n            bodyStyle={{ height: \"450px\" /*  paddingBottom: 80 *//* , overflowY: \"auto\", minHeight: \"350px\", maxHeight: \"calc(100vh - 50px)\" */ }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n        >\r\n            <FormGamaOperatoriaUpsert setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} />\r\n        </WrapperForm>\r\n    );\r\n}\r\n\r\nconst loadGamasOperatoriasLookup = async ({ produto_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/gamasoperatoriaslookup/`, filter: { produto_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\nconst getGamaOperatoriaItems = async ({ gamaoperatoria_id, token }) => {\r\n    if (!gamaoperatoria_id) {\r\n        return [];\r\n    }\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/gamaoperatoriaitemsget/`, filter: { gamaoperatoria_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nexport default ({ changedValues }) => {\r\n    const { form, guides, schema, fieldStatus, ...ctx } = useContext(OFabricoContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [showForm, setShowForm] = useState({ show: false });\r\n    const [gamasOperatorias, setGamasOperatorias] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        loadData({ gamaoperatoria_id: form.getFieldValue(\"gamaoperatoria_id\"), token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Gama Operatória Cancelled\"));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        if (changedValues) {\r\n            if (\"gamaoperatoria_id\" in changedValues) {\r\n                setLoading(true);\r\n                loadData({ gamaoperatoria_id: changedValues.gamaoperatoria_id, token: cancelFetch });\r\n            }\r\n        }\r\n        return (() => cancelFetch.cancel(\"Form Gama Operatória Cancelled\"));\r\n    }, [changedValues]);\r\n\r\n    const loadData = (data = {}, type = \"init\") => {\r\n        const { gamaoperatoria_id, token } = data;\r\n        switch (type) {\r\n            case \"lookup\":\r\n                setLoading(true);\r\n                (async () => {\r\n                    setGamasOperatorias(await loadGamasOperatoriasLookup({ produto_id: ctx.produto_id, token }));\r\n                    setLoading(false);\r\n                })();\r\n                break;\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    let _gamasoperatorias = gamasOperatorias;\r\n                    if (ctx.produto_id) {\r\n                        _gamasoperatorias = await loadGamasOperatoriasLookup({ produto_id: ctx.produto_id, token });\r\n                        setGamasOperatorias(_gamasoperatorias);\r\n                    }\r\n                    if (gamaoperatoria_id) {\r\n                        const [gamaOperatoria] = _gamasoperatorias.filter(v => v.id === gamaoperatoria_id);\r\n                        const gamaOperatoriaItems = await getGamaOperatoriaItems({ gamaoperatoria_id, token });\r\n\r\n                        const fieldsValue = { nitems: gamaOperatoriaItems.length };\r\n                        for (let [i, v] of gamaOperatoriaItems.entries()) {\r\n                            fieldsValue[`key-${i}`] = v.item_key;\r\n                            fieldsValue[`des-${i}`] = v.item_des;\r\n                            fieldsValue[`tolerancia-${i}`] = v.tolerancia;\r\n                            const vals = (typeof v.item_values === \"string\") ? JSON.parse(v.item_values) : v.item_values;\r\n                            for (let [iV, vV] of vals.entries()) {\r\n                                fieldsValue[`v${v.item_key}-${iV}`] = vV;\r\n                            }\r\n                        }\r\n                        form.setFieldsValue({ gamaOperatoria, gamaOperatoriaItems: fieldsValue });\r\n                    }\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    const onShowForm = (newForm = false, forInput = false) => {\r\n        if (newForm) {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: {}, forInput }));\r\n        } else {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue([\"gamaoperatoria_id\", \"gamaOperatoria\", \"gamaOperatoriaItems\"]), forInput } }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <Drawer showWrapper={showForm} setShowWrapper={setShowForm} parentReload={loadData} />\r\n                <FormLayout\r\n                    id=\"LAY-GAMAOPERATORIA\"\r\n                    guides={guides}\r\n                    layout=\"vertical\"\r\n                    style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{\r\n                        //wide: [3, 2, 1, '*'],\r\n                        margin: \"2px\", overflow: false, guides: guides,\r\n                        label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", width: \"120px\", wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                        alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                        layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                        addons: {}, //top|right|center|bottom|left\r\n                        required: true,\r\n                        style: { alignSelf: \"top\" }\r\n                    }}\r\n                    fieldSet={{\r\n                        guides: guides,\r\n                        wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                    }}\r\n                >\r\n                    <FieldSet>\r\n                        <Toolbar\r\n                            style={{ width: \"100%\" }}\r\n                            left={\r\n                                <FieldSet>\r\n                                    <Field name=\"gamaoperatoria_id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Gama Operatória\", pos: \"left\" }} addons={{\r\n                                        ...(form.getFieldValue(\"gamaoperatoria_id\") && { right: <Button onClick={() => onShowForm(false, true)} style={{ marginLeft: \"3px\" }} size=\"small\"><EditOutlined style={{ fontSize: \"16px\" }} /></Button> })\r\n                                    }}>\r\n                                        <SelectField allowClear size=\"small\" data={gamasOperatorias} keyField=\"id\" textField=\"designacao\"\r\n                                            optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                                        />\r\n                                    </Field>\r\n                                </FieldSet>\r\n                            }\r\n                            right={<Button onClick={() => onShowForm(true, true)}>Nova Gama Operatória</Button>}\r\n                        />\r\n                    </FieldSet>\r\n                    <FieldSet>\r\n                        {(!loading && form.getFieldValue(\"gamaoperatoria_id\")) && <FormGamaOperatoriaUpsert record={form.getFieldsValue(true)} wrapForm={false} forInput={false} parentReload={loadData} />}\r\n                    </FieldSet>\r\n                </FormLayout>\r\n            </Spin>\r\n        </>\r\n    );\r\n}"],"names":["React","useEffect","useState","useCallback","useRef","useContext","createUseStyles","styled","dayjs","Joi","fetch","fetchPost","API_URL","getSchema","FormLayout","Field","FieldSet","FieldItem","AlertsContainer","Item","SelectField","CheckboxField","HorizontalRule","VerticalSpace","InputAddon","AlertMessages","IconButton","ResultMessage","Portal","Input","Space","Form","Button","InputNumber","DatePicker","PlusOutlined","VerticalAlignBottomOutlined","MdAdjust","CgCloseO","DATE_FORMAT","DATETIME_FORMAT","GAMAOPERATORIA","OFabricoContext","gamaOperatoriaItems","filter","v","disabled","schema","keys","excludeKeys","unknown","setId","id","key","values","record","setFormTitle","parentRef","closeParent","parentReload","wrapForm","forInput","ctx","useForm","form","loading","setLoading","submitting","setSubmitting","changedValues","setChangedValues","error","warning","info","success","formStatus","setFormStatus","guides","setGuides","gamaoperatoria_id","operation","setOperation","status","resultMessage","setResultMessage","init","lookup","title","setFieldsValue","gamaOperatoria","item_cod","subTitle","item_nome","initValues","length","entries","idx","designacao","tolerancia","onValuesChange","onFinish","validate","abortEarly","k","undefined","push","message","url","parameters","getFieldsValue","produto_id","response","data","onSuccessOK","resetFields","onErrorOK","onClose","reload","onSubmit","width","padding","wide","margin","overflow","label","enabled","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","layout","top","right","center","bottom","left","required","style","alignSelf","map","fontSize","unidade","Array","nvalues","x","i","min","max","precision","maxWidth","current","cancelToken","WrapperForm","TitleForm","Label","LabelField","Toolbar","Spin","LoadingOutlined","EditOutlined","FormGamaOperatoriaUpsert","Drawer","showWrapper","setShowWrapper","formTitle","iref","onVisible","prev","show","height","textAlign","loadGamasOperatoriasLookup","token","sort","rows","getGamaOperatoriaItems","fieldStatus","showForm","setShowForm","gamasOperatorias","setGamasOperatorias","cancelFetch","loadData","getFieldValue","cancel","type","_gamasoperatorias","fieldsValue","nitems","item_key","item_des","vals","item_values","JSON","parse","iV","vV","onShowForm","newForm","addons","text","marginLeft","d","keyField","textField","display","minWidth","value"],"sourceRoot":""}