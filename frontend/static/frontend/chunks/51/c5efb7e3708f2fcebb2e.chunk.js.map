{"version":3,"file":"chunks/51/c5efb7e3708f2fcebb2e.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/bobinagens/BobinagensValidarList.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext, Suspense, lazy } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken, fetchPostBlob } from \"utils/fetch\";\r\nimport { API_URL, GTIN } from \"config\";\r\nimport { useDataAPI } from \"utils/useDataAPI\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { getFilterRangeValues, getFilterValue, isValue } from 'utils';\r\n\r\nimport FormManager, { FieldLabel, FieldSet as OldFieldSet, FilterTags, AutoCompleteField as OldAutoCompleteField, useMessages, DropDown } from \"components/form\";\r\nimport { FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, InputAddon, SelectField, TitleForm, WrapperForm, SelectDebounceField, AutoCompleteField, RangeDateField, RangeTimeField, FilterDrawer, CheckboxField, SwitchField } from \"components/formLayout\";\r\nimport Drawer from \"components/Drawer\";\r\nimport Table, { setColumns } from \"components/table\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport Portal from \"components/portal\";\r\nimport MoreFilters from 'assets/morefilters.svg';\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport YScroll from \"components/YScroll\";\r\nimport { MdAdjust } from 'react-icons/md';\r\n\r\n\r\nimport { Alert, Input, Space, Typography, Form, Button, Menu, Dropdown, Switch, Select, Tag, Tooltip, Popconfirm, notification, Spin, Modal, InputNumber, Checkbox, Badge } from \"antd\";\r\nimport { FilePdfTwoTone, FileExcelTwoTone, FileWordTwoTone, FileFilled } from '@ant-design/icons';\r\n\r\nimport Icon, { ExclamationCircleOutlined, InfoCircleOutlined, SearchOutlined, UserOutlined, DownOutlined, ProfileOutlined, RightOutlined, ClockCircleOutlined, CloseOutlined, CheckCircleOutlined, SyncOutlined, CheckOutlined, EllipsisOutlined, MenuOutlined, LoadingOutlined, UnorderedListOutlined } from \"@ant-design/icons\";\r\nconst ButtonGroup = Button.Group;\r\nimport { DATE_FORMAT, TIME_FORMAT, DATETIME_FORMAT, THICKNESS, BOBINE_ESTADOS, BOBINE_DEFEITOS } from 'config';\r\nconst { Title } = Typography;\r\nimport { SocketContext } from '../App';\r\nconst BobinesValidarList = lazy(() => import('../bobines/BobinesValidarList'));\r\n\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst filterRules = (keys) => {\r\n    return getSchema({\r\n        //field1: Joi.string().label(\"Designação\")\r\n    }, keys).unknown(true);\r\n}\r\n\r\nconst TipoRelation = () => <Select size='small' options={[{ value: \"e\" }, { value: \"ou\" }, { value: \"!e\" }, { value: \"!ou\" }]} />;\r\n\r\nconst filterSchema = ({ ordersField, customersField, itemsField, ordemFabricoStatusField }) => [\r\n    { fbobinagem: { label: \"Nº Bobinagem\", field: { type: 'input', size: 'small' } } },\r\n    { fdata: { label: \"Data Bobinagem\", field: { type: \"rangedate\", size: 'small' } } },\r\n    { ftime: { label: \"Início/Fim\", field: { type: \"rangetime\", size: 'small' } } },\r\n    { fduracao: { label: \"Duração\", field: { type: 'input', size: 'small' }, span: 12 } },\r\n    { farea: { label: \"Área\", field: { type: 'input', size: 'small' }, span: 12 }, fdiam: { label: \"Diâmetro\", field: { type: 'input', size: 'small' }, span: 12 } },\r\n    { fcore: { label: \"Core\", field: { type: 'input', size: 'small' }, span: 12 }, fcomp: { label: \"Comprimento\", field: { type: 'input', size: 'small' }, span: 12 } },\r\n    //Defeitos\r\n    {\r\n        freldefeitos: { label: \" \", field: TipoRelation, span: 4 },\r\n        fdefeitos: {\r\n            label: 'Defeitos', field: {\r\n                type: 'selectmulti', size: 'small', options: BOBINE_DEFEITOS\r\n            }, span: 20\r\n        }\r\n    },\r\n    //Estados\r\n    {\r\n        festados: {\r\n            label: 'Estados', field: {\r\n                type: 'selectmulti', size: 'small', options: BOBINE_ESTADOS\r\n            }\r\n        }\r\n    },\r\n    { fcliente: { label: \"Cliente\", field: { type: 'input', size: 'small' } } },\r\n    { fdestino: { label: \"Destino\", field: { type: 'input', size: 'small' } } },\r\n    //{ f_ofabrico: { label: \"Ordem de Fabrico\" } },\r\n    //{ f_agg: { label: \"Agregação Ordem de Fabrico\" } },\r\n    //{ fofstatus: { label: \"Ordem de Fabrico: Estado\", field: ordemFabricoStatusField, initialValue: 'all', ignoreFilterTag: (v) => v === 'all' } },\r\n    //{ fmulti_order: { label: \"Nº Encomenda/Nº Proforma\", field: ordersField } },\r\n    //{ fmulti_customer: { label: \"Nº/Nome de Cliente\", field: customersField } },\r\n    //{ fmulti_item: { label: \"Cód/Designação Artigo\", field: itemsField } },\r\n    //{ forderdate: { label: \"Data Encomenda\", field: { type: \"rangedate\", size: 'small' } } },\r\n    //{ fstartprevdate: { label: \"Data Prevista Início\", field: { type: \"rangedate\", size: 'small' } } },\r\n    //{ fendprevdate: { label: \"Data Prevista Fim\", field: { type: \"rangedate\", size: 'small' } } },\r\n\r\n    /* { SHIDAT_0: { label: \"Data Expedição\", field: { type: \"rangedate\" } } },\r\n    { LASDLVNUM_0: { label: \"Nº Última Expedição\" } },\r\n    { ofstatus: { label: \"Ordem de Fabrico: Estado\", field: ordemFabricoStatusField, ignoreFilterTag: (v) => v === 'all' } } */\r\n];\r\n\r\nconst ToolbarTable = ({ form, dataAPI }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const leftContent = (\r\n        <>\r\n            <button onClick={() => navigate(-1)}>go back</button>\r\n            {/* <Button type=\"primary\" size=\"small\" disabled={flyoutStatus.visible ? true : false} onClick={() => setFlyoutStatus(prev => ({ ...prev, visible: !prev.visible }))}>Flyout</Button> */}\r\n        </>\r\n    );\r\n\r\n    const rightContent = (\r\n        <Space>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", whiteSpace: \"nowrap\" }}>\r\n\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", whiteSpace: \"nowrap\" }}>\r\n                <Form form={form} initialValues={{}}>\r\n                    <FormLayout id=\"tbt-of\" schema={schema}>\r\n                    </FormLayout>\r\n                </Form>\r\n            </div>\r\n        </Space>\r\n    );\r\n    return (\r\n        <Toolbar left={leftContent} right={rightContent} />\r\n    );\r\n}\r\n\r\nconst GlobalSearch = ({ form, dataAPI, columns, setShowFilter, showFilter } = {}) => {\r\n    const [changed, setChanged] = useState(false);\r\n    const onFinish = (type, values) => {\r\n        switch (type) {\r\n            case \"filter\":\r\n                (!changed) && setChanged(true);\r\n                console.log(values);\r\n                const _values = {\r\n                    ...values,\r\n                    fbobinagem: getFilterValue(values?.fbobinagem, 'any'),\r\n                    fdata: getFilterRangeValues(values[\"fdata\"]?.formatted),\r\n                    ftime: getFilterRangeValues(values[\"ftime\"]?.formatted),\r\n                    fduracao: getFilterValue(values?.fduracao, '=='),\r\n                    fcliente: getFilterValue(values?.fcliente, 'any'),\r\n                    fdestino: getFilterValue(values?.fdestino, 'any'),\r\n                    //f_ofabrico: getFilterValue(values?.f_ofabrico, 'exact'),\r\n                    //f_agg: getFilterValue(values?.f_agg, 'exact'),\r\n                    //fmulti_customer: getFilterValue(values?.fmulti_customer, 'any'),\r\n                    //fmulti_order: getFilterValue(values?.fmulti_order, 'any'),\r\n                    //fmulti_item: getFilterValue(values?.fmulti_item, 'any'),\r\n                    //forderdate: getFilterRangeValues(values[\"forderdate\"]?.formatted),\r\n                    //fstartprevdate: getFilterRangeValues(values[\"fstartprevdate\"]?.formatted),\r\n                    //fendprevdate: getFilterRangeValues(values[\"fendprevdate\"]?.formatted)\r\n                };\r\n                dataAPI.addFilters(_values);\r\n                dataAPI.first();\r\n                dataAPI.fetchPost();\r\n                break;\r\n        }\r\n    };\r\n\r\n    const onValuesChange = (type, changedValues, allValues) => {\r\n        switch (type) {\r\n            case \"filter\":\r\n                form.setFieldsValue(allValues);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /*     const fetchCustomers = async (value) => {\r\n            const { data: { rows } } = await fetchPost({ url: `${API_URL}/sellcustomerslookup/`, pagination: { limit: 10 }, filter: { [\"fmulti_customer\"]: `%${value.replaceAll(' ', '%%')}%` } });\r\n            return rows;\r\n        }\r\n        const fetchOrders = async (value) => {\r\n            const { data: { rows } } = await fetchPost({ url: `${API_URL}/sellorderslookup/`, pagination: { limit: 10 }, filter: { [\"fmulti_order\"]: `%${value.replaceAll(' ', '%%')}%` } });\r\n            console.log(\"FETECHED\", rows)\r\n            return rows;\r\n        }\r\n        const fetchItems = async (value) => {\r\n            const { data: { rows } } = await fetchPost({ url: `${API_URL}/sellitemslookup/`, pagination: { limit: 10 }, filter: { [\"fmulti_item\"]: `%${value.replaceAll(' ', '%%')}%` } });\r\n            return rows;\r\n        }\r\n     */\r\n    /* const customersField = () => (\r\n        <AutoCompleteField\r\n            placeholder=\"Cliente\"\r\n            size=\"small\"\r\n            keyField=\"BPCNAM_0\"\r\n            textField=\"BPCNAM_0\"\r\n            dropdownMatchSelectWidth={250}\r\n            allowClear\r\n            fetchOptions={fetchCustomers}\r\n        />\r\n    );\r\n    const ordersField = () => (\r\n        <AutoCompleteField\r\n            placeholder=\"Encomenda/Prf\"\r\n            size=\"small\"\r\n            keyField=\"SOHNUM_0\"\r\n            textField=\"computed\"\r\n            dropdownMatchSelectWidth={250}\r\n            allowClear\r\n            fetchOptions={fetchOrders}\r\n        />\r\n    );\r\n    const itemsField = () => (\r\n        <AutoCompleteField\r\n            placeholder=\"Artigo\"\r\n            size=\"small\"\r\n            keyField=\"ITMREF_0\"\r\n            textField=\"computed\"\r\n            dropdownMatchSelectWidth={250}\r\n            allowClear\r\n            fetchOptions={fetchItems}\r\n        />\r\n    ); */\r\n\r\n    const downloadFile = (data, filename, mime, bom) => {\r\n        var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\r\n        var blob = new Blob(blobData, { type: mime || 'application/octet-stream' });\r\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n            // IE workaround for \"HTML7007: One or more blob URLs were\r\n            // revoked by closing the blob for which they were created.\r\n            // These URLs will no longer resolve as the data backing\r\n            // the URL has been freed.\"\r\n            window.navigator.msSaveBlob(blob, filename);\r\n        }\r\n        else {\r\n            var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\r\n            var tempLink = document.createElement('a');\r\n            tempLink.style.display = 'none';\r\n            tempLink.href = blobURL;\r\n            tempLink.setAttribute('download', filename);\r\n\r\n            // Safari thinks _blank anchor are pop ups. We only want to set _blank\r\n            // target if the browser does not support the HTML5 download attribute.\r\n            // This allows you to download files in desktop safari if pop up blocking\r\n            // is enabled.\r\n            if (typeof tempLink.download === 'undefined') {\r\n                tempLink.setAttribute('target', '_blank');\r\n            }\r\n\r\n            document.body.appendChild(tempLink);\r\n            tempLink.click();\r\n\r\n            // Fixes \"webkit blob resource error 1\"\r\n            setTimeout(function () {\r\n                document.body.removeChild(tempLink);\r\n                window.URL.revokeObjectURL(blobURL);\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    const menu = (\r\n        <Menu onClick={(v) => exportFile(v)}>\r\n            <Menu.Item key=\"pdf\" icon={<FilePdfTwoTone twoToneColor=\"red\" />}>Pdf</Menu.Item>\r\n            <Menu.Item key=\"excel\" icon={<FileExcelTwoTone twoToneColor=\"#52c41a\" />}>Excel</Menu.Item>\r\n            <Menu.Item key=\"word\" icon={<FileWordTwoTone />}>Word</Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const exportFile = async (type) => {\r\n        const requestData = dataAPI.getPostRequest();\r\n\r\n        requestData.parameters = {\r\n            ...requestData.parameters,\r\n            \"config\": \"default\",\r\n            \"orientation\": \"landscape\",\r\n            \"template\": \"TEMPLATES-LIST/LIST-A4-${orientation}\",\r\n            \"title\": \"Ordens de Fabrico\",\r\n            \"export\": type.key,\r\n            cols: columns\r\n        }\r\n        delete requestData.parameters.cols.bobines;\r\n        requestData.parameters.cols.area.title = \"Área m2\";\r\n        const response = await fetchPostBlob(requestData);\r\n        switch (type.key) {\r\n            case \"pdf\":\r\n                downloadFile(response.data, `list-${new Date().toJSON().slice(0, 10)}.pdf`);\r\n                break;\r\n            case \"excel\":\r\n                downloadFile(response.data, `list-${new Date().toJSON().slice(0, 10)}.xlsx`);\r\n                break;\r\n            case \"word\":\r\n                downloadFile(response.data, `list-${new Date().toJSON().slice(0, 10)}.docx`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <FilterDrawer schema={filterSchema({ form /* ordersField, customersField, itemsField */ })} filterRules={filterRules()} form={form} width={350} setShowFilter={setShowFilter} showFilter={showFilter} />\r\n            <Form form={form} name={`fps`} onFinish={(values) => onFinish(\"filter\", values)} onValuesChange={onValuesChange}>\r\n                <FormLayout\r\n                    id=\"LAY-BOBINAGENS\"\r\n                    layout=\"horizontal\"\r\n                    style={{ width: \"700px\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{ guides: false, wide: [3, 4, 3, 1.5, 1.5], style: { marginLeft: \"2px\", alignSelf: \"end\" } }}\r\n                    fieldSet={{ guides: false, wide: 16, margin: false, layout: \"horizontal\", overflow: false }}\r\n                >\r\n                    <Field name=\"fbobinagem\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Nº Bobinagem\", pos: \"top\" }}>\r\n                        <Input size='small' />\r\n                    </Field>\r\n                    <Field name=\"fdata\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Data Bobinagem\", pos: \"top\" }}>\r\n                        <RangeDateField size='small' />\r\n                    </Field>\r\n                    <Field name=\"ftime\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Início/Fim\", pos: \"top\" }}>\r\n                        <RangeTimeField size='small' format={TIME_FORMAT} />\r\n                    </Field>\r\n                    {/*                     <Field name=\"fmulti_customer\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Cliente\", pos: \"top\" }}>\r\n                        {customersField()}\r\n                    </Field>\r\n                    <Field name=\"fmulti_order\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Encomenda/Prf\", pos: \"top\" }}>\r\n                        {ordersField()}\r\n                    </Field>\r\n                    <Field name=\"fmulti_item\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Artigo\", pos: \"top\" }}>\r\n                        {itemsField()}\r\n                    </Field>\r\n                    <Field name=\"forderdate\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Data Encomenda\", pos: \"top\" }}>\r\n                        <RangeDateField size='small' />\r\n    </Field>*/}\r\n                    <FieldItem label={{ enabled: false }}>\r\n                        <ButtonGroup size='small' style={{ marginLeft: \"5px\" }}>\r\n                            <Button style={{ padding: \"0px 3px\" }} onClick={() => form.submit()}><SearchOutlined /></Button>\r\n                            <Button style={{ padding: \"0px 3px\" }}><MoreFilters style={{ fontSize: \"16px\", marginTop: \"2px\" }} onClick={() => setShowFilter(prev => !prev)} /></Button>\r\n                        </ButtonGroup>\r\n                    </FieldItem>\r\n                    <FieldItem label={{ enabled: false }}><Dropdown overlay={menu}>\r\n                        <Button size=\"small\" icon={<FileFilled />}><DownOutlined /></Button>\r\n                    </Dropdown>\r\n                    </FieldItem>\r\n                </FormLayout>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst StyledBobine = styled.div`\r\n    border:dashed 1px #000;\r\n    background-color:${props => props.color};\r\n    border-radius:3px;\r\n    margin-right:1px;\r\n    text-align:center;\r\n    width:25px;\r\n    font-size:9px;\r\n    cursor:pointer;\r\n    &:hover {\r\n        border-color: #d9d9d9;\r\n    }\r\n`;\r\n\r\nconst useStyles = createUseStyles({\r\n    columnBobines: {\r\n        width: '25px',\r\n        textAlign: \"center\",\r\n        marginRight: \"1px\"\r\n    }\r\n})\r\n\r\nconst ColumnBobines = ({ n }) => {\r\n    const classes = useStyles();\r\n    return (<div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        {[...Array(n)].map((x, i) =>\r\n            <div className={classes.columnBobines} key={`bh-${i}`}>{i + 1}</div>\r\n        )}\r\n    </div>);\r\n}\r\n\r\nconst bColors = (estado) => {\r\n    if (estado === \"G\") {\r\n        return \"#237804\";//\"green\";\r\n    } else if (estado === \"DM\") {\r\n        return \"#fadb14\";//\"gold\";\r\n    } else if (estado === \"R\") {\r\n        return \"#ff1100\";//\"red\";\r\n    } else if (estado === \"LAB\") {\r\n        return \"#13c2c2\";//\"cyan\";\r\n    } else if (estado === \"BA\") {\r\n        return \"#ff1100\";//\"red\";\r\n    } else if (estado === \"IND\") {\r\n        return \"#0050b3\";//\"blue\";\r\n    } else if (estado === \"HOLD\") {\r\n        return \"#391085\";//\"purple\";\r\n    }\r\n}\r\n\r\nconst Bobines = ({ b, bm, setShow }) => {\r\n    let bobines = b;\r\n\r\n    const handleClick = () => {\r\n        console.log(\"OI\", bm.id)\r\n        setShow({ show: true, data: { bobinagem_id: bm.id, bobinagem_nome: bm.nome } });\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            {bobines.map((v, i) => {\r\n                return (<StyledBobine onClick={handleClick} color={bColors(v.estado)} key={`bob-${v.id}`}><b>{v.estado}</b><div>{v.lar}</div></StyledBobine>);\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    input,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                {React.isValidElement(input) ? React.cloneElement(input, { ref: inputRef, onPressEnter: save, onBlur: save, ...input.props }) : <Input ref={inputRef} onPressEnter={save} onBlur={save} />}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nconst TitleValidar = ({ data }) => {\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"10px\", alignItems: \"center\" }}>\r\n            <div style={{ fontSize: \"14px\", display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                <Space>\r\n                    <div><b style={{ textTransform: \"capitalize\" }}></b>Validar/Classificar a Bobinagem {data.bobinagem_nome}</div>\r\n                </Space>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ModalValidar = ({ show, setShow }) => {\r\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n\r\n    const handleCancel = () => {\r\n        setShow({ show: false, data: {} });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<TitleValidar data={show.data}/* aggCod={aggCod} */ />}\r\n                visible={show.show}\r\n                centered\r\n                onCancel={handleCancel}\r\n                confirmLoading={confirmLoading}\r\n                maskClosable={true}\r\n                footer={null}\r\n                destroyOnClose={true}\r\n                bodyStyle={{ height: \"calc(100vh - 60px)\"/* , backgroundColor: \"#f0f0f0\" */ }}\r\n                width={\"100%\"}\r\n            >\r\n                <YScroll>\r\n                    <Suspense fallback={<></>}>{<BobinesValidarList data={show.data} />}</Suspense>\r\n                </YScroll>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\n// const formSchema = (keys, excludeKeys) => {\r\n//     return getSchema({\r\n//         /* npaletes: Joi.number().positive().label(\"Paletes/Contentor\").required(),\r\n//         palete_maxaltura: Joi.number().positive().precision(2).label(\"Altura Máx. Palete (metros)\").required(),\r\n//         //designacao: Joi.string().label(\"Designação\").required(),\r\n//         netiquetas_bobine: Joi.number().positive().precision(2).label(\"Etiqueta/Bobine\").required(),\r\n//         netiquetas_lote: Joi.number().positive().precision(2).label(\"Etiqueta do Lote da Palete\").required(),\r\n//         netiquetas_final: Joi.number().positive().precision(2).label(\"Etiqueta Final da Palete\").required(),\r\n//         folha_identificativa: Joi.number().min(0).precision(2).label(\"Folha Identificativa Palete\").required(),\r\n//         cintas: Joi.number().valid(0, 1),\r\n//         ncintas: Joi.when('cintas', { is: 1, then: Joi.number().positive().required() }),\r\n//         paletizacao: Joi.array().min(1).label(\"Items da Paletização\").required() */\r\n//     }, keys, excludeKeys).unknown(true);\r\n// };\r\n\r\n// const BobinagemValidarForm = ({ data, wrapForm = \"form\", forInput = true }) => {\r\n//     const { bobinagem, bobines } = data;\r\n//     const [form] = Form.useForm();\r\n//     const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n//     const [changedValues, setChangedValues] = useState({});\r\n//     const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n\r\n\r\n//     const onValuesChange = (changedValues, allValues) => {\r\n//         console.log(\"chv-------\", changedValues)\r\n//         setChangedValues(changedValues);\r\n//     }\r\n\r\n//     const onFinish = async (values) => {\r\n//         const status = { error: [], warning: [], info: [], success: [] };\r\n//         setFormStatus(status);\r\n//     }\r\n\r\n\r\n//     return (\r\n\r\n//         <Form form={form} name={`fpv`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n//             <FormLayout\r\n//                 id=\"LAY-VALIDAR-BM\"\r\n//                 guides={false}\r\n//                 layout=\"vertical\"\r\n//                 style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n//                 schema={formSchema}\r\n//                 field={{\r\n//                     forInput,\r\n//                     wide: [16],\r\n//                     margin: \"0px\", overflow: false, guides: false,\r\n//                     label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n//                     alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n//                     layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n//                     required: true,\r\n//                     style: { alignSelf: \"center\" }\r\n//                 }}\r\n//                 fieldSet={{\r\n//                     guides: false,\r\n//                     wide: 16, margin: \"0px\", layout: \"horizontal\", overflow: false\r\n//                 }}\r\n//             >\r\n\r\n//                 <FieldSet layout=\"vertical\" wide={16}>\r\n//                     <Form.List name=\"validacao_bobines_list\">\r\n//                         {(fields, { add, remove, move }) => {\r\n//                             const addRow = (fields) => {\r\n//                                 add({ item_id: 1, item_paletesize: '970x970', item_numbobines: 10 }, 0);\r\n//                             }\r\n//                             /*const removeRow = (fieldName) => {\r\n//                                 remove(fieldName);\r\n//                             }\r\n//                             const moveRow = (from, to) => {\r\n//                                 move(from, to);\r\n//                             } */\r\n//                             return (\r\n//                                 <>\r\n//                                     <FieldSet margin=\"5px\">\r\n//                                         {forInput && <Button type=\"dashed\" onClick={() => addRow(fields)} style={{ width: \"100%\" }}><UserOutlined />Adicionar</Button>}\r\n//                                     </FieldSet>\r\n//                                     {fields.map((field, index) => (\r\n\r\n\r\n//                                         <FieldSet layout=\"vertical\" field={{ wide: [16] }} key={field.key}>\r\n//                                             <FieldSet layout=\"horizontal\" field={{ wide: [1, 15] }} style={{ justifyContent: \"center\" }}>\r\n//                                                 <Button style={{ alignSelf: \"center\" }} icon={<MdAdjust />} />\r\n//                                                 <div style={{ display: \"flex\", flexDirection: \"row\" }}>{data.bobines.map((v, i) => {\r\n//                                                     return (\r\n//                                                         <div key={`bl-${i}`}>\r\n//                                                             {/* <div style={{ textAlign: \"center\" }}>{i}</div> */}\r\n//                                                             <StyledBobine color={bColors(v.estado)}>\r\n//                                                                 <Field label={{ enabled: false }} name={[field.name, `bobine_id_${i}`]}>\r\n//                                                                     <CheckboxField />\r\n//                                                                 </Field>\r\n//                                                                 <b>{v.estado}</b><b>{i}</b><div>{v.lar}</div>\r\n//                                                                 <Field label={{ enabled: false }} name={[field.name, `largura_${i}`]}>\r\n//                                                                     <Input />\r\n//                                                                 </Field>\r\n//                                                             </StyledBobine>\r\n//                                                         </div>\r\n//                                                     );\r\n//                                                 })}</div>\r\n//                                             </FieldSet>\r\n\r\n//                                             {/*                                             <FieldSet layout=\"vertical\" field={{ wide: [16] }}>\r\n//                                                 <table style={{ width: \"100%\", borderCollapse: \"collapse\", border: \"1px solid\" }}>\r\n//                                                     <tr>\r\n//                                                         <th style={{ border: \"1px solid\" }}>Classificação</th>\r\n//                                                         <th style={{ border: \"1px solid\" }}>Lastname</th>\r\n//                                                     </tr>\r\n//                                                     <tr>\r\n//                                                         <td style={{ border: \"1px solid\" }}>Peter</td>\r\n//                                                         <td style={{ border: \"1px solid\" }}><Field name={[field.name, `nok`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field></td>\r\n//                                                     </tr>\r\n//                                                     <tr>\r\n//                                                         <td style={{ border: \"1px solid\" }}>Lois</td>\r\n//                                                         <td style={{ border: \"1px solid\" }}>Griffin</td>\r\n//                                                     </tr>\r\n//                                                 </table>\r\n//                                             </FieldSet> */}\r\n\r\n//                                             <FieldSet layout=\"vertical\" field={{ wide: [15] }} style={{ marginTop: \"5px\" }}>\r\n//                                                 <FieldSet layout=\"horizontal\" style={{ backgroundColor: \"#e6f7ff\", border: \"solid 1px #595959\", textAlign: \"right\" }} field={{ wide: [2, 1, 2, 1, 2, 1, 2, 1, 3, 1], label: { enabled: false }, padding: \"2px\" }}>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\" }}>Largura NOK</FieldItem>\r\n//                                                     <Field name={[field.name, `nok`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Cónico</FieldItem>\r\n//                                                     <Field name={[field.name, `con`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Descentrada</FieldItem>\r\n//                                                     <Field name={[field.name, `desc`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Presa</FieldItem>\r\n//                                                     <Field name={[field.name, `presa`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Diâmetro</FieldItem>\r\n//                                                     <Field name={[field.name, `diam`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                 </FieldSet>\r\n//                                                 <FieldSet layout=\"horizontal\" style={{ backgroundColor: \"#e6f7ff\", border: \"solid 1px #595959\", textAlign: \"right\" }} field={{ wide: [2, 1, 2, 1, 2, 1, 2, 1, 3, 1], label: { enabled: false }, padding: \"2px\" }}>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\" }}>Sujidade</FieldItem>\r\n//                                                     <Field name={[field.name, `suj`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Carro Atrás</FieldItem>\r\n//                                                     <Field name={[field.name, `carro`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Não Colou</FieldItem>\r\n//                                                     <Field name={[field.name, `ncolou`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Sobretiragem</FieldItem>\r\n//                                                     <Field name={[field.name, `sobr`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Falha Corte</FieldItem>\r\n//                                                     <Field name={[field.name, `falhacorte`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                 </FieldSet>\r\n//                                                 <FieldSet layout=\"horizontal\" style={{ backgroundColor: \"#e6f7ff\", border: \"solid 1px #595959\", textAlign: \"right\" }} field={{ wide: [2, 1, 2, 1, 2, 1, 2, 1, 3, 1], label: { enabled: false }, padding: \"2px\" }}>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\" }}>Inicio Diam. (mm)</FieldItem>\r\n//                                                     <Field name={[field.name, `inicio_diam`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Fim Diam. (mm)</FieldItem>\r\n//                                                     <Field name={[field.name, `fim_diam`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Falha Filme</FieldItem>\r\n//                                                     <Field name={[field.name, `falhafilme`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Início Metros Desb. (m)</FieldItem>\r\n//                                                     <Field name={[field.name, `iniciodesb`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Fim Metros Desb. (m)</FieldItem>\r\n//                                                     <Field name={[field.name, `fimdesb`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                 </FieldSet>\r\n//                                                 <FieldSet layout=\"horizontal\" style={{ backgroundColor: \"#e6f7ff\", border: \"solid 1px #595959\", textAlign: \"right\" }} field={{ wide: [2, 1, 2, 1, 2, 1, 2, 1, 3, 1], label: { enabled: false }, padding: \"2px\" }}>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\" }}>Falha M.P.</FieldItem>\r\n//                                                     <Field name={[field.name, `falha_mp`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Furos</FieldItem>\r\n//                                                     <Field name={[field.name, `furos`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Buracos Gram.</FieldItem>\r\n//                                                     <Field name={[field.name, `buracos`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Início Metros Desb. (m)</FieldItem>\r\n//                                                     <Field name={[field.name, `iniciodesb`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                     <FieldItem style={{ backgroundColor: \"#eaeef3\", borderRight: \"none\", borderLeft: \"solid 1px #595959\" }}>Fim Metros Desb. (m)</FieldItem>\r\n//                                                     <Field name={[field.name, `fimdesb`]} style={{ backgroundColor: \"#f5f5f5\", borderLeft: \"solid 1px #595959\", textAlign: \"center\" }}><SwitchField size=\"small\" /></Field>\r\n//                                                 </FieldSet>\r\n//                                             </FieldSet>\r\n\r\n\r\n//                                         </FieldSet>\r\n\r\n//                                     ))}\r\n//                                 </>\r\n//                             );\r\n//                         }}\r\n//                     </Form.List>\r\n//                 </FieldSet>\r\n\r\n\r\n\r\n//             </FormLayout>\r\n//         </Form>\r\n//     );\r\n// }\r\n\r\n\r\nexport default () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n    const [showFilter, setShowFilter] = useState(false);\r\n    const [showValidar, setShowValidar] = useState({ show: false, data: {} });\r\n    const [formFilter] = Form.useForm();\r\n    const dataAPI = useDataAPI({ payload: { url: `${API_URL}/validarbobinagenslist/`, parameters: {}, pagination: { enabled: true, page: 1, pageSize: 10 }, filter: {}, sort: [{ column: 'data', direction: 'DESC' }] } });\r\n    const elFilterTags = document.getElementById('filter-tags');\r\n    const { data: dataSocket } = useContext(SocketContext) || {};\r\n\r\n    /*     useEffect(() => {\r\n            const cancelFetch = cancelToken();\r\n            dataAPI.first();\r\n            dataAPI.fetchPost({token: cancelFetch });\r\n            return (() => cancelFetch.cancel());\r\n        }, []); */\r\n\r\n    useEffect(() => {\r\n        console.log(\"NOVA BOBINAGEM DETETADA...\", dataSocket);\r\n        const cancelFetch = cancelToken();\r\n        dataAPI.first();\r\n        dataAPI.fetchPost({ token: cancelFetch });\r\n        return (() => cancelFetch.cancel());\r\n    }, [dataSocket]);\r\n\r\n    const selectionRowKey = (record) => {\r\n        return `${record.id}`;\r\n    }\r\n\r\n    const components = {\r\n        body: {\r\n            row: EditableRow,\r\n            cell: EditableCell,\r\n        },\r\n    };\r\n\r\n    const columns = setColumns(\r\n        {\r\n            dataAPI,\r\n            data: dataAPI.getData().rows,\r\n            uuid: \"bobinagenslist_validar\",\r\n            include: {\r\n                ...((common) => (\r\n                    {\r\n                        nome: { title: \"Bobinagem\", width: 60, render: v => <span style={{ color: \"#096dd9\", cursor: \"pointer\" }}>{v}</span>, ...common },\r\n                        /* data: { title: \"Data\", render: (v, r) => dayjs(v).format(DATE_FORMAT), ...common }, */\r\n                        inico: { title: \"Início\", render: (v, r) => dayjs('01-01-1970 ' + v).format(TIME_FORMAT), ...common },\r\n                        fim: { title: \"Fim\", render: (v, r) => dayjs('01-01-1970 ' + v).format(TIME_FORMAT), ...common },\r\n                        duracao: { title: \"Duração\", width: 20, render: (v, r) => v, ...common },\r\n                        core: { title: \"Core\", width: 5, render: (v, r) => v, ...common },\r\n                        comp: { title: \"Comp.\", render: (v, r) => v, editable: true, input: <InputNumber />, ...common },\r\n                        comp_par: { title: \"Comp. Emenda\", render: (v, r) => v, ...common },\r\n                        comp_cli: { title: \"Comp. Cliente\", render: (v, r) => v, ...common },\r\n                        area: { title: <span>Área m&#178;</span>, render: (v, r) => v, ...common },\r\n                        diam: { title: \"Diâmetro mm\", render: (v, r) => v, ...common },\r\n                        nwinf: { title: \"Nw Inf. m\", render: (v, r) => v, ...common },\r\n                        nwsup: { title: \"Nw Sup. m\", render: (v, r) => v, ...common },\r\n                        bobines: { title: <ColumnBobines n={28} />, sorter: false, render: (v, r) => <Bobines b={JSON.parse(v)} bm={r} setShow={setShowValidar} />, ...common }\r\n                        //cod: { title: \"Agg\", width: 140, render: v => <span style={{ color: \"#096dd9\" }}>{v}</span>, ...common },\r\n                        //ofabrico: { title: \"Ordem Fabrico\", width: 140, render: v => <b>{v}</b>, ...common },\r\n                        //prf: { title: \"PRF\", width: 140, render: v => <b>{v}</b>, ...common },\r\n                        //iorder: { title: \"Encomenda(s)\", width: 140, ...common },\r\n                        /* ofabrico_sgp: { title: \"OF.SGP\", width: 60, render: v => <>{v}</>, ...common }, */\r\n                        //estado: { title: \"\", width: 125, ...common },\r\n                        /* options: { title: \"\", sort: false, width: 25, render: (v, r) => <ActionButton content={<MenuActionButton record={r} />} />, ...common }, */\r\n                        //item: { title: \"Artigo(s)\", width: 140, render: v => <>{v}</>, ...common },\r\n                        //item_nome: { title: \"Artigo(s)\", ellipsis: true, render: v => <div style={{ /* overflow:\"hidden\", textOverflow:\"ellipsis\" */whiteSpace: 'nowrap' }}>{v}</div>, ...common },\r\n                        //cliente_nome: { title: \"Cliente(s)\", ellipsis: true, render: v => <div style={{ whiteSpace: 'nowrap' }}><b>{v}</b></div>, ...common },\r\n                        //start_date: { title: \"Início Previsto\", ellipsis: true, render: (v, r) => <div style={{ whiteSpace: 'nowrap' }}><span>{dayjs((r.start_prev_date) ? r.start_prev_date : v).format(DATETIME_FORMAT)}</span></div>, ...common },\r\n                        //end_date: { title: \"Fim Previsto\", ellipsis: true, render: (v, r) => <div style={{ whiteSpace: 'nowrap' }}><span>{dayjs((r.end_prev_date) ? r.end_prev_date : v).format(DATETIME_FORMAT)}</span></div>, ...common },\r\n                        //produzidas: { title: \"Produzidas\", width: 100, render: (v, r) => <ColumnProgress type={1} record={r} />, ...common },\r\n                        //pstock: { title: \"Para Stock\", width: 100, render: (v, r) => <ColumnProgress type={2} record={r} />, ...common },\r\n                        //total: { title: \"Total\", width: 100, render: (v, r) => <ColumnProgress type={3} record={r} />, ...common },\r\n                        /* details: {\r\n                            title: \"\", width: 50, render: (v, r) => <Space>\r\n                                {r.stock == 1 && <GrStorage title=\"Para Stock\" />}\r\n                                {r.retrabalho == 1 && <RiRefreshLine title=\"Para Retrabalho\" />}\r\n                            </Space>, table: \"sgp_op\", ...common\r\n                        } */\r\n\r\n\r\n                        //PRFNUM_0: { title: \"Prf\", width: '160px', ...common },\r\n                        //DSPTOTQTY_0: { title: \"Quantidade\", width: '160px', ...common }\r\n                        //COLUNA2: { title: \"Coluna 2\", width: '160px', render: v => dayjs(v).format(DATE_FORMAT), ...common },\r\n                        //COLUNA3: { title: \"Coluna 3\", width: '20%', render: v => <div style={{ whiteSpace: 'nowrap' }}><b>{v}</b></div>, ...common }\r\n                    }\r\n                ))({ idx: 1, optional: false })\r\n            },\r\n            exclude: []\r\n        }\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} style={{ top: \"50%\", left: \"50%\", position: \"absolute\" }} >\r\n                <ModalValidar show={showValidar} setShow={setShowValidar} />\r\n                <ToolbarTable form={formFilter} dataAPI={dataAPI} />\r\n                {elFilterTags && <Portal elId={elFilterTags}>\r\n                    <FilterTags form={formFilter} filters={dataAPI.getAllFilter()} schema={filterSchema} rules={filterRules()} />\r\n                </Portal>}\r\n                <Table\r\n                    title={<Title level={4}>Validar Bobinagens da Linha 1</Title>}\r\n                    columnChooser={false}\r\n                    reload\r\n                    stripRows\r\n                    darkHeader\r\n                    size=\"small\"\r\n                    toolbar={<GlobalSearch columns={columns?.report} form={formFilter} dataAPI={dataAPI} setShowFilter={setShowFilter} showFilter={showFilter} />}\r\n                    selection={{ enabled: false, rowKey: record => selectionRowKey(record), onSelection: setSelectedRows, multiple: false, selectedRows, setSelectedRows }}\r\n                    paginationProps={{ pageSizeOptions: [10, 15, 20, 30] }}\r\n                    dataAPI={dataAPI}\r\n                    columns={columns}\r\n                    onFetch={dataAPI.fetchPost}\r\n                    components={components}\r\n                //scroll={{ x: '100%', y: \"75vh\", scrollToFirstRowOnChange: true }}\r\n                />\r\n            </Spin>\r\n        </>\r\n    )\r\n}"],"names":["ButtonGroup","Button","Title","Typography","BobinesValidarList","lazy","schema","keys","excludeKeys","getSchema","unknown","filterRules","TipoRelation","size","options","value","filterSchema","ordersField","customersField","itemsField","ordemFabricoStatusField","fbobinagem","label","field","type","fdata","ftime","fduracao","span","farea","fdiam","fcore","fcomp","freldefeitos","fdefeitos","BOBINE_DEFEITOS","festados","BOBINE_ESTADOS","fcliente","fdestino","ToolbarTable","form","navigate","dataAPI","useNavigate","leftContent","onClick","rightContent","style","display","flexDirection","whiteSpace","alignItems","initialValues","id","left","right","GlobalSearch","columns","setShowFilter","showFilter","useState","changed","setChanged","onFinish","values","_values","getFilterValue","getFilterRangeValues","formatted","addFilters","first","fetchPost","onValuesChange","changedValues","allValues","setFieldsValue","downloadFile","data","filename","mime","bom","blob","Blob","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","menu","v","exportFile","key","icon","twoToneColor","requestData","getPostRequest","parameters","cols","bobines","area","title","fetchPostBlob","response","Date","toJSON","slice","width","name","layout","padding","guides","wide","marginLeft","alignSelf","fieldSet","margin","overflow","required","center","enabled","text","pos","format","TIME_FORMAT","submit","fontSize","marginTop","prev","overlay","StyledBobine","styled","props","color","useStyles","createUseStyles","columnBobines","textAlign","marginRight","ColumnBobines","n","classes","Array","map","x","i","className","Bobines","b","bm","setShow","handleClick","show","bobinagem_id","bobinagem_nome","nome","estado","lar","EditableContext","React","EditableRow","index","Form","component","Provider","EditableCell","editable","children","dataIndex","record","input","handleSave","restProps","editing","setEditing","inputRef","useRef","useContext","useEffect","current","focus","toggleEdit","save","validateFields","childNode","rules","message","ref","onPressEnter","onBlur","paddingRight","TitleValidar","gap","textTransform","ModalValidar","confirmLoading","visible","centered","onCancel","maskClosable","footer","destroyOnClose","bodyStyle","height","Suspense","fallback","loading","selectedRows","setSelectedRows","showValidar","setShowValidar","formFilter","useDataAPI","payload","url","API_URL","pagination","page","pageSize","filter","sort","column","direction","elFilterTags","getElementById","dataSocket","SocketContext","cancelFetch","cancelToken","token","cancel","common","components","row","cell","setColumns","getData","rows","uuid","include","idx","optional","render","cursor","inico","r","dayjs","fim","duracao","core","comp","comp_par","comp_cli","diam","nwinf","nwsup","sorter","JSON","parse","exclude","spinning","indicator","spin","top","position","elId","filters","getAllFilter","level","columnChooser","reload","stripRows","darkHeader","toolbar","report","selection","rowKey","selectionRowKey","onSelection","multiple","paginationProps","pageSizeOptions","onFetch"],"sourceRoot":""}