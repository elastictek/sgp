{"version":3,"file":"chunks/625/7a0433c42ff80e37d181.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/planeamento/paletesStock/FormPaletesStockUpsert.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useMemo } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace, InputAddon, SelectDebounceField } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport YScroll from \"components/YScroll\";\r\nimport { Input, Space, Form, Button, InputNumber, DatePicker, Select, Spin, Transfer, Tag } from \"antd\";\r\nconst ButtonGroup = Button.Group;\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport Table, { setColumns } from \"components/table\";\r\nimport { useDataAPI } from \"utils/useDataAPI\";\r\nimport { RightOutlined, LeftOutlined, LoadingOutlined, SwapOutlined, SearchOutlined } from '@ant-design/icons';\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nconst loadPaletesStockLookup = async (of_id) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/paletesstocklookup/`, pagination: { enabled: true, page: 1, pageSize: 20 }, filter: { of_id } });\r\n    return rows;\r\n}\r\n\r\n\r\n\r\n/* <Table\r\n    rowSelection={rowSelection}\r\n    columns={columns}\r\n    dataSource={filteredItems}\r\n    size=\"small\"\r\n    rowKey=\"nome\"\r\n    style={{ pointerEvents: listDisabled ? 'none' : null }}\r\n    onRow={({ key, disabled: itemDisabled }) => ({\r\n        onClick: () => {\r\n            if (itemDisabled || listDisabled) return;\r\n            onItemSelect(key, !listSelectedKeys.includes(key));\r\n        },\r\n    })}\r\n/> */\r\n\r\n\r\nconst GlobalSearch = ({ form, formName, dataAPI } = {}) => {\r\n\r\n    const onValuesChange = (changedValues) => {\r\n        \r\n    }\r\n\r\n    const onFinish = async () => {\r\n        const { item_id, of_id } = dataAPI.getFilter();\r\n        dataAPI.addFilters({ of_id, item_id, [formName]: form.getFieldValue(formName) });\r\n        dataAPI.first();\r\n        dataAPI.fetchPost();\r\n    }\r\n\r\n    return (\r\n        <Form form={form} name={formName} onFinish={onFinish} onValuesChange={onValuesChange} >\r\n            <FormLayout\r\n                id=\"PS-FILTER\"\r\n                layout=\"horizontal\"\r\n                style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                field={{\r\n                    forInput: true,\r\n                    wide: [16],\r\n                    margin: \"2px\", overflow: false,\r\n                    label: { enabled: true, pos: \"top\", wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                    alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                    layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                    required: true,\r\n                    style: { alignSelf: \"center\" }\r\n                }}\r\n                fieldSet={{ wide: 16, margin: false, layout: \"horizontal\", overflow: false, style: { alignSelf: \"center\" } }}\r\n            >\r\n                <Field name={formName} label={{ enabled: false }} addons={{right:<Button /* style={{ padding: \"3px\" }} */ size='small' onClick={onFinish}><SearchOutlined /></Button>}}><Input size=\"small\"/></Field>\r\n            </FormLayout>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst TableTransfer = ({ aggItem, leftColumns, rightColumns, leftDataAPI, rightDataAPI, setResultMessage, ...props }) => {\r\n    const [formLeftFilter] = Form.useForm();\r\n    const [formRightFilter] = Form.useForm();\r\n    const { tempof_id: id, qty_encomenda } = aggItem;\r\n    const [leftSelectedRows, setLeftSelectedRows] = useState([]);\r\n    const [rightSelectedRows, setRightSelectedRows] = useState([]);\r\n    const [selectedTotais, setSelectedTotais] = useState({ left: { st: 0, stm2: 0, total: 0, totalm2: 0 }, right: { st: 0, stm2: 0, total: 0, totalm2: 0, vTotal: 0, vTotalm2: 0 } });\r\n\r\n    useEffect(() => {\r\n        if (!(leftDataAPI.isLoading() && rightDataAPI.isLoading())) {\r\n            const totalm2 = rightDataAPI.getData().rows.reduce((a, b) => a + (b[\"area\"] || 0), 0);\r\n            setSelectedTotais(prev => ({\r\n                left: { st: 0, stm2: 0, total: 0, totalm2: 0 },\r\n                right: { st: 0, stm2: 0, vTotal: rightDataAPI.getData().total, vTotalm2: totalm2, total: rightDataAPI.getData().total, totalm2 }\r\n            }));\r\n        }\r\n    }, [(leftDataAPI.isLoading() && rightDataAPI.isLoading())]);\r\n\r\n\r\n    const addRemove = async () => {\r\n        const response = await fetchPost({ url: `${API_URL}/savepaletesstock/`, parameters: { id, left: leftSelectedRows, right: rightSelectedRows } });\r\n        if (response.data.status !== \"error\") {\r\n            const cancelFetch = cancelToken();\r\n            setLeftSelectedRows([]);\r\n            leftDataAPI.fetchPost({ token: cancelFetch });\r\n            rightDataAPI.fetchPost({ token: cancelFetch });\r\n        } else {\r\n            setResultMessage(response.data);\r\n        }\r\n    }\r\n\r\n    const selection = (s, key, keyValue, value) => {\r\n        if (Array.isArray(value)) {\r\n            s[key] = { ...s[key], st: value.length, stm2: value.reduce((a, b) => a + (b[\"area\"] || 0), 0) };\r\n            console.log(\"array\", s);\r\n        } else {\r\n            if (keyValue.length <= s[key].st) {\r\n                //remove\r\n                s[key] = { ...s[key], st: keyValue.length, stm2: (parseFloat(s[key].stm2) - value.area) };\r\n            } else {\r\n                //add\r\n                s[key] = { ...s[key], st: keyValue.length, stm2: (parseFloat(s[key].stm2) + value.area) };\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const onSelectionLeft = (keyValue, value) => {\r\n        const s = { ...selectedTotais };\r\n        selection(s, \"left\", keyValue, value);\r\n        s.right.vTotal = s.right.total - s.right.st + s.left.st;\r\n        s.right.vTotalm2 = s.right.totalm2 - s.right.stm2 + s.left.stm2;\r\n        setSelectedTotais(s);\r\n    }\r\n\r\n    const onSelectionRight = (keyValue, value) => {\r\n        const s = { ...selectedTotais };\r\n        selection(s, \"right\", keyValue, value);\r\n        s.right.vTotal = s.right.total - s.right.st + s.left.st;\r\n        s.right.vTotalm2 = s.right.totalm2 - s.right.stm2 + s.left.stm2;\r\n        setSelectedTotais(s);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div>\r\n                <Toolbar\r\n                    style={{ width: \"100%\" }}\r\n                    left={\r\n                        <div>Encomenda <b>{aggItem.qty_encomenda} m&#178;</b></div>\r\n                    }\r\n                    right={<div>\r\n                        <div><b>{selectedTotais.right.total}</b> Paletes Adicionadas</div>\r\n                        <div style={{ color: qty_encomenda <= selectedTotais.right.vTotalm2 ? \"#389e0d\" : \"#000\" }}><b>{selectedTotais.right.totalm2.toFixed(2)} m&#178;</b></div>\r\n                    </div>}\r\n                />\r\n            </div>\r\n\r\n\r\n\r\n            <div style={{ display: \"flex\", flexDirection: \"row\",overflow:\"hidden\"/* , alignItems: \"center\" */ }}>\r\n                <div style={{ width: \"45%\" }}>\r\n                    <div>\r\n                        <div>Paletes em Stock (<b>{selectedTotais.left.st}</b> selecionadas)</div>\r\n                        <div><b>{selectedTotais.left.stm2.toFixed(2)} m&#178;</b></div>\r\n                    </div>\r\n                    <Table\r\n                        columnChooser={false}\r\n                        reload={false}\r\n                        clearSort={false}\r\n                        stripRows\r\n                        darkHeader={false}\r\n                        toolbar={<GlobalSearch form={formLeftFilter} formName=\"fpl-filter\" dataAPI={leftDataAPI} />}\r\n                        size=\"small\"\r\n                        selection={{ enabled: true, rowKey: \"id\", onSelection: onSelectionLeft, multiple: true, selectedRows: leftSelectedRows, setSelectedRows: setLeftSelectedRows }}\r\n                        paginationProps={{ pageSizeOptions: [10, 15, 20, 30] }}\r\n                        dataAPI={leftDataAPI}\r\n                        columns={leftColumns}\r\n                        onFetch={leftDataAPI.fetchPost}\r\n                    //scroll={{ x: '100%', y: \"75vh\", scrollToFirstRowOnChange: true }}\r\n                    />\r\n                </div>\r\n                <div style={{ width: \"5%\", textAlign: \"center\", alignSelf: \"center\" }}><Button type='primary' onClick={addRemove} size=\"small\" icon={<SwapOutlined />} /></div>\r\n                <div style={{ flex:1 }}>\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                        {/*                         <div style={{ width: \"50%\" }}>\r\n                            <div><b>{selectedTotais.right.total}</b> Paletes Adicionadas</div>\r\n                            <div style={{ color: qty_encomenda <= selectedTotais.right.vTotalm2 ? \"#389e0d\" : \"#000\" }}><b>{selectedTotais.right.totalm2.toFixed(2)} m&#178;</b></div>\r\n                        </div> */}\r\n                        <div style={{ width: \"50%\" }}>\r\n                            <div>Total Virtual <b>{selectedTotais.right.vTotal}</b> Paletes</div>\r\n                            <div style={{ color: qty_encomenda <= selectedTotais.right.vTotalm2 ? \"#389e0d\" : \"#000\" }}><b>{selectedTotais.right.vTotalm2.toFixed(2)} m&#178;</b></div>\r\n                        </div>\r\n                    </div>\r\n                    <Table\r\n                        columnChooser={false}\r\n                        reload={false}\r\n                        clearSort={false}\r\n                        stripRows\r\n                        darkHeader={false}\r\n                        toolbar={<GlobalSearch form={formRightFilter} formName=\"fpr-filter\" dataAPI={rightDataAPI} />}\r\n                        size=\"small\"\r\n                        selection={{ enabled: true, rowKey: \"id\", onSelection: onSelectionRight, multiple: true, selectedRows: rightSelectedRows, setSelectedRows: setRightSelectedRows }}\r\n                        /* paginationProps={{ pageSizeOptions: [10, 15, 20, 30] }} */\r\n                        dataAPI={rightDataAPI}\r\n                        columns={rightColumns}\r\n                        onFetch={rightDataAPI.fetchPost}\r\n                        scroll={{ y: 465, scrollToFirstRowOnChange: true }}\r\n                    /* style={{ maxHeight: \"465px\", overflowY: \"auto\" }} */\r\n                    //scroll={{ x: '100%', y: \"75vh\", scrollToFirstRowOnChange: true }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const { aggItem } = record;\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(aggItem.of_id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n    const leftDataAPI = useDataAPI({ payload: { url: `${API_URL}/paletesstocklookup/`, parameters: {}, pagination: { enabled: true, page: 1, pageSize: 15 }, filter: { item_id: aggItem.item_id }, sort: [] } });\r\n    const rightDataAPI = useDataAPI({ payload: { url: `${API_URL}/paletesstockget/`, parameters: {}, pagination: { enabled: false }, filter: { of_id: aggItem.tempof_id }, sort: [] } });\r\n\r\n\r\n    const init = () => {\r\n        const cancelFetch = cancelToken();\r\n        (async () => {\r\n            (setFormTitle) && setFormTitle({ title: `Paletes em Stock ${aggItem.item_cod}`, subTitle: `${aggItem.cliente_nome}` });\r\n            leftDataAPI.first();\r\n            leftDataAPI.fetchPost({ token: cancelFetch });\r\n            rightDataAPI.first();\r\n            rightDataAPI.fetchPost({ token: cancelFetch });\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    const columns = {\r\n        ...((common) => (\r\n            {\r\n                nome: { title: \"Palete\", width: 100, render: v => (<div style={{ fontSize: \"12px\", fontWeight: 700 }}>{v}</div>), ...common },\r\n                largura_bobines: { title: \"Larg.\", width: 60, render: v => (<div style={{ fontSize: \"10px\" }}>{v} mm</div>), ...common },\r\n                core_bobines: { title: \"\", width: 20, render: v => (<div style={{ fontSize: \"10px\" }}>{v}''</div>), ...common },\r\n                area: { title: \"Área\", width: 80, render: v => (<div style={{ fontSize: \"10px\" }}>{v} m&#178;</div>), ...common }\r\n                /* comp_total: { title: \"Comp.\", width: 60, render: v => (<div style={{ fontSize: \"10px\" }}>{v} m</div>), ...common } */\r\n            }\r\n        ))({ idx: 1, optional: false, sort: false })\r\n    };\r\n\r\n    const leftColumns = setColumns(\r\n        {\r\n            dataAPI: leftDataAPI,\r\n            data: leftDataAPI.getData().rows,\r\n            uuid: \"leftPaletesStock\",\r\n            include: columns,\r\n            exclude: []\r\n        }\r\n    );\r\n    const rightColumns = setColumns(\r\n        {\r\n            dataAPI: rightDataAPI,\r\n            data: rightDataAPI.getData().rows,\r\n            uuid: \"rightPaletesStock\",\r\n            include: columns,\r\n            exclude: []\r\n        }\r\n    );\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        init(true);\r\n    }, []);\r\n\r\n    const onErrorOK = () => {\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        parentReload({ agg_id: aggItem.id });\r\n        closeParent();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <Spin spinning={(leftDataAPI.isLoading() || rightDataAPI.isLoading())} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                    {(leftDataAPI.hasData() && rightDataAPI.hasData()) &&\r\n                        <TableTransfer\r\n                            aggItem={aggItem}\r\n                            leftColumns={leftColumns}\r\n                            rightColumns={rightColumns}\r\n                            leftDataAPI={leftDataAPI}\r\n                            rightDataAPI={rightDataAPI}\r\n                            setResultMessage={setResultMessage}\r\n                        />\r\n                    }\r\n                </Spin>\r\n\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button type=\"primary\" onClick={onClose}>Fechar</Button>\r\n{/*                         <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}"],"names":["Button","GlobalSearch","form","formName","dataAPI","onValuesChange","changedValues","onFinish","getFilter","item_id","of_id","addFilters","getFieldValue","first","fetchPost","name","id","layout","style","width","padding","field","forInput","wide","margin","overflow","label","enabled","pos","wrap","colon","ellipsis","alert","tooltip","container","top","right","center","bottom","left","required","alignSelf","fieldSet","addons","size","onClick","TableTransfer","aggItem","leftColumns","rightColumns","leftDataAPI","rightDataAPI","setResultMessage","formLeftFilter","Form","formRightFilter","tempof_id","qty_encomenda","useState","leftSelectedRows","setLeftSelectedRows","rightSelectedRows","setRightSelectedRows","st","stm2","total","totalm2","vTotal","vTotalm2","selectedTotais","setSelectedTotais","useEffect","isLoading","getData","rows","reduce","a","b","prev","addRemove","url","API_URL","parameters","response","data","status","cancelFetch","cancelToken","token","selection","s","key","keyValue","value","Array","isArray","length","parseFloat","area","color","toFixed","display","flexDirection","columnChooser","reload","clearSort","stripRows","darkHeader","toolbar","rowKey","onSelection","multiple","selectedRows","setSelectedRows","paginationProps","pageSizeOptions","columns","onFetch","textAlign","type","icon","flex","scroll","y","scrollToFirstRowOnChange","common","record","setFormTitle","parentRef","closeParent","parentReload","wrapForm","setLoading","error","warning","info","success","values","resultMessage","useDataAPI","payload","pagination","page","pageSize","filter","sort","nome","title","render","v","fontSize","fontWeight","idx","optional","largura_bobines","core_bobines","setColumns","uuid","include","exclude","item_cod","subTitle","cliente_nome","onClose","agg_id","result","errorButtonOK","errorButtonClose","spinning","indicator","spin","tip","hasData","elId","current"],"sourceRoot":""}