{"version":3,"file":"chunks/src_pages_currentline_FormCortes_jsx.chunk.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAM6C,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAOC,WAAP,EAAuB;AAClC,SAAOC,SAAS,CAAC,EAAD,EAAKF,IAAL,EAAWC,WAAX,CAAT,CAAiCE,OAAjC,CAAyC,IAAzC,CAAP;AACH,CAFD;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAmD;AAAA,MAAhDC,WAAgD,QAAhDA,WAAgD;AAAA,MAAnCC,cAAmC,QAAnCA,cAAmC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAC9D,kBAAkCnD,gDAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOoD,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,IAAI,GAAGpD,8CAAM,EAAnB;AACA,4BAAwB+C,WAAxB,CAAQM,MAAR;AAAA,MAAQA,MAAR,oCAAiB,EAAjB;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBN,IAAAA,cAAc,CAAC,UAAAO,IAAI;AAAA,6CAAUA,IAAV;AAAgBC,QAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAA5B;AAAA,KAAL,CAAd;AACH,GAFD;;AAGA,sBACI,kDAAC,+DAAD;AACI,SAAK,eAAE,kDAAC,6DAAD;AAAW,WAAK,EAAEN,SAAS,CAACO,KAA5B;AAAmC,cAAQ,EAAEP,SAAS,CAACQ;AAAvD,MADX;AAEI,QAAI,EAAC,OAFT;AAGI,QAAI,EAAC,WAHT;AAII,kBAAc,EAAE,IAJpB;AAKI,QAAI,EAAE,IALV;AAMI,cAAU,EAAEJ,SANhB;AAOI,WAAO,EAAEP,WAAW,CAACS,IAPzB;AAQI,SAAK,EAAE,GARX;AASI,aAAS,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KATf;AAUI,UAAM,eAAE;AAAK,SAAG,EAAEP,IAAV;AAAgB,QAAE,EAAC,cAAnB;AAAkC,WAAK,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb;AAAzC;AAVZ,kBAYI,kDAAC,0DAAD;AAAkB,gBAAY,EAAET,YAAhC;AAA8C,UAAM,EAAEE,MAAtD;AAA8D,aAAS,EAAED,IAAzE;AAA+E,eAAW,EAAEE,SAA5F;AAAuG,gBAAY,EAAEL;AAArH,IAZJ,CADJ;AAgBH,CAvBD;AA0BA;AACA;AACA;AACA;;;AAEA,IAAMY,qBAAqB;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,SAAT,SAASA,SAAT,EAAoBC,KAApB,SAAoBA,KAApB;AAAA;AAAA,mBACOxD,uDAAS,CAAC;AAAEyD,cAAAA,GAAG,YAAKvD,4CAAL,wBAAL;AAAwCwD,cAAAA,MAAM,EAAE;AAAEH,gBAAAA,SAAS,EAATA;AAAF,eAAhD;AAA+DI,cAAAA,IAAI,EAAE,CAAC;AAAEC,gBAAAA,MAAM,EAAE,QAAV;AAAoBC,gBAAAA,SAAS,EAAE;AAA/B,eAAD,CAArE;AAAgH5D,cAAAA,WAAW,EAAEuD;AAA7H,aAAD,CADhB;;AAAA;AAAA;AACVM,YAAAA,IADU,oBAClBC,IADkB,CACVD,IADU;AAAA,6CAEnBA,IAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBR,qBAAqB;AAAA;AAAA;AAAA,GAA3B;;AAKA,IAAMU,MAAM,GAAG,CACX;AAAEC,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CADW,EAEX;AAAED,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAFW,EAE8B;AAAED,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAF9B,EAGX;AAAED,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAHW,EAG8B;AAAED,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAH9B,EAIX;AAAED,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAJW,CAAf;AAOA,iEAAe,iBAAwG;AAAA,MAArGpB,MAAqG,SAArGA,MAAqG;AAAA,MAA7FF,YAA6F,SAA7FA,YAA6F;AAAA,MAA/EuB,SAA+E,SAA/EA,SAA+E;AAAA,MAApEC,WAAoE,SAApEA,WAAoE;AAAA,MAAvD1B,YAAuD,SAAvDA,YAAuD;AAAA,6BAAzC2B,QAAyC;AAAA,MAAzCA,QAAyC,+BAA9B,MAA8B;AAAA,6BAAtBC,QAAsB;AAAA,MAAtBA,QAAsB,+BAAX,IAAW;;AACnH,sBAAe/C,qDAAA,EAAf;AAAA;AAAA,MAAOiD,IAAP;;AACA,mBAA8BjF,gDAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOkF,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA0CnF,gDAAQ,CAAC;AAAEoF,IAAAA,MAAM,EAAE;AAAV,GAAD,CAAlD;AAAA;AAAA,MAAOC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAgCtF,gDAAQ,CAAC;AAAE0D,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAxC;AAAA;AAAA,MAAO6B,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAoCxF,gDAAQ,CAAC;AAAEyF,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE,EAAtB;AAA0BC,IAAAA,IAAI,EAAE,EAAhC;AAAoCC,IAAAA,OAAO,EAAE;AAA7C,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,oBAAkD9F,gDAAQ,CAAC,EAAD,CAA1D;AAAA;AAAA,MAAO+F,iBAAP;AAAA,MAA0BC,oBAA1B;;AACA,oBAAsChG,gDAAQ,EAA9C;AAAA;AAAA,MAAOiG,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAA0ClG,gDAAQ,EAAlD;AAAA;AAAA,MAAOmG,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAAkCpG,gDAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOqG,SAAP;AAAA,MAAkBC,YAAlB;;AAEAvG,EAAAA,iDAAS,CAAC,YAAM;AACZ,QAAMwG,WAAW,GAAG7F,yDAAW,EAA/B,CADY,CAEZ;;AACA8F,IAAAA,IAAI,CAAC;AAAE;AAA0BvC,MAAAA,KAAK,EAAEsC;AAAnC,KAAD,CAAJ;AACA,WAAQ;AAAA,aAAMA,WAAW,CAACE,MAAZ,CAAmB,uBAAnB,CAAN;AAAA,KAAR;AACH,GALQ,EAKN,EALM,CAAT;AAOA1G,EAAAA,iDAAS,CAAC,YAAM;AACZ,QAAIoG,aAAJ,EAAmB;AACf,UAAI,YAAYA,aAAhB,EAA+B;AAC3BD,QAAAA,cAAc,CAACQ,oBAAoB,CAAC;AAAEC,UAAAA,QAAQ,EAAE1B,IAAI,CAAC2B,aAAL,CAAmB,QAAnB;AAAZ,SAAD,CAArB,CAAd;AACH;;AACD,UAAI,oBAAoBT,aAAxB,EAAuC,CACtC;AACJ;AACJ,GARQ,EAQN,CAACA,aAAD,CARM,CAAT;;AAUA,MAAMK,IAAI,GAAG,SAAPA,IAAO,QAAe;AAAA,QAAZvC,KAAY,SAAZA,KAAY;;AACxB,QAAI,CAACiB,OAAL,EAAc;AACVC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,4DAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACW0B,cAAAA,MADX,GACuCtD,MADvC,CACWsD,MADX,EACmBC,WADnB,GACuCvD,MADvC,CACmBuD,WADnB,EAC+BC,GAD/B,GACuCxD,MADvC,CAC+BwD,GAD/B;;AAAA,mBAE+BhC,QAF/B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEiDhB,qBAAqB,CAAC;AAAEC,gBAAAA,SAAS,EAAE6C,MAAM,CAACG,EAApB;AAAwB/C,gBAAAA,KAAK,EAALA;AAAxB,eAAD,CAFtE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAE0G,mBAAM6C,WAAN,EAF1G;;AAAA;AAESG,cAAAA,kBAFT;AAGSC,cAAAA,SAHT,GAGqBC,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACQ,YAAlB,CAHrB;AAIOC,cAAAA,OAJP,GAIiBC,MAAM,CAAC3E,IAAP,CAAYsE,SAAZ,EAAuBM,GAAvB,CAA2B,UAACC,GAAD,EAAMC,CAAN;AAAA,uBAAa;AAAEC,kBAAAA,QAAQ,EAAEF,GAAZ;AAAiBG,kBAAAA,YAAY,EAAEV,SAAS,CAACO,GAAD,CAAxC;AAA+C/C,kBAAAA,MAAM,EAAED,MAAM,CAACiD,CAAD,CAAN,CAAUhD,MAAjE;AAAyEC,kBAAAA,KAAK,EAAEF,MAAM,CAACiD,CAAD,CAAN,CAAU/C,KAA1F;AAAgGkD,kBAAAA,OAAO,EAACd,GAAG,CAAC5C,MAAJ,CAAW,UAAA2D,CAAC;AAAA,2BAAEA,CAAC,CAACC,UAAF,IAAcN,GAAhB;AAAA,mBAAZ,EAAiCD,GAAjC,CAAqC,UAACQ,IAAD;AAAA,2BAAU;AAACrD,sBAAAA,KAAK,EAACqD,IAAI,CAACrD,KAAZ;AAAkBsD,sBAAAA,SAAS,EAACD,IAAI,CAACC,SAAjC;AAA2CC,sBAAAA,UAAU,EAACF,IAAI,CAACE,UAA3D;AAAsEC,sBAAAA,UAAU,EAACH,IAAI,CAACG,UAAtF;AAAiGC,sBAAAA,WAAW,EAACJ,IAAI,CAACI,WAAlH;AAA8HC,sBAAAA,YAAY,EAACL,IAAI,CAACK,YAAhJ;AAA6JC,sBAAAA,KAAK,EAACN,IAAI,CAACM,KAAxK;AAA8KC,sBAAAA,MAAM,EAACP,IAAI,CAACO;AAA1L,qBAAV;AAAA,mBAArC;AAAxG,iBAAb;AAAA,eAA3B,CAJjB,EAKG;;AACAtD,cAAAA,IAAI,CAACuD,cAAL,CAAoB;AAAE3B,gBAAAA,MAAM,EAAES,OAAV;AAAmBtD,gBAAAA,SAAS,EAAE6C,MAAM,CAACG,EAArC;AAAyCyB,gBAAAA,cAAc,EAAE3B,WAAW,CAACE;AAArE,eAApB;AACAd,cAAAA,cAAc,CAACQ,oBAAoB,CAAC;AAAEC,gBAAAA,QAAQ,EAAEQ,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACQ,YAAlB;AAAZ,eAAD,CAArB,CAAd;AACArB,cAAAA,oBAAoB,CAACiB,kBAAD,CAApB;AACA9B,cAAAA,UAAU,CAAC,KAAD,CAAV;;AATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAWH,GAfD;;AAiBA,MAAMuD,QAAQ,GAAG,SAAXA,QAAW,QAAiD;AAAA,QAA9CC,MAA8C,SAA9CA,MAA8C;AAAA,QAAtC3E,SAAsC,SAAtCA,SAAsC;AAAA,QAA3BC,KAA2B,SAA3BA,KAA2B;AAAA,QAAlB2E,IAAkB,uEAAX,MAAW;;AAC9D,YAAQA,IAAR;AACI,WAAK,QAAL;AACI,gEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACSC,kBAAAA,UADT,GACuB,CAAC7E,SAAF,GAAeiB,IAAI,CAAC2B,aAAL,CAAmB,WAAnB,CAAf,GAAiD5C,SADvE;AAAA;AAAA,yBAEoCD,qBAAqB,CAAC;AAAEC,oBAAAA,SAAS,EAAE6E,UAAb;AAAyB5E,oBAAAA,KAAK,EAALA;AAAzB,mBAAD,CAFzD;;AAAA;AAESgD,kBAAAA,kBAFT;AAGGjB,kBAAAA,oBAAoB,CAACiB,kBAAD,CAApB;;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD;;AAKA;;AACJ;AACI,YAAI,CAAC/B,OAAL,EAAc;AACVC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,gEAAC;AAAA;AAAA;AAAA;AAAA;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,kBAAAA,UAAU,CAAC,KAAD,CAAV;;AARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD;;AAZR;AAuBH,GAxBD;;AA2BA,MAAM2D,cAAc,GAAG,SAAjBA,cAAiB,CAAC3C,aAAD,EAAgB4C,SAAhB,EAA8B;AACjDzC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACH,GAHD;;AAKA,MAAM6C,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAMhC,EAAE,GAAG/B,IAAI,CAAC2B,aAAL,CAAmB,gBAAnB,CAAX;AACA,WAAO,CAAEI,EAAD,GAAOjB,iBAAiB,CAAC5B,MAAlB,CAAyB,UAAA2D,CAAC;AAAA,aAAIA,CAAC,CAACd,EAAF,KAASA,EAAb;AAAA,KAA1B,CAAP,GAAoD,EAArD,EAAyD,CAAzD,CAAP;AACH,GAHD;;AAKA,MAAMiC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,WAAO,CAAE,CAAChE,IAAI,CAAC2B,aAAL,CAAmB,WAAnB;AAAgC;AAA1C;AACH,GAFD;;AAIA,MAAMF,oBAAoB,GAAGzG,mDAAW,CAAC,kBAA0B;AAAA,QAAvB4G,MAAuB,UAAvBA,MAAuB;AAAA,QAAfF,QAAe,UAAfA,QAAe;;AAC/D,QAAIE,MAAJ,EAAY;AACR,aAAOA,MAAM,CAACqC,MAAP,CAAc,UAACC,WAAD,EAAcC,OAAd;AAAA,eAA0BD,WAAW,GAAIC,OAAO,CAACC,qBAAR,GAAgCD,OAAO,CAACE,iBAAjF;AAAA,OAAd,EAAmH,CAAnH,CAAP;AACH,KAFD,MAEO;AACH,UAAIC,KAAK,CAACC,OAAN,CAAc7C,QAAd,CAAJ,EAA6B;AACzB,eAAOA,QAAQ,CAACuC,MAAT,CAAgB,UAACC,WAAD,EAAcC,OAAd;AAAA,iBAA0BD,WAAW,GAAIC,OAAO,CAACxB,YAAR,GAAuBwB,OAAO,CAACzB,QAAxE;AAAA,SAAhB,EAAmG,CAAnG,CAAP;AACH,OAFD,MAEO;AACH,YAAIG,CAAC,GAAG,CAAR;;AACA,aAAK,IAAI2B,EAAT,IAAe9C,QAAf,EAAyB;AACrBmB,UAAAA,CAAC,IAAK4B,QAAQ,CAAC/C,QAAQ,CAAC8C,EAAD,CAAT,CAAR,GAAyBC,QAAQ,CAACD,EAAD,CAAvC;AACH;;AACD,eAAO3B,CAAP;AACH;AACJ;AACJ,GAduC,CAAxC;;AAgBA,MAAM6B,QAAQ;AAAA,yEAAG,kBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACbC,cAAAA,OAAO,CAACC,GAAR,CAAYvG,MAAZ;AADa,qCAEyB0B,IAAI,CAAC8E,cAAL,CAAoB,IAApB,CAFzB,EAEL/F,SAFK,wBAELA,SAFK,EAEMyE,cAFN,wBAEMA,cAFN;AAAA;AAAA,qBAGUhI,uDAAS,CAAC;AAAEyD,gBAAAA,GAAG,YAAKvD,4CAAL,4BAAL;AAA4CwD,gBAAAA,MAAM,EAAE;AAAE6F,kBAAAA,IAAI,EAAEzG,MAAM,CAACyD;AAAf,iBAApD;AAAyEiD,gBAAAA,UAAU,EAAE;AAAErB,kBAAAA,IAAI,EAAE,QAAR;AAAkB/B,kBAAAA,MAAM,EAAE;AAAE7C,oBAAAA,SAAS,EAATA,SAAF;AAAayE,oBAAAA,cAAc,EAAdA;AAAb;AAA1B;AAArF,eAAD,CAHnB;;AAAA;AAGPyB,cAAAA,QAHO;AAIb5E,cAAAA,gBAAgB,CAAC4E,QAAQ,CAAC1F,IAAV,CAAhB;;AAJa,oBAKT0F,QAAQ,CAAC1F,IAAT,CAAcY,MAAd,KAAyB,OALhB;AAAA;AAAA;AAAA;;AAAA,oBAMH,oBANG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARuE,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAWA,MAAMQ,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACP/E,cAAAA,MADO,GACE;AAAEK,gBAAAA,KAAK,EAAE,EAAT;AAAaC,gBAAAA,OAAO,EAAE,EAAtB;AAA0BC,gBAAAA,IAAI,EAAE,EAAhC;AAAoCC,gBAAAA,OAAO,EAAE;AAA7C,eADF;AAAA;AAAA,qBAEUnF,uDAAS,CAAC;AAAEyD,gBAAAA,GAAG,YAAKvD,4CAAL,gBAAL;AAAgCsJ,gBAAAA,UAAU,oBAAOhF,IAAI,CAAC8E,cAAL,CAAoB,CAAC,QAAD,CAApB,CAAP;AAA1C,eAAD,CAFnB;;AAAA;AAEPG,cAAAA,QAFO;;AAGb,kBAAIA,QAAQ,CAAC1F,IAAT,CAAcY,MAAd,IAAwB,OAA5B,EAAqC;AACjCA,gBAAAA,MAAM,CAACK,KAAP,CAAa2E,IAAb,CAAkB;AAAEC,kBAAAA,OAAO,EAAEH,QAAQ,CAAC1F,IAAT,CAAcb;AAAzB,iBAAlB;AACH,eAFD,MAEO;AACHyB,gBAAAA,MAAM,CAACQ,OAAP,CAAewE,IAAf,CAAoB;AAAEC,kBAAAA,OAAO,EAAEH,QAAQ,CAAC1F,IAAT,CAAcb;AAAzB,iBAApB;AACAsB,gBAAAA,IAAI,CAACuD,cAAL,CAAoB;AAAExE,kBAAAA,SAAS,EAAEkG,QAAQ,CAAC1F,IAAT,CAAcwC;AAA3B,iBAApB;AACA0B,gBAAAA,QAAQ,CAAC;AAAE1E,kBAAAA,SAAS,EAAEkG,QAAQ,CAAC1F,IAAT,CAAcwC;AAA3B,iBAAD,EAAkC,QAAlC,CAAR;AACH;;AACDlB,cAAAA,aAAa,CAACV,MAAD,CAAb;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAR+E,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAaA,MAAMG,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAChBtE,cAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAf,cAAAA,IAAI,CAACuD,cAAL,CAAoB;AAAExE,gBAAAA,SAAS,EAAE,IAAb;AAAmByE,gBAAAA,cAAc,EAAE;AAAnC,eAApB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAX6B,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAcA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAqB;AAAA,QAApBC,OAAoB,uEAAV,KAAU;;AACpC,QAAIA,OAAJ,EAAa;AACThF,MAAAA,WAAW,CAAC,UAAA/B,IAAI;AAAA,+CAAUA,IAAV;AAAgBC,UAAAA,IAAI,EAAE,CAACD,IAAI,CAACC,IAA5B;AAAkCH,UAAAA,MAAM,oBAAO0B,IAAI,CAAC8E,cAAL,CAAoB,CAAC,QAAD,EAAW,WAAX,CAApB,CAAP;AAAxC;AAAA,OAAL,CAAX;AACH,KAFD,MAEO;AACHvE,MAAAA,WAAW,CAAC,UAAA/B,IAAI;AAAA,+CAAUA,IAAV;AAAgBC,UAAAA,IAAI,EAAE,CAACD,IAAI,CAACC,IAA5B;AAAkCH,UAAAA,MAAM,kCAAO0B,IAAI,CAAC8E,cAAL,CAAoB,CAAC,QAAD,EAAW,WAAX,CAApB,CAAP;AAAqDf,YAAAA,WAAW,EAAEA,WAAW;AAA7E;AAAxC;AAAA,OAAL,CAAX;AACH;AACJ,GAND;;AAQA,MAAMyB,OAAO,GAAG,SAAVA,OAAU,GAAoB;AAAA,QAAnBC,MAAmB,uEAAV,KAAU;AAChC7F,IAAAA,WAAW;AACd,GAFD;;AAIA,MAAM8F,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAIC,SAAS,CAACnD,GAAV,KAAkB,QAAtB,EAAgC;AAC5BxC,MAAAA,IAAI,CAAC4F,WAAL;AACArE,MAAAA,IAAI;AACJlB,MAAAA,gBAAgB,CAAC;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAhB;AACH;AACJ,GAND;;AAQA,MAAM0F,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBxF,IAAAA,gBAAgB,CAAC;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAhB;AACH,GAFD;;AAIA,sBACI,mHACI,kDAAC,iEAAD;AACI,UAAM,EAAEC,aADZ;AAEI,sBAAkB,eAAE,kDAAC,6CAAD;AAAQ,SAAG,EAAC,YAAZ;AAAyB,aAAO,EAAE;AAAA,eAAMoF,OAAO,CAAC,IAAD,CAAb;AAAA;AAAlC,gBAFxB;AAGI,iBAAa,eAAE,kDAAC,6CAAD;AAAQ,UAAI,EAAC,SAAb;AAAuB,SAAG,EAAC,SAA3B;AAAqC,aAAO,EAAEK;AAA9C,YAHnB;AAII,oBAAgB,eAAE,kDAAC,6CAAD;AAAQ,SAAG,EAAC,YAAZ;AAAyB,aAAO,EAAEL;AAAlC;AAJtB,kBAMI,kDAAC,iEAAD;AAAe,cAAU,EAAE5E;AAA3B,IANJ,eAOI,kDAAC,6CAAD;AAAM,YAAQ,EAAEX,OAAhB;AAAyB,aAAS,eAAE,kDAAC,0DAAD;AAAiB,WAAK,EAAE;AAAE6F,QAAAA,QAAQ,EAAE;AAAZ,OAAxB;AAA0C,UAAI;AAA9C,MAApC;AAAuF,OAAG,EAAC;AAA3F,kBACI,kDAAC,MAAD;AAAQ,eAAW,EAAExF,QAArB;AAA+B,kBAAc,EAAEC,WAA/C;AAA4D,gBAAY,EAAEkD;AAA1E,IADJ,eAEI,kDAAC,6CAAD;AAAM,QAAI,EAAEzD,IAAZ;AAAkB,QAAI,SAAtB;AAAiC,YAAQ,EAAE0E,QAA3C;AAAqD,kBAAc,EAAEb;AAArE,kBACI,kDAAC,8DAAD;AACI,MAAE,EAAC,YADP;AAEI,UAAM,EAAC,UAFX;AAGI,SAAK,EAAE;AAAEkC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAAK;;AAA/B,KAHX;AAII,UAAM,EAAEtI,MAJZ;AAKI,SAAK,EAAE;AACH;AACAuI,MAAAA,MAAM,EAAE,KAFL;AAEYC,MAAAA,QAAQ,EAAE,KAFtB;AAGHC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,GAAG,EAAE,KAAtB;AAA6BC,QAAAA,KAAK,EAAE,OAApC;AAA6CC,QAAAA,MAAM,EAAE,QAArD;;AAA+D;AAAqBC,QAAAA,IAAI,EAAE,KAA1F;AAAiGN,QAAAA,QAAQ,EAAE,KAA3G;AAAkHO,QAAAA,KAAK,EAAE,IAAzH;AAA+HC,QAAAA,QAAQ,EAAE;AAAzI,OAHJ;AAIHC,MAAAA,KAAK,EAAE;AAAEN,QAAAA,GAAG,EAAE,OAAP;AAAgBO,QAAAA,OAAO,EAAE,IAAzB;AAA+BC,QAAAA,SAAS,EAAE;AAAK;;AAA/C,OAJJ;AAKHC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,MAAM,EAAE,EAA9B;AAAkCC,QAAAA,MAAM,EAAE,EAA1C;AAA8CC,QAAAA,IAAI,EAAE;AAApD,OALL;AAMHC,MAAAA,MAAM,EAAE,EANL;AAMS;AACZC,MAAAA,QAAQ,EAAE,IAPP;AAQHC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AARJ,KALX;AAeI,YAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE,EADA;AACIvB,MAAAA,MAAM,EAAE,KADZ;AACmBa,MAAAA,MAAM,EAAE,YAD3B;AACyCZ,MAAAA,QAAQ,EAAE;AADnD;AAfd,kBAoBI,kDAAC,4DAAD,QACKlG,IAAI,CAAC2B,aAAL,CAAmB,WAAnB,kBAAmC,kDAAC,2DAAD;AAChC,SAAK,EAAE;AAAEoE,MAAAA,KAAK,EAAE;AAAT,KADyB;AAEhC,QAAI,eAAE,+DAAM/E,WAAW,iBAAI,yIAAiB,6DAAIA,WAAJ,OAAjB,OAArB,CAF0B;AAGhC,SAAK,EAAElB,QAAQ,iBAAI,kDAAC,6CAAD;AAAQ,aAAO,EAAEuF;AAAjB;AAHa,IADxC,CApBJ,EA4BKvF,QAAQ,iBAAI,mHAAE,kDAAC,4DAAD,qBAGX,kDAAC,4DAAD;AAAU,UAAM,EAAC,UAAjB;AAA4B,SAAK,EAAE;AAAE2H,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B;AAAnC,kBACI,kDAAC,4DAAD;AAAU,SAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAjB;AAAsC,SAAK,EAAE;AAAEH,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAR;AAAgBI,MAAAA,UAAU,EAAE,IAA5B;AAAkCzB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAAzC;AAA7C,kBACI,kDAAC,yDAAD,kBADJ,eAEI,kDAAC,yDAAD,uBAFJ,CADJ,eAOI,kDAAC,kDAAD;AAAW,QAAI,EAAC;AAAhB,KAEK,UAACyB,MAAD,UAAmC;AAAA,QAAxBC,GAAwB,UAAxBA,GAAwB;AAAA,QAAnBC,MAAmB,UAAnBA,MAAmB;AAAA,QAAXC,IAAW,UAAXA,IAAW;AAChC,wBACI,sGACKH,MAAM,CAACtF,GAAP,CAAW,UAAC0F,KAAD,EAAQC,KAAR;AAAA,0BACR,kDAAC,4DAAD;AAAU,WAAG,EAAED,KAAK,CAACzF,GAArB;AAA0B,aAAK,EAAE;AAAEgF,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAR;AAAjC,sBACI,kDAAC,yDAAD;AAAO,gBAAQ,EAAE,KAAjB;AAAwB,YAAI,EAAE,CAACS,KAAK,CAACE,IAAP,aAA9B;AAAwD,aAAK,EAAE;AAAE/B,UAAAA,OAAO,EAAE;AAAX;AAA/D,sBAAmF,kDAAC,6CAAD;AAAO,gBAAQ,EAAE,IAAjB;AAAuB,YAAI,EAAC;AAA5B,QAAnF,CADJ,eAEI,kDAAC,yDAAD;AAAO,gBAAQ,EAAE,CAACpC,eAAe,EAAjC;AAAqC,YAAI,EAAE,CAACiE,KAAK,CAACE,IAAP,iBAA3C;AAAyE,aAAK,EAAE;AAAE/B,UAAAA,OAAO,EAAE;AAAX;AAAhF,sBAAoG,kDAAC,6CAAD;AAAa,YAAI,EAAC,OAAlB;AAA0B,WAAG,EAAE,CAA/B;AAAkC,WAAG,EAAE;AAAvC,QAApG,CAFJ,CADQ;AAAA,KAAX,CADL,CADJ;AAWH,GAdL,CAPJ,eAwBI,kDAAC,iEAAD;AAAe,UAAM,EAAC;AAAtB,IAxBJ,eAyBI,kDAAC,4DAAD,qBAAU,kDAAC,6CAAD;AAAQ,YAAQ,EAAEpC,eAAe,EAAjC;AAAqC,QAAI,EAAC,QAA1C;AAAmD,WAAO,EAAEkB,QAA5D;AAAsE,SAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT;AAA7E,eAAV,CAzBJ,CAHW,CAAF,eAgCT,kDAAC,iEAAD;AAAe,UAAM,EAAC;AAAtB,IAhCS,eAiCT,kDAAC,4DAAD,QACK/F,IAAI,CAAC2B,aAAL,CAAmB,WAAnB,kBAAmC,kDAAC,2DAAD;AAChC,SAAK,EAAE;AAAEoE,MAAAA,KAAK,EAAE;AAAT,KADyB;AAEhC,QAAI,eACA,kDAAC,4DAAD,qBACI,kDAAC,yDAAD;AAAO,UAAI,EAAC,gBAAZ;AAA6B,YAAM,EAAE;AAAEkB,QAAAA,MAAM,EAAE,oBAAV;AAAgCD,QAAAA,KAAK,EAAE;AAAvC,OAArC;AAAoG,WAAK,EAAE;AAAEZ,QAAAA,OAAO,EAAE,KAAX;AAAkBgC,QAAAA,IAAI,EAAE,gBAAxB;AAA0C/B,QAAAA,GAAG,EAAE;AAA/C,OAA3G;AAAoK,YAAM,oBAClKrG,IAAI,CAAC2B,aAAL,CAAmB,gBAAnB,KAAwC;AAAEqF,QAAAA,KAAK,eAAE,kDAAC,6CAAD;AAAQ,iBAAO,EAAE;AAAA,mBAAM1B,UAAU,EAAhB;AAAA,WAAjB;AAAqC,eAAK,EAAE;AAAE+C,YAAAA,UAAU,EAAE;AAAd,WAA5C;AAAmE,cAAI,EAAC;AAAxE,wBAAgF,kDAAC,0DAAD;AAAc,eAAK,EAAE;AAAEvC,YAAAA,QAAQ,EAAE;AAAZ;AAArB,UAAhF;AAAT,OAD0H;AAA1K,oBAGI,kDAAC,+DAAD;AAAa,UAAI,EAAC,OAAlB;AAA0B,UAAI,EAAEhF,iBAAhC;AAAmD,cAAQ,EAAC,IAA5D;AAAiE,eAAS,EAAC,YAA3E;AACI,mBAAa,EAAE,uBAACwH,CAAD,EAAIC,QAAJ,EAAcC,SAAd;AAAA,eAA6B;AAAErC,UAAAA,KAAK,eAAE,4EAAK;AAAK,iBAAK,EAAE;AAAEsC,cAAAA,OAAO,EAAE;AAAX;AAAZ,0BAAiC;AAAK,iBAAK,EAAE;AAAEhB,cAAAA,QAAQ,EAAE;AAAZ;AAAZ,0BAAmC,6DAAIa,CAAC,CAACE,SAAD,CAAL,CAAnC,CAAjC,eAA+F,qEAAQF,CAAC,CAAC,QAAD,CAAT,CAA/F,CAAL,eAAoI;AAAK,iBAAK,EAAE;AAAE5I,cAAAA,KAAK,EAAE;AAAT;AAAZ,aAAmC4I,CAAC,CAAC,eAAD,CAAD,CAAmBI,UAAnB,CAA8B,GAA9B,EAAmC,GAAnC,CAAnC,CAApI,CAAT;AAAsOC,UAAAA,KAAK,EAAEL,CAAC,CAACC,QAAD;AAA9O,SAA7B;AAAA;AADnB,MAHJ,CADJ,CAH4B;AAahC,SAAK,eAAE,kDAAC,6CAAD;AAAQ,aAAO,EAAE;AAAA,eAAMjD,UAAU,CAAC,IAAD,CAAhB;AAAA;AAAjB;AAbyB,IADxC,CAjCS,CA5BjB,eAiFI,kDAAC,4DAAD;AAAU,SAAK,EAAE;AAAEkC,MAAAA,IAAI,EAAE,CAAC,EAAD;AAAR;AAAjB,kBACI,kDAAC,6DAAD;AAAW,SAAK,EAAE;AAAEpB,MAAAA,OAAO,EAAE;AAAX;AAAlB,KACM,UAACnG,OAAD,EAAU8D,WAAV,EAA0B;AACxB,QAAI,CAAC9D,OAAD,IAAY8D,WAAhB,EAA6B;AACzB,0BAAQ,kDAAC,0DAAD;AAAkB,cAAM,kCAAO/D,IAAI,CAAC8E,cAAL,CAAoB,CAAC,QAAD,EAAW,WAAX,CAApB,CAAP;AAAqDf,UAAAA,WAAW,EAAXA;AAArD,UAAxB;AAA4F,gBAAQ,EAAE,KAAtG;AAA6G,gBAAQ,EAAE,KAAvH;AAA8H,oBAAY,EAAEN;AAA5I,QAAR;AACH;AACJ,GAJA,CAIExD,OAJF,EAIW8D,WAAW,EAJtB,CADL,CADJ,CAjFJ,CADJ,CAFJ,EA+FKpE,SAAS,iBAAI,kDAAC,0DAAD;AAAQ,QAAI,EAAEA,SAAS,CAACwE;AAAxB,kBACV,kDAAC,6CAAD,QACK/C,SAAS,iBAAI,kDAAC,6CAAD;AAAQ,QAAI,EAAC,SAAb;AAAuB,WAAO,EAAE;AAAA,aAAMsD,QAAQ,CAAC1E,IAAI,CAAC8E,cAAL,CAAoB,IAApB,CAAD,CAAd;AAAA;AAAhC,eADlB,eAEI,kDAAC,6CAAD;AAAQ,WAAO,EAAEU;AAAjB,cAFJ,CADU,CA/FlB,CAPJ,CADJ,CADJ;AAmHH,CAvRD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAM9H,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAOC,WAAP,EAAuB;AAClC,SAAOC,iEAAS,CAAC,EAAD,EAAKF,IAAL,EAAWC,WAAX,CAAT,CAAiCE,OAAjC,CAAyC,IAAzC,CAAP;AACH,CAFD;;AAIA,IAAMwL,SAAS,GAAGnO,2DAAe,CAAC;AAC9BoO,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,MAAM,EAAE,mBAFJ;AAGJ7K,IAAAA,MAAM,EAAE,OAHJ;AAIJ8K,IAAAA,SAAS,EAAE,qBAJP;AAKJzD,IAAAA,MAAM,EAAE,KALJ;AAMJ0D,IAAAA,YAAY,EAAE,KANV;AAOJ5D,IAAAA,KAAK,EAAE,eAAC6D,KAAD;AAAA,uBAAcA,KAAK,CAAC7D,KAApB;AAAA,KAPH;AAQJ,eAAW;AACP8D,MAAAA,eAAe,EAAE;AADV;AARP;AADsB,CAAD,CAAjC;;AAeA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAsF;AAAA,MAAnF/H,EAAmF,QAAnFA,EAAmF;AAAA,MAA/E4G,KAA+E,QAA/EA,KAA+E;AAAA,MAAxET,KAAwE,QAAxEA,KAAwE;AAAA,MAAjE6B,UAAiE,QAAjEA,UAAiE;AAAA,wBAArDhE,KAAqD;AAAA,MAArDA,KAAqD,2BAA7C,CAA6C;AAAA,2BAA1CjG,QAA0C;AAAA,MAA1CA,QAA0C,8BAA/B,KAA+B;AAAA,MAAxB8B,MAAwB,QAAxBA,MAAwB;AAAA,MAAhBoI,SAAgB,QAAhBA,SAAgB;AACjG,MAAMC,OAAO,GAAGX,SAAS,CAAC;AAAEvD,IAAAA,KAAK,EAALA;AAAF,GAAD,CAAzB;AACA,MAAMmE,GAAG,GAAGjP,8CAAM,CAAC,IAAD,CAAlB;AACA,MAAMyE,KAAK,GAAGkC,MAAM,CAACuI,IAAP,CAAY,UAAAtH,CAAC;AAAA,WAAIA,CAAC,CAACH,QAAF,IAAciG,KAAlB;AAAA,GAAb,CAAd;AACA,MAAMrB,KAAK,GAAG;AACV5H,IAAAA,KAAK,EAAEA,KAAK,CAACA,KADH;AAEV0K,IAAAA,SAAS,EAAE,QAFD;AAGVxL,IAAAA,MAAM,EAAE,KAHE;AAIV6J,IAAAA,OAAO,EAAE,MAJC;AAKV4B,IAAAA,cAAc,EAAE,QALN;AAMVC,IAAAA,UAAU,EAAE;AANF,GAAd;;AASA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACxH,IAAD,EAAS;AACrB6B,IAAAA,OAAO,CAACC,GAAR,CAAYqD,KAAZ,EAAkBnF,IAAlB;AACAiH,IAAAA,SAAS,CAAC9B,KAAD,EAAOnF,IAAP,CAAT;AACH,GAHD;;AAKA,MAAMyH,IAAI,gBACN,kDAAC,6CAAD;AAAM,WAAO,EAAED;AAAf,KACK7K,KAAK,CAACkD,OAAN,CAAcL,GAAd,CAAkB,UAAAM,CAAC,EAAI;AACpB,wBACI,kDAAC,kDAAD;AAAW,SAAG,EAAEA,CAAC,CAACQ;AAAlB,oBACI,4EAAK,6DAAIR,CAAC,CAACS,MAAN,CAAL,OAAwBT,CAAC,CAACI,UAA1B,CADJ,eAEI,+DAAMJ,CAAC,CAACK,UAAR,CAFJ,eAGI;AAAK,WAAK,EAAE;AAAExD,QAAAA,KAAK,EAAE;AAAT;AAAZ,OAAmCmD,CAAC,CAACO,YAArC,CAHJ,CADJ;AAOH,GARA,CADL,CADJ;;AAcA,iBAA8B+F,mDAAO,CAAC;AAClCsB,IAAAA,MAAM,EAAE,QAD0B;AAElCC,IAAAA,OAFkC,mBAE1BC,OAF0B,EAEjB;AACb,aAAO;AACHC,QAAAA,SAAS,EAAED,OAAO,CAACE,YAAR;AADR,OAAP;AAGH,KANiC;AAOlCC,IAAAA,IAPkC,gBAO7B/H,IAP6B,EAOvB4H,OAPuB,EAOd;AAAA;;AAChB,UAAI,CAACT,GAAG,CAAC/F,OAAT,EAAkB;AACd;AACH;;AACD,UAAM4G,SAAS,GAAGhI,IAAI,CAACmF,KAAvB;AACA,UAAM8C,UAAU,GAAG9C,KAAnB;;AACA,UAAI6C,SAAS,KAAKC,UAAlB,EAA8B;AAC1B;AACH;;AACD,UAAMC,iBAAiB,mBAAGf,GAAG,CAAC/F,OAAP,iDAAG,aAAa+G,qBAAb,EAA1B;AACA,UAAMC,YAAY,GAAG,CAACF,iBAAiB,CAAC/D,MAAlB,GAA2B+D,iBAAiB,CAAClE,GAA9C,IAAqD,CAA1E;AACA,UAAMqE,YAAY,GAAGT,OAAO,CAACU,eAAR,EAArB;AACA,UAAMC,YAAY,GAAGF,YAAY,CAACG,CAAb,GAAiBN,iBAAiB,CAAClE,GAAxD;AACAgD,MAAAA,UAAU,CAACgB,SAAD,EAAYC,UAAZ,CAAV;AACAjI,MAAAA,IAAI,CAACmF,KAAL,GAAa8C,UAAb;AACH;AAtBiC,GAAD,CAArC;AAAA;AAAA,MAASJ,SAAT,gBAASA,SAAT;AAAA,MAAsBE,IAAtB;;AAyBA,iBAA+B5B,mDAAO,CAAC;AACnCvF,IAAAA,IAAI,EAAE,QAD6B;AAGnCZ,IAAAA,IAAI,EAAE,gBAAM;AACR,aAAO;AAAEhB,QAAAA,EAAE,EAAFA,EAAF;AAAMmG,QAAAA,KAAK,EAALA;AAAN,OAAP;AACH,KALkC;AAMnCsD,IAAAA,OANmC,mBAM3Bb,OAN2B,EAMlB;AACb,aAAO7K,QAAP;AACH,KARkC;AASnC4K,IAAAA,OAAO,EAAE,iBAACC,OAAD;AAAA,aAAc;AACnBc,QAAAA,UAAU,EAAEd,OAAO,CAACc,UAAR;AADO,OAAd;AAAA;AAT0B,GAAD,CAAtC;AAAA;AAAA,MAASA,UAAT,gBAASA,UAAT;AAAA,MAAuBC,IAAvB;;AAaA,MAAMC,OAAO,GAAGF,UAAU,GAAG,CAAH,GAAO,CAAjC;AACAC,EAAAA,IAAI,CAACxB,GAAD,CAAJ;AACAY,EAAAA,IAAI,CAACZ,GAAD,CAAJ;AACA,sBACI;AAAK,OAAG,EAAEA,GAAV;AAAe,aAAS,EAAED,OAAO,CAACV,MAAlC;AAA0C,SAAK,EAAE;AAAEoC,MAAAA,OAAO,EAAPA,OAAF;AAAWC,MAAAA,UAAU,EAAElM,KAAK,CAACD,MAA7B;AAAqCC,MAAAA,KAAK,EAAEA,KAAK,CAACA;AAAlD,KAAjD;AAA4G,uBAAiBkL;AAA7H,kBACI;AAAK,SAAK,EAAE;AAAE9E,MAAAA,QAAQ,EAAE,MAAZ;AAAoBjH,MAAAA,SAAS,EAAE,QAA/B;AAAyCD,MAAAA,MAAM,EAAE;AAAjD;AAAZ,KAAuEsJ,KAAK,GAAG,CAA/E,CADJ,eAEI;AAAK,SAAK,EAAEZ;AAAZ,KAAoBqB,KAApB,CAFJ,CADJ;AAMH,CA/ED;;AAiFA,iEAAe,iBAAwG;AAAA,MAArGrK,MAAqG,SAArGA,MAAqG;AAAA,MAA7FF,YAA6F,SAA7FA,YAA6F;AAAA,MAA/EuB,SAA+E,SAA/EA,SAA+E;AAAA,MAApEC,WAAoE,SAApEA,WAAoE;AAAA,MAAvD1B,YAAuD,SAAvDA,YAAuD;AAAA,6BAAzC2B,QAAyC;AAAA,MAAzCA,QAAyC,+BAA9B,MAA8B;AAAA,6BAAtBC,QAAsB;AAAA,MAAtBA,QAAsB,+BAAX,IAAW;;AACnH,sBAAe/C,qDAAA,EAAf;AAAA;AAAA,MAAOiD,IAAP;;AACA,kBAA8BjF,gDAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOkF,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAoCnF,gDAAQ,CAAC;AAAEyF,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE,EAAtB;AAA0BC,IAAAA,IAAI,EAAE,EAAhC;AAAoCC,IAAAA,OAAO,EAAE;AAA7C,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA4B9F,gDAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAO8Q,MAAP;AAAA,MAAeC,SAAf;;AACA,kBAA8BrO,oDAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOsO,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwCjR,gDAAQ,CAAC,CAAD,CAAhD;AAAA;AAAA,MAAOkR,YAAP;AAAA,MAAqBC,eAArB;;AAGA,MAAM3K,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,QAAQK,MAAR,GAAgCtD,MAAhC,CAAQsD,MAAR;AAAA,QAAgBmC,WAAhB,GAAgCzF,MAAhC,CAAgByF,WAAhB;AACC3F,IAAAA,YAAD,IAAkBA,YAAY,CAAC;AAAEM,MAAAA,KAAK;AAAP,KAAD,CAA9B;AACA,QAAMyN,QAAQ,GAAG,EAAjB;AACA,QAAIC,aAAa,GAAG,CAApB;;AACA,QAAI,CAACrI,WAAL,EAAkB;AAAA,iDACEnC,MADF;AAAA;;AAAA;AACd,4DAAwB;AAAA,cAAbiB,CAAa;;AACpBsJ,UAAAA,QAAQ,CAAChH,IAAT,OAAAgH,QAAQ,qBAAU,IAAI7H,KAAJ,CAAUzB,CAAC,CAACF,YAAZ,CAAD,CAA4B0J,IAA5B,CAAiCxJ,CAAC,CAACH,QAAnC,CAAT,EAAR;;AACA0J,UAAAA,aAAa,GAAGA,aAAa,GAAG3H,QAAQ,CAAC5B,CAAC,CAACF,YAAH,CAAR,GAA2B8B,QAAQ,CAAC5B,CAAC,CAACH,QAAH,CAAnE;AACH;AAJa;AAAA;AAAA;AAAA;AAAA;AAKjB,KALD,MAKO;AACH,UAAM4J,YAAY,GAAGpK,IAAI,CAACC,KAAL,CAAW4B,WAAW,CAACwI,aAAvB,CAArB;;AACAJ,MAAAA,QAAQ,CAAChH,IAAT,OAAAgH,QAAQ,qBAASG,YAAT,EAAR;;AACAtM,MAAAA,IAAI,CAACuD,cAAL,CAAoB;AAAEiJ,QAAAA,UAAU,EAAEzI,WAAW,CAACyI;AAA1B,OAApB;AACAJ,MAAAA,aAAa,GAAGE,YAAY,CAACrI,MAAb,CAAoB,UAACwI,GAAD,EAAM5J,CAAN;AAAA,eAAY6J,MAAM,CAACD,GAAD,CAAN,GAAcC,MAAM,CAAC7J,CAAD,CAAhC;AAAA,OAApB,CAAhB;AACH;;AAEDmJ,IAAAA,UAAU,CAACG,QAAD,CAAV;AACAD,IAAAA,eAAe,CAACE,aAAD,CAAf;AACH,GAnBD;;AAqBAtR,EAAAA,iDAAS,CAAC,YAAM;AACZyG,IAAAA,IAAI;AACP,GAFQ,EAEN,CAACjD,MAAD,CAFM,CAAT;;AAIA,MAAMoG,QAAQ;AAAA,wEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPxE,cAAAA,MADO,GACE;AAAEK,gBAAAA,KAAK,EAAE,EAAT;AAAaC,gBAAAA,OAAO,EAAE,EAAtB;AAA0BC,gBAAAA,IAAI,EAAE,EAAhC;AAAoCC,gBAAAA,OAAO,EAAE;AAA7C,eADF;AAELiB,cAAAA,MAFK,GAEwBtD,MAFxB,CAELsD,MAFK,EAEG+K,KAFH,GAEwBrO,MAFxB,CAEGqO,KAFH,EAEU5N,SAFV,GAEwBT,MAFxB,CAEUS,SAFV;AAGT6N,cAAAA,OAHS,GAGC,KAHD;;AAIb,kBAAI,CAACD,KAAL,EAAY;AACRC,gBAAAA,OAAO,GAAG,IAAV;AACH,eAFD,MAEO;AACH,oBAAI,CAAC1K,IAAI,CAACC,KAAL,CAAWwK,KAAK,CAACJ,aAAjB,EAAgCM,KAAhC,CAAsC,UAAChK,CAAD,EAAIJ,CAAJ;AAAA,yBAAUI,CAAC,KAAKkJ,OAAO,CAACtJ,CAAD,CAAvB;AAAA,iBAAtC,CAAL,EAAwE;AACpEmK,kBAAAA,OAAO,GAAG,IAAV;AACH;AACJ;;AAVY,mBAWTA,OAXS;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAYcpR,uDAAS,CAAC;AAAEyD,gBAAAA,GAAG,YAAKvD,4CAAL,wBAAL;AAAwCsJ,gBAAAA,UAAU,kCAAOL,MAAP;AAAe4H,kBAAAA,aAAa,EAAErK,IAAI,CAAC4K,SAAL,CAAef,OAAf,CAA9B;AAAuDhN,kBAAAA,SAAS,EAATA;AAAvD;AAAlD,eAAD,CAZvB;;AAAA;AAYHkG,cAAAA,QAZG;;AAaT,kBAAIA,QAAQ,CAAC1F,IAAT,CAAcY,MAAd,KAAyB,OAA7B,EAAsC;AAClCA,gBAAAA,MAAM,CAACQ,OAAP,CAAewE,IAAf,CAAoB;AAAEC,kBAAAA,OAAO,EAAEH,QAAQ,CAAC1F,IAAT,CAAcb;AAAzB,iBAApB;AACAR,gBAAAA,YAAY,CAAC,EAAD,EAAK,QAAL,CAAZ;AACA0B,gBAAAA,WAAW;AACd,eAJD,MAIO;AACHO,gBAAAA,MAAM,CAACK,KAAP,CAAa2E,IAAb,CAAkB;AAAEC,kBAAAA,OAAO,EAAEH,QAAQ,CAAC1F,IAAT,CAAcb;AAAzB,iBAAlB;AACH;;AACDmC,cAAAA,aAAa,CAACV,MAAD,CAAb;;AApBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARuE,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAwBA,MAAMqF,UAAU,GAAG/O,mDAAW,CAAC,UAAC+P,SAAD,EAAYC,UAAZ,EAA2B;AACtDgB,IAAAA,UAAU,CAAC,UAAAe,KAAK,EAAI;AAChB,UAAMC,GAAG,GAAGD,KAAK,CAAC/B,UAAD,CAAjB;AACA+B,MAAAA,KAAK,CAAC/B,UAAD,CAAL,GAAoB+B,KAAK,CAAChC,SAAD,CAAzB;AACAgC,MAAAA,KAAK,CAAChC,SAAD,CAAL,GAAmBiC,GAAnB;AACH,KAJS,CAAV;AAKH,GAN6B,EAM3B,CAACjB,OAAD,CAN2B,CAA9B;AAQA,sBACI,mHACI,kDAAC,iEAAD;AAAe,cAAU,EAAEnL;AAA3B,IADJ,eAEI,kDAAC,6CAAD;AAAM,QAAI,EAAEZ,IAAZ;AAAkB,QAAI,OAAtB;AAA+B,YAAQ,EAAE0E,QAAzC;AAAmD,aAAS,EAAE7E;AAA9D,kBACI,kDAAC,8DAAD;AACI,MAAE,EAAC,wBADP;AAEI,UAAM,EAAEgM,MAFZ;AAGI,UAAM,EAAC,UAHX;AAII,SAAK,EAAE;AAAE9F,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAAK;;AAA/B,KAJX;AAKI,UAAM,EAAEtI,MALZ;AAMI,SAAK,EAAE;AACHoC,MAAAA,QAAQ,EAARA,QADG;AAEH0H,MAAAA,IAAI,EAAE,CAAC,EAAD,CAFH;AAGHvB,MAAAA,MAAM,EAAE,KAHL;AAGYC,MAAAA,QAAQ,EAAE,KAHtB;AAG6B2F,MAAAA,MAAM,EAAEA,MAHrC;AAIH1F,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,GAAG,EAAE,KAAtB;AAA6BC,QAAAA,KAAK,EAAE,OAApC;AAA6CC,QAAAA,MAAM,EAAE,QAArD;;AAA+D;AAAqBC,QAAAA,IAAI,EAAE,KAA1F;AAAiGN,QAAAA,QAAQ,EAAE,KAA3G;AAAkHO,QAAAA,KAAK,EAAE,IAAzH;AAA+HC,QAAAA,QAAQ,EAAE;AAAzI,OAJJ;AAKHC,MAAAA,KAAK,EAAE;AAAEN,QAAAA,GAAG,EAAE,OAAP;AAAgBO,QAAAA,OAAO,EAAE,IAAzB;AAA+BC,QAAAA,SAAS,EAAE;AAAM;;AAAhD,OALJ;AAMHC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,MAAM,EAAE,EAA9B;AAAkCC,QAAAA,MAAM,EAAE,EAA1C;AAA8CC,QAAAA,IAAI,EAAE;AAApD,OANL;AAOHE,MAAAA,QAAQ,EAAE,IAPP;AAQHC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AARJ,KANX;AAgBI,YAAQ,EAAE;AACNsE,MAAAA,MAAM,EAAEA,MADF;AAENrE,MAAAA,IAAI,EAAE,EAFA;AAEIvB,MAAAA,MAAM,EAAE,KAFZ;AAEmBa,MAAAA,MAAM,EAAE,YAF3B;AAEyCZ,MAAAA,QAAQ,EAAE;AAFnD;AAhBd,KAqBKpG,QAAQ,iBAAI,mHACT,kDAAC,4DAAD;AAAU,UAAM,EAAE,KAAlB;AAAyB,SAAK,EAAE;AAAE0H,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAR;AAAhC,kBACI,kDAAC,yDAAD;AAAO,QAAI,EAAC,YAAZ;AAAyB,SAAK,EAAE;AAAEpB,MAAAA,OAAO,EAAE;AAAX;AAAhC,kBAAoD,kDAAC,6CAAD;AAAO,eAAW,EAAC,kBAAnB;AAAgC,QAAI,EAAC;AAArC,IAApD,CADJ,CADS,eAIT,kDAAC,iEAAD;AAAe,UAAM,EAAC;AAAtB,IAJS,CArBjB,CADJ,CAFJ,eAkCI,kDAAC,mDAAD;AAAa,WAAO,EAAEiD,kEAAYA;AAAlC,kBACI;AAAK,SAAK,EAAE;AAAEZ,MAAAA,OAAO,EAAE,MAAX;AAAmBwE,MAAAA,aAAa,EAAE,KAAlC;AAAwC5C,MAAAA,cAAc,EAAC;AAAvD;AAAZ,KACK0B,OAAO,CAACxJ,GAAR,CAAY,UAACM,CAAD,EAAIJ,CAAJ,EAAU;AACnB,wBAAQ,kDAAC,MAAD;AAAQ,SAAG,cAAOI,CAAP,cAAYJ,CAAZ,CAAX;AAA4B,QAAE,cAAOI,CAAP,cAAYJ,CAAZ,CAA9B;AAA+C,WAAK,EAAEI,CAAtD;AAAyD,WAAK,EAAEJ,CAAhE;AAAmE,gBAAU,EAAEsH,UAA/E;AAA2F,WAAK,EAAGlH,CAAC,GAAG,GAAL,GAAYoJ,YAA9G;AAA4H,YAAM,EAAE3N,MAAM,CAACsD,MAA3I;AAAmJ,cAAQ,EAAE9B;AAA7J,MAAR;AACH,GAFA,CADL,CADJ,CAlCJ,EAyCKH,SAAS,iBAAI,kDAAC,0DAAD;AAAQ,QAAI,EAAEA,SAAS,CAACwE;AAAxB,kBACV,kDAAC,6CAAD,qBACI,kDAAC,6CAAD;AAAQ,QAAI,EAAC,SAAb;AAAuB,WAAO,EAAE;AAAA,aAAMnE,IAAI,CAACkN,MAAL,EAAN;AAAA;AAAhC,eADJ,eAEI,kDAAC,6CAAD;AAAQ,WAAO,EAAE;AAAA,aAAMpB,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA;AAAjB,KAA4CA,MAAM,GAAG,WAAH,GAAiB,QAAnE,CAFJ,CADU,CAzClB,CADJ;AAmDH,CArHD","sources":["webpack://sgp/./src/pages/currentline/FormCortes.jsx","webpack://sgp/./src/pages/currentline/FormCortesUpsert.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon, VerticalSpace } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport Portal from \"components/portal\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport { Button, Spin, Input, Form, InputNumber, Skeleton, Space } from \"antd\";\r\nimport { LoadingOutlined, EditOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport FormCortesUpsert from './FormCortesUpsert';\r\nimport { useImmer } from \"use-immer\";\r\n/* import { OFabricoContext } from './FormOFabricoValidar'; */\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst Drawer = ({ showWrapper, setShowWrapper, parentReload }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n    const { record = {} } = showWrapper;\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type=\"modal\"\r\n            mode=\"maximized\"\r\n            destroyOnClose={true}\r\n            mask={true}\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            width={800}\r\n            bodyStyle={{ height: \"450px\" }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n        >\r\n            <FormCortesUpsert setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} />\r\n        </WrapperForm>\r\n    );\r\n}\r\n\r\n\r\n/* const loadArtigosAggLookup = async ({ agg_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/artigostempagglookup/`, filter: { agg_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n} */\r\n\r\nconst loadCortesOrdemLookup = async ({ cortes_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/cortesordemlookup/`, filter: { cortes_id }, sort: [{ column: 'versao', direction: 'DESC' }], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nconst colors = [\r\n    { bcolor: '#002766', color: '#ffffff' },\r\n    { bcolor: '#0050b3', color: '#ffffff' }, { bcolor: '#1890ff', color: '#000000' },\r\n    { bcolor: '#69c0ff', color: '#000000' }, { bcolor: '#bae7ff', color: '#000000' },\r\n    { bcolor: '#ffffff', color: '#000000' }\r\n];\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n    const [showForm, setShowForm] = useState({ show: false });\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [cortesOrdemLookup, setCortesOrdemLookup] = useState([]);\r\n    const [larguraUtil, setLarguraUtil] = useState();\r\n    const [changedValues, setChangedValues] = useState();\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        // loadData({ /* agg_id: ctx.agg_id, */ token: cancelFetch });\r\n        init({ /* agg_id: ctx.agg_id, */ token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Cortes Cancelled\"));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (changedValues) {\r\n            if (\"cortes\" in changedValues) {\r\n                setLarguraUtil(calculateLarguraUtil({ larguras: form.getFieldValue(\"cortes\") }));\r\n            }\r\n            if (\"cortesordem_id\" in changedValues) {\r\n            }\r\n        }\r\n    }, [changedValues]);\r\n\r\n    const init = ({ token }) => {\r\n        if (!loading) {\r\n            setLoading(true);\r\n        }\r\n        (async () => {\r\n            const { cortes, cortesordem,ofs } = record;\r\n            const _cortesOrdemLookup = (forInput) ? await loadCortesOrdemLookup({ cortes_id: cortes.id, token }) : [{ ...cortesordem }];\r\n            const _larguras = JSON.parse(cortes.largura_json);\r\n            let _cortes = Object.keys(_larguras).map((key, i) => ({ item_lar: key, item_ncortes: _larguras[key], bcolor: colors[i].bcolor, color: colors[i].color,artigos:ofs.filter(v=>v.artigo_lar==key).map((item) =>({color:item.color,artigo_id:item.artigo_id,artigo_cod:item.artigo_cod,artigo_des:item.artigo_des,cliente_cod:item.cliente_cod,cliente_nome:item.cliente_nome,of_id:item.of_id,of_cod:item.of_cod}))}));\r\n            //Object.keys(_larguras).map((key, i) => ({ item_lar: key, item_ncortes: _larguras[key], bcolor: colors[i].bcolor, color: colors[i].color, artigos:[...new Map(ofs.filter(v=>v.artigo_lar==key).map((item) => [item[\"artigo_id\"], {artigo_id:item.artigo_id,artigo_cod:item.artigo_cod,artigo_des:item.artigo_des,cliente_cod:item.cliente_cod,cliente_nome:item.cliente_nome,of_id:item.of_id,of_cod:item.of_cod}])).values()] }));\r\n            form.setFieldsValue({ cortes: _cortes, cortes_id: cortes.id, cortesordem_id: cortesordem.id });\r\n            setLarguraUtil(calculateLarguraUtil({ larguras: JSON.parse(cortes.largura_json) }));\r\n            setCortesOrdemLookup(_cortesOrdemLookup);\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    const loadData = ({ agg_id, cortes_id, token }, type = \"init\") => {\r\n        switch (type) {\r\n            case \"lookup\":\r\n                (async () => {\r\n                    const _cortes_id = (!cortes_id) ? form.getFieldValue(\"cortes_id\") : cortes_id;\r\n                    const _cortesOrdemLookup = await loadCortesOrdemLookup({ cortes_id: _cortes_id, token });\r\n                    setCortesOrdemLookup(_cortesOrdemLookup);\r\n                })();\r\n                break;\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    // const _cortes = await loadArtigosAggLookup({ agg_id, token });\r\n                    // const cortes_id = (_cortes.length > 0) ? _cortes[0][\"cortes_id\"] : null;\r\n                    // const cortesordem_id = (_cortes.length > 0) ? _cortes[0][\"cortesordem_id\"] : null;\r\n                    // const _cortesOrdemLookup = await loadCortesOrdemLookup({ cortes_id, token });\r\n                    // form.setFieldsValue({ cortes: _cortes, ...(cortes_id ? { cortes_id } : { cortes_id: null }), ...(cortesordem_id ? { cortesordem_id } : { cortesordem_id: null }) });\r\n                    // setLarguraUtil(calculateLarguraUtil(_cortes));\r\n                    // setCortesOrdemLookup(_cortesOrdemLookup);\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n\r\n    const onValuesChange = (changedValues, allValues) => {\r\n        setIsTouched(true);\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const cortesOrdem = () => {\r\n        const id = form.getFieldValue(\"cortesordem_id\");\r\n        return ((id) ? cortesOrdemLookup.filter(v => v.id === id) : [])[0];\r\n    };\r\n\r\n    const isCortesTouched = () => {\r\n        return !(!form.getFieldValue(\"cortes_id\") /* || (changedValues && \"cortes\" in changedValues) */);\r\n    }\r\n\r\n    const calculateLarguraUtil = useCallback(({ cortes, larguras }) => {\r\n        if (cortes) {\r\n            return cortes.reduce((accumulator, current) => accumulator + (current.cortes_artigo_ncortes * current.cortes_artigo_lar), 0);\r\n        } else {\r\n            if (Array.isArray(larguras)) {\r\n                return larguras.reduce((accumulator, current) => accumulator + (current.item_ncortes * current.item_lar), 0);\r\n            } else {\r\n                let v = 0;\r\n                for (let el in larguras) {\r\n                    v += (parseInt(larguras[el]) * parseInt(el));\r\n                }\r\n                return v;\r\n            }\r\n        }\r\n    });\r\n\r\n    const onFinish = async (values) => {\r\n        console.log(record);\r\n        const { cortes_id, cortesordem_id } = form.getFieldsValue(true);\r\n        const response = await fetchPost({ url: `${API_URL}/updatecurrentsettings/`, filter: { csid: record.id }, parameters: { type: 'cortes', cortes: { cortes_id, cortesordem_id } } });\r\n        setResultMessage(response.data);\r\n        if (response.data.status !== \"error\") {\r\n            throw 'TODO RELOAD PARENT'\r\n            //parentReload({ formulacao_id: record.formulacao.id }, \"init\");\r\n        }\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const response = await fetchPost({ url: `${API_URL}/newcortes/`, parameters: { ...form.getFieldsValue([\"cortes\"]) } });\r\n        if (response.data.status == \"error\") {\r\n            status.error.push({ message: response.data.title });\r\n        } else {\r\n            status.success.push({ message: response.data.title });\r\n            form.setFieldsValue({ cortes_id: response.data.id })\r\n            loadData({ cortes_id: response.data.id }, 'lookup');\r\n        }\r\n        setFormStatus(status);\r\n    }\r\n\r\n    const clearCortes = async () => {\r\n        setCortesOrdemLookup([]);\r\n        form.setFieldsValue({ cortes_id: null, cortesordem_id: null });\r\n        /*  const status = { error: [], warning: [], info: [], success: [] };\r\n         const response = await fetchPost({ url: `${API_URL}/clearcortes/`, parameters: { agg_id: ctx.agg_id } });\r\n         if (response.data.status == \"error\") {\r\n             status.error.push({ message: response.data.title });\r\n         } else {\r\n             status.success.push({ message: response.data.title });\r\n             loadData({ agg_id: ctx.agg_id });\r\n         }\r\n         setFormStatus(status); */\r\n    }\r\n\r\n    const onShowForm = (newForm = false) => {\r\n        if (newForm) {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue([\"cortes\", \"cortes_id\"]) } }));\r\n        } else {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue([\"cortes\", \"cortes_id\"]), cortesOrdem: cortesOrdem() } }));\r\n        }\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                    <Drawer showWrapper={showForm} setShowWrapper={setShowForm} parentReload={loadData} />\r\n                    <Form form={form} name={`fps-c`} onFinish={onFinish} onValuesChange={onValuesChange}>\r\n                        <FormLayout\r\n                            id=\"LAY-CORTES\"\r\n                            layout=\"vertical\"\r\n                            style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                            schema={schema}\r\n                            field={{\r\n                                //wide: [3, 2, 1, '*'],\r\n                                margin: \"2px\", overflow: false,\r\n                                label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                                alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                                layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                                addons: {}, //top|right|center|bottom|left\r\n                                required: true,\r\n                                style: { alignSelf: \"center\" }\r\n                            }}\r\n                            fieldSet={{\r\n                                wide: 16, margin: false, layout: \"horizontal\", overflow: false\r\n                            }}\r\n                        >\r\n\r\n                            <FieldSet>\r\n                                {form.getFieldValue(\"cortes_id\") && <Toolbar\r\n                                    style={{ width: \"100%\" }}\r\n                                    left={<div>{larguraUtil && <>Largura Útil [ <b>{larguraUtil}mm</b> ]</>}</div>}\r\n                                    right={forInput && <Button onClick={clearCortes}>Refazer Cortes</Button>}\r\n                                />\r\n                                }\r\n                            </FieldSet>\r\n                            {forInput && <><FieldSet>\r\n\r\n\r\n                                <FieldSet layout=\"vertical\" style={{ minWidth: \"200px\", maxWidth: \"200px\" }}>\r\n                                    <FieldSet style={{ fontWeight: 500 }} field={{ wide: [8, 8], noItemWrap: true, label: { enabled: false } }}>\r\n                                        <Field>Largura</Field>\r\n                                        <Field>Nº Cortes</Field>\r\n                                    </FieldSet>\r\n\r\n\r\n                                    <Form.List name=\"cortes\">\r\n\r\n                                        {(fields, { add, remove, move }) => {\r\n                                            return (\r\n                                                <>\r\n                                                    {fields.map((field, index) => (\r\n                                                        <FieldSet key={field.key} field={{ wide: [8, 8] }}>\r\n                                                            <Field forInput={false} name={[field.name, `item_lar`]} label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                                            <Field forInput={!isCortesTouched()} name={[field.name, `item_ncortes`]} label={{ enabled: false }}><InputNumber size=\"small\" min={1} max={24} /></Field>\r\n                                                        </FieldSet>\r\n                                                    ))}\r\n                                                </>\r\n\r\n                                            )\r\n                                        }}\r\n\r\n                                    </Form.List>\r\n                                    <VerticalSpace height=\"12px\" />\r\n                                    <FieldSet><Button disabled={isCortesTouched()} type=\"dashed\" onClick={onSubmit} style={{ width: \"100%\" }}>Aplicar</Button></FieldSet>\r\n\r\n                                </FieldSet>\r\n                            </FieldSet>\r\n                                <VerticalSpace height=\"12px\" />\r\n                                <FieldSet>\r\n                                    {form.getFieldValue(\"cortes_id\") && <Toolbar\r\n                                        style={{ width: \"100%\" }}\r\n                                        left={\r\n                                            <FieldSet>\r\n                                                <Field name=\"cortesordem_id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: false, text: \"Posição Cortes\", pos: \"left\" }} addons={{\r\n                                                    ...(form.getFieldValue(\"cortesordem_id\") && { right: <Button onClick={() => onShowForm()} style={{ marginLeft: \"3px\" }} size=\"small\"><EditOutlined style={{ fontSize: \"16px\" }} /></Button> })\r\n                                                }}>\r\n                                                    <SelectField size=\"small\" data={cortesOrdemLookup} keyField=\"id\" textField=\"designacao\"\r\n                                                        optionsRender={(d, keyField, textField) => ({ label: <div><div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div><div style={{ color: \"#1890ff\" }}>{d[\"largura_ordem\"].replaceAll('\"', ' ')}</div></div>, value: d[keyField] })}\r\n                                                    />\r\n                                                </Field>\r\n                                            </FieldSet>\r\n                                        }\r\n                                        right={<Button onClick={() => onShowForm(true)}>Novo Posicionamento de Cortes</Button>}\r\n                                    />\r\n                                    }\r\n                                </FieldSet>\r\n                            </>\r\n                            }\r\n                            <FieldSet field={{ wide: [16] }}>\r\n                                <FieldItem label={{ enabled: false }}>\r\n                                    {((loading, cortesOrdem) => {\r\n                                        if (!loading && cortesOrdem) {\r\n                                            return (<FormCortesUpsert record={{ ...form.getFieldsValue([\"cortes\", \"cortes_id\"]), cortesOrdem }} wrapForm={false} forInput={false} parentReload={loadData} />);\r\n                                        }\r\n                                    })(loading, cortesOrdem())}\r\n                                </FieldItem>\r\n                            </FieldSet>\r\n                        </FormLayout>\r\n                    </Form>\r\n                    {parentRef && <Portal elId={parentRef.current}>\r\n                        <Space>\r\n                            {isTouched && <Button type=\"primary\" onClick={() => onFinish(form.getFieldsValue(true))}>Guardar</Button>}\r\n                            <Button onClick={onClose}>Fechar</Button>\r\n                        </Space>\r\n                    </Portal>\r\n                    }\r\n                </Spin>\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber, Menu, Dropdown } from \"antd\";\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport { useDrag, useDrop, DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { useImmer } from \"use-immer\";\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst useStyles = createUseStyles({\r\n    bobine: {\r\n        cursor: \"move\",\r\n        border: \"solid 1px #bfbfbf\",\r\n        height: \"150px\",\r\n        boxShadow: \"2px 1px 2px #f0f0f0\",\r\n        margin: \"3px\",\r\n        borderRadius: \"3px\",\r\n        width: (props) => `${props.width}%`,\r\n        '&:hover': {\r\n            backgroundColor: \"#e6f7ff\"\r\n        }\r\n    }\r\n})\r\n\r\nconst Bobine = ({ id, value, index, moveBobine, width = 0, forInput = false, cortes, setArtigo }) => {\r\n    const classes = useStyles({ width });\r\n    const ref = useRef(null);\r\n    const color = cortes.find(v => v.item_lar == value);\r\n    const style = {\r\n        color: color.color,\r\n        fontStyle: \"italic\",\r\n        height: \"70%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    };\r\n\r\n    const onClick = (item) =>{\r\n        console.log(index,item)\r\n        setArtigo(index,item);\r\n    }\r\n\r\n    const menu = (\r\n        <Menu onClick={onClick}>\r\n            {color.artigos.map(v => {\r\n                return (\r\n                    <Menu.Item key={v.of_id}>\r\n                        <div><b>{v.of_cod}</b> {v.artigo_cod}</div>\r\n                        <div>{v.artigo_des}</div>\r\n                        <div style={{ color: \"#1890ff\" }}>{v.cliente_nome}</div>\r\n                    </Menu.Item>\r\n                );\r\n            })}\r\n        </Menu>\r\n    );\r\n\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: 'bobine',\r\n        collect(monitor) {\r\n            return {\r\n                handlerId: monitor.getHandlerId(),\r\n            };\r\n        },\r\n        drop(item, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            moveBobine(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        }\r\n    });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: 'bobine',\r\n\r\n        item: () => {\r\n            return { id, index };\r\n        },\r\n        canDrag(monitor) {\r\n            return forInput;\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    const opacity = isDragging ? 0 : 1;\r\n    drag(ref);\r\n    drop(ref);\r\n    return (\r\n        <div ref={ref} className={classes.bobine} style={{ opacity, background: color.bcolor, color: color.color }} data-handler-id={handlerId}>\r\n            <div style={{ fontSize: \"10px\", textAlign: \"center\", height: \"10%\" }}>{index + 1}</div>\r\n            <div style={style}>{value}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [bobines, setBobines] = useImmer([]);\r\n    const [larguraTotal, setLarguraTotal] = useState(0);\r\n\r\n\r\n    const init = () => {\r\n        const { cortes, cortesOrdem } = record;\r\n        (setFormTitle) && setFormTitle({ title: `Posicionar Cortes` });\r\n        const _bobines = [];\r\n        let _larguraTotal = 0;\r\n        if (!cortesOrdem) {\r\n            for (const v of cortes) {\r\n                _bobines.push(...(new Array(v.item_ncortes)).fill(v.item_lar));\r\n                _larguraTotal = _larguraTotal + parseInt(v.item_ncortes) * parseInt(v.item_lar);\r\n            }\r\n        } else {\r\n            const _cortesOrdem = JSON.parse(cortesOrdem.largura_ordem);\r\n            _bobines.push(..._cortesOrdem);\r\n            form.setFieldsValue({ designacao: cortesOrdem.designacao });\r\n            _larguraTotal = _cortesOrdem.reduce((sum, v) => Number(sum) + Number(v));\r\n        }\r\n\r\n        setBobines(_bobines);\r\n        setLarguraTotal(_larguraTotal);\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [record]);\r\n\r\n    const onFinish = async (values) => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const { cortes, ordem, cortes_id } = record;\r\n        let touched = false;\r\n        if (!ordem) {\r\n            touched = true;\r\n        } else {\r\n            if (!JSON.parse(ordem.largura_ordem).every((v, i) => v === bobines[i])) {\r\n                touched = true;\r\n            }\r\n        }\r\n        if (touched) {\r\n            const response = await fetchPost({ url: `${API_URL}/updatecortesordem/`, parameters: { ...values, largura_ordem: JSON.stringify(bobines), cortes_id } });\r\n            if (response.data.status !== \"error\") {\r\n                status.success.push({ message: response.data.title });\r\n                parentReload({}, \"lookup\");\r\n                closeParent();\r\n            } else {\r\n                status.error.push({ message: response.data.title });\r\n            }\r\n            setFormStatus(status);\r\n        }\r\n    }\r\n\r\n    const moveBobine = useCallback((dragIndex, hoverIndex) => {\r\n        setBobines(draft => {\r\n            const tmp = draft[hoverIndex];\r\n            draft[hoverIndex] = draft[dragIndex];\r\n            draft[dragIndex] = tmp;\r\n        });\r\n    }, [bobines]);\r\n\r\n    return (\r\n        <>\r\n            <AlertMessages formStatus={formStatus} />\r\n            <Form form={form} name={`fps`} onFinish={onFinish} component={wrapForm}>\r\n                <FormLayout\r\n                    id=\"LAY-CORTESORDEM-UPSERT\"\r\n                    guides={guides}\r\n                    layout=\"vertical\"\r\n                    style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{\r\n                        forInput,\r\n                        wide: [16],\r\n                        margin: \"2px\", overflow: false, guides: guides,\r\n                        label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                        alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                        layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                        required: true,\r\n                        style: { alignSelf: \"top\" }\r\n                    }}\r\n                    fieldSet={{\r\n                        guides: guides,\r\n                        wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                    }}\r\n                >\r\n                    {forInput && <>\r\n                        <FieldSet margin={false} field={{ wide: [6, 4] }}>\r\n                            <Field name=\"designacao\" label={{ enabled: false }}><Input placeholder=\"Designação\" size=\"small\" /></Field>\r\n                        </FieldSet>\r\n                        <VerticalSpace height=\"24px\" />\r\n                    </>\r\n                    }\r\n                </FormLayout>\r\n            </Form>\r\n\r\n            <DndProvider backend={HTML5Backend}>\r\n                <div style={{ display: \"flex\", flexDirection: \"row\",justifyContent:\"space-around\" }}>\r\n                    {bobines.map((v, i) => {\r\n                        return (<Bobine key={`b-${v}.${i}`} id={`b-${v}.${i}`} value={v} index={i} moveBobine={moveBobine} width={(v * 100) / larguraTotal} cortes={record.cortes} forInput={forInput} />);\r\n                    })}\r\n                </div>\r\n            </DndProvider>\r\n            {parentRef && <Portal elId={parentRef.current}>\r\n                <Space>\r\n                    <Button type=\"primary\" onClick={() => form.submit()}>Guardar</Button>\r\n                    <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button>\r\n                </Space>\r\n            </Portal>\r\n            }\r\n        </>\r\n    );\r\n}"],"names":["React","useEffect","useState","useCallback","useRef","useContext","createUseStyles","styled","dayjs","Joi","fetch","fetchPost","cancelToken","API_URL","WrapperForm","TitleForm","FormLayout","Field","FieldSet","Label","LabelField","FieldItem","AlertsContainer","Item","SelectField","InputAddon","VerticalSpace","AlertMessages","Toolbar","Portal","ResultMessage","Button","Spin","Input","Form","InputNumber","Skeleton","Space","LoadingOutlined","EditOutlined","PlusOutlined","DATE_FORMAT","DATETIME_FORMAT","FormCortesUpsert","useImmer","schema","keys","excludeKeys","getSchema","unknown","Drawer","showWrapper","setShowWrapper","parentReload","formTitle","setFormTitle","iref","record","onVisible","prev","show","title","subTitle","height","textAlign","loadCortesOrdemLookup","cortes_id","token","url","filter","sort","column","direction","rows","data","colors","bcolor","color","parentRef","closeParent","wrapForm","forInput","useForm","form","loading","setLoading","status","resultMessage","setResultMessage","showForm","setShowForm","error","warning","info","success","formStatus","setFormStatus","cortesOrdemLookup","setCortesOrdemLookup","larguraUtil","setLarguraUtil","changedValues","setChangedValues","isTouched","setIsTouched","cancelFetch","init","cancel","calculateLarguraUtil","larguras","getFieldValue","cortes","cortesordem","ofs","id","_cortesOrdemLookup","_larguras","JSON","parse","largura_json","_cortes","Object","map","key","i","item_lar","item_ncortes","artigos","v","artigo_lar","item","artigo_id","artigo_cod","artigo_des","cliente_cod","cliente_nome","of_id","of_cod","setFieldsValue","cortesordem_id","loadData","agg_id","type","_cortes_id","onValuesChange","allValues","cortesOrdem","isCortesTouched","reduce","accumulator","current","cortes_artigo_ncortes","cortes_artigo_lar","Array","isArray","el","parseInt","onFinish","values","console","log","getFieldsValue","csid","parameters","response","onSubmit","push","message","clearCortes","onShowForm","newForm","onClose","reload","onSuccessOK","operation","resetFields","onErrorOK","fontSize","width","padding","margin","overflow","label","enabled","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","layout","top","right","center","bottom","left","addons","required","style","alignSelf","wide","minWidth","maxWidth","fontWeight","noItemWrap","fields","add","remove","move","field","index","name","text","marginLeft","d","keyField","textField","display","replaceAll","value","CheckboxField","HorizontalRule","IconButton","Menu","Dropdown","EllipsisOutlined","useDrag","useDrop","DndProvider","HTML5Backend","useStyles","bobine","cursor","border","boxShadow","borderRadius","props","backgroundColor","Bobine","moveBobine","setArtigo","classes","ref","find","fontStyle","justifyContent","alignItems","onClick","menu","accept","collect","monitor","handlerId","getHandlerId","drop","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","clientOffset","getClientOffset","hoverClientY","y","canDrag","isDragging","drag","opacity","background","guides","setGuides","bobines","setBobines","larguraTotal","setLarguraTotal","_bobines","_larguraTotal","fill","_cortesOrdem","largura_ordem","designacao","sum","Number","ordem","touched","every","stringify","draft","tmp","flexDirection","submit"],"sourceRoot":""}