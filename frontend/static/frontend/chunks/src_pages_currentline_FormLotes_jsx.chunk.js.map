{"version":3,"file":"chunks/src_pages_currentline_FormLotes_jsx.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/currentline/FormLotes.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useMemo, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled, { css } from 'styled-components';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { groupBy } from \"utils\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace, InputAddon, SelectDebounceField, AutoCompleteField } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport YScroll from \"components/YScroll\";\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber, DatePicker, Select, Spin, Switch, Tag } from \"antd\";\r\nimport { DATE_FORMAT, DATETIME_FORMAT, FORMULACAO_MANGUEIRAS, SOCKET } from 'config';\r\nimport useWebSocket from 'react-use-websocket';\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nconst loadMateriasPrimasLookup = async ({ token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/materiasprimaslookup/`, filter: {}, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nconst loadLotesLookup = async (lote_cod, item_cod) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/loteslookup/`, pagination: { limit: 10 }, filter: { item_cod, loc_cod: 'BUFFER', lote_cod: `%${lote_cod}%` } });\r\n    return rows;\r\n}\r\n\r\nconst TitleExtrusora = ({ value, extrusoraRef }) => {\r\n    const show = useRef(false);\r\n    useEffect(() => {\r\n        if (extrusoraRef.current !== value) {\r\n            show.current = true;\r\n            console.log(\"extrusora\", value, extrusoraRef.current)\r\n            extrusoraRef.current = value;\r\n        } else {\r\n            show.current = false;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {show.current &&\r\n                <FieldSet wide={16} layout=\"horizontal\" margin={false} field={{ wide: [8, 1.5, 1.5, 5], label: { enabled: false } }}>\r\n                    <FieldItem><div style={{ fontWeight: 700, fontSize: \"12px\" }}>Extrusora {value}</div></FieldItem>\r\n                    <FieldItem><div style={{ textAlign: \"right\" }}>Qtd. Requerida</div></FieldItem>\r\n                    <FieldItem><div style={{ textAlign: \"right\" }}>Qtd. Disponível</div></FieldItem>\r\n                    <FieldItem><div style={{ textAlign: \"center\" }}>Lotes</div></FieldItem>\r\n                </FieldSet>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst useFocus = () => {\r\n    const htmlElRef = useRef(null)\r\n    const setFocus = () => { htmlElRef.current && htmlElRef.current.focus() }\r\n    return [htmlElRef, setFocus]\r\n}\r\n\r\nconst StyledButtonMenu = styled(Button).withConfig({\r\n    shouldForwardProp: (prop) => !['first'].includes(prop)\r\n})`\r\n    border-radius:0px !important;\r\n    ${({ first = false }) => !first && css`border-left: 0px !important;`}\r\n`;\r\n\r\nconst MenuExtrusoras = ({ setExtrusora, extrusora, setFocus }) => {\r\n    const onSelect = (v) => {\r\n        if (extrusora === 'BC' && v === 'BC') {\r\n            setExtrusora('C');\r\n        } else if (extrusora === 'BC' && v === 'C') {\r\n            setExtrusora('B');\r\n        } else {\r\n            setExtrusora(v);\r\n        }\r\n        setFocus();\r\n    }\r\n    const type = (v) => {\r\n        if (v.includes(extrusora)) {\r\n            return 'primary';\r\n        }\r\n        return 'default';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledButtonMenu size='large' onClick={() => onSelect('A')} first={true} type={type(['A'])}>Extrusora A</StyledButtonMenu>\r\n            <StyledButtonMenu size='large' onClick={() => onSelect('BC')} type={type(['B', 'BC'])}>Extrusora B</StyledButtonMenu>\r\n            <StyledButtonMenu size='large' onClick={() => onSelect('C')} type={type(['C', 'BC'])}>Extrusora C</StyledButtonMenu>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Extrusora = ({ extrusoraRef, form, id, matPrimasLookup }) => {\r\n    const name = `lotes${id}`;\r\n    return (\r\n        <Form.List name={name}>\r\n            {(fields, { add, remove, move }) => {\r\n                return (\r\n                    <>\r\n                        {fields.map((field, index) => (\r\n                            <React.Fragment key={field.key}>\r\n                                <TitleExtrusora extrusoraRef={extrusoraRef} value={form.getFieldValue(name)[field.name]['extrusora']} />\r\n                                {/* <FieldSet wide={8} layout=\"horizontal\" margin={false} field={{ label: { enabled: false } }} style={{ ...(index % 2 == 0 && { backgroundColor: \"#f5f5f5\" }) }}> */}\r\n                                <FieldSet wide={16} margin={false}\r\n                                    /* style={{ ...(index % 2 == 0 && { backgroundColor: \"#f5f5f5\" }) }} */\r\n                                    field={{\r\n                                        label: { enabled: false },\r\n                                        style: { alignSelf: \"center\" },\r\n                                        wide: [1, 7, 1.5, 1.5, 5],\r\n                                        /* style: { border: \"solid 1px #fff\", borderLeft: \"none\", fontWeight: \"10px\" } */\r\n                                    }}\r\n                                >\r\n                                    <Field name={[field.name, `mangueira`]} style={{ fontSize: \"12px\", backgroundColor: \"#fff\", alignSelf: \"center\" }}>\r\n                                        <SelectField tabIndex={1000} size=\"large\" data={FORMULACAO_MANGUEIRAS[form.getFieldValue(name)[field.name]['extrusora']]} keyField=\"key\" textField=\"key\"\r\n                                            optionsRender={(d, keyField, textField) => ({ label: `${d[textField]}`, value: d[keyField] })}\r\n                                        />\r\n                                    </Field>\r\n                                    <Field name={[field.name, `matprima_cod`]} forInput={false} style={{ fontWeight: 700, fontSize: \"12px\", alignSelf: \"center\" }}>\r\n                                        <SelectField size=\"large\" data={matPrimasLookup} keyField=\"ITMREF_0\" textField=\"ITMDES1_0\"\r\n                                            optionsRender={(d, keyField, textField) => ({ label: `${d[textField]}`, value: d[keyField] })}\r\n                                            showSearch\r\n                                            filterOption={(input, option) => option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        />\r\n                                    </Field>\r\n                                    <FieldItem style={{ textAlign: \"right\", alignSelf: \"center\", fontSize: \"12px\" }}>\r\n                                        <b>{form.getFieldValue(name)[field.name].qty}</b> kg\r\n                                    </FieldItem>\r\n\r\n                                    <FieldItem style={{\r\n                                        textAlign: \"right\", alignSelf: \"center\", fontSize: \"12px\",\r\n                                        ...form.getFieldValue(name)[field.name].qty <= form.getFieldValue(name)[field.name].qty_available && { color: \"#237804\" }\r\n                                    }}>\r\n                                        <b>{form.getFieldValue(name)[field.name].qty_available}</b> kg\r\n                                    </FieldItem>\r\n                                    <FieldItem style={{ alignSelf: \"center\", fontSize: \"12px\" }}>\r\n                                        <Space size={2} wrap={true}>\r\n                                            {form.getFieldValue(name)[field.name]?.lotes && form.getFieldValue(name)[field.name]?.lotes.map((v, idx) => {\r\n                                                return (<Tag style={{ fontSize: \"11px\", padding: \"2px\" }} closable key={`lot-${idx}`} color=\"orange\">{v.lote} <b>{v.qty}</b> {v.unit.toLowerCase()}</Tag>);\r\n                                            })}\r\n                                        </Space>\r\n                                    </FieldItem>\r\n                                    {/* <Field name={[field.name, `lote_cod`]} required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: false }}>\r\n                                                                                                                    <SelectDebounceField\r\n                                                            autoFocus={field.name == 0 ? true : false}\r\n                                                            tabIndex={0}\r\n                                                            defaultActiveFirstOption\r\n                                                            placeholder=\"Lote\"\r\n                                                            size=\"small\"\r\n                                                            keyField=\"LOT_0\"\r\n                                                            textField=\"LOT_0\"\r\n                                                            showSearch\r\n                                                            showArrow\r\n                                                            allowClear\r\n                                                            fetchOptions={(v) => loadLotesLookup(v, form.getFieldValue(\"formulacao\")[field.name]['matprima_cod'])}\r\n                                                        /> \r\n                                                            <AutoCompleteField\r\n                                                                //autoFocus={field.name == 0 ? true : false}\r\n                                                                tabIndex={0}\r\n                                                                placeholder=\"Selecione o Lote\"\r\n                                                                size=\"small\"\r\n                                                                keyField=\"LOT_0\"\r\n                                                                textField=\"LOT_0\"\r\n                                                                dropdownMatchSelectWidth={250}\r\n                                                                allowClear\r\n                                                                backfill\r\n                                                                optionsRender={lotesRenderer}\r\n                                                                fetchOptions={(v) => loadLotesLookup(v, form.getFieldValue(\"formulacao\")[field.name]['matprima_cod'])}\r\n                                                            />\r\n                                                        </Field> */}\r\n                                </FieldSet>\r\n                                {/*                                                         </FieldSet> */}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </>\r\n                );\r\n            }}\r\n        </Form.List>\r\n    );\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.artigospecs_id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n    const [matPrimasLookup, setMatPrimasLookup] = useState([]);\r\n    const extrusoraRef = useRef();\r\n    const [inputRef, setInputFocus] = useFocus();\r\n    const [extrusora, setExtrusora] = useState('A');\r\n    const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${SOCKET.url}/lotespick`, {\r\n        onOpen: () => console.log(`Connected to Web Socket`),\r\n        /*         onMessage: (v) => {\r\n                    if (lastJsonMessage) {\r\n                        console.log(v,lastJsonMessage);\r\n                    }\r\n                }, */\r\n        queryParams: { 'token': '123456' },\r\n        onError: (event) => { console.error(event); },\r\n        shouldReconnect: (closeEvent) => true,\r\n        reconnectInterval: 3000\r\n    });\r\n\r\n    const init = ({ lookup = false, token }) => {\r\n        (async () => {\r\n            if (lookup) {\r\n                setMatPrimasLookup(await loadMateriasPrimasLookup({ token }));\r\n            }\r\n\r\n            //Load das Matérias Primas em Buffer via Socket\r\n            const matPrimas = record.formulacao.items.map(({ matprima_cod }) => `'${matprima_cod}'`).join(',');\r\n            sendJsonMessage({ cmd: 'loadmatprimas', value: matPrimas, cs: record.id });\r\n\r\n            console.log(\"$$#$#$#$#$--\", record.nonwovens)\r\n            console.log(\"$$#$#$#$#$--\", record.quantity)\r\n            console.log(\"$$#$#$#$#$--\", record.produto)\r\n            console.log(\"$$#$#$#$#$--\", record.formulacao)\r\n            console.log(\"$$#$#$#$#$--\", record.lotes)\r\n\r\n            const gsmNwSup = record.nonwovens.nw_des_sup.split(new RegExp('gsm', 'i'))[0].trim().split(' ').pop();\r\n            const gsmNwInf = record.nonwovens.nw_des_inf.split(new RegExp('gsm', 'i'))[0].trim().split(' ').pop();\r\n            const filmeSqm = Number(record.quantity.square_meters) * (Number(gsmNwSup) + Number(gsmNwInf)) / Number(record.produto.gsm);\r\n\r\n            const lotes = { A: [], B: [], C: [] };\r\n            if (record.lotes && record.lotes.length > 0) {\r\n                console.log(\"$$#$#$#$#$-lotes-\", record.lotes);\r\n                throw 'TODO---------';\r\n            } else {\r\n                record.formulacao.items.forEach(v => {\r\n                    console.log(v.extrusora, \"-------\")\r\n                    const vitem = {\r\n                        qty_available: 0,\r\n                        lotes: [],\r\n                        qty: Math.round((filmeSqm * (Number(v.vglobal) / 100)), 2),\r\n                        type: 0, //lotes de extrusoras\r\n                        extrusora: v.extrusora,\r\n                        matprima_cod: v.matprima_cod\r\n                    };\r\n                    if (v.extrusora === 'BC') {\r\n                        lotes['B'].push({ ...vitem, extrusora: 'B' });\r\n                        lotes['C'].push({ ...vitem, extrusora: 'C' });\r\n                    } else {\r\n                        lotes[v.extrusora].push(vitem);\r\n                    }\r\n                    /* if (!('qty_available' in v)) v.qty_available = 0;\r\n                    if (!('lotes' in v)) v.lotes = [];\r\n                    if (!('qty' in v)) v.qty = Math.round((filmeSqm * (Number(v.vglobal) / 100)) * 0.1, 2);\r\n    \r\n                    console.log(v.vglobal, \"-------\", (filmeSqm * (Number(v.vglobal) / 100))) */\r\n\r\n                });\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            form.setFieldsValue({ lotesA: lotes['A'], lotesB: lotes['B'], lotesC: lotes['C'] /* groupBy(record.formulacao.items, 'extrusora') */ });\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        init({ lookup: true, token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Lotes Cancelled\"));\r\n    }, []);\r\n\r\n    const onValuesChange = (changedValues) => {\r\n        console.log(\"CHANGEDDDDD--\", changedValues, \" EXTRUSORA SELECIONADA--\", extrusora);\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        /* const status = { error: [], warning: [], info: [], success: [] };\r\n        const v = schema().validate(values, { abortEarly: false });\r\n        if (!v.error) {\r\n            let error = false;\r\n            for (let k in values) {\r\n                if (values[k] === undefined && k !== \"cliente_cod\" && k !== \"designacao\") {\r\n                    error = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (error) {\r\n                status.error.push({ message: \"Os items têm de estar preenchidos!\" });\r\n            }\r\n            if (status.error.length === 0) {\r\n                const { cliente_cod: { value: cliente_cod, label: cliente_nome } = {} } = values;\r\n                const response = await fetchPost({ url: `${API_URL}/newartigospecs/`, parameters: { ...form.getFieldsValue(true), produto_id: ctx.produto_id, cliente_cod, cliente_nome } });\r\n                if (response.data.status !== \"error\") {\r\n                    parentReload({ artigospecs_id: record.artigospecs_id }, \"init\");\r\n                }\r\n                setResultMessage(response.data);\r\n            }\r\n        }\r\n        setFormStatus(status); */\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    /*     const ItemLabelRenderer = ({ d }) => {\r\n            return (\r\n                <div>\r\n                    <div>{d[\"LOT_0\"]}</div>\r\n                    <Space><div>{d[\"QTYPCU_0\"]}{d[\"PCUORI_0\"]}</div></Space>\r\n                </div>\r\n            );\r\n        } */\r\n\r\n    /*     const lotesRenderer = (d) => {\r\n            return { label: <ItemLabelRenderer d={d} />, key: d[\"LOT_0\"], value: d[\"LOT_0\"] };\r\n        } */\r\n\r\n    useEffect(() => {\r\n        if (lastJsonMessage && lastJsonMessage.length > 0) {\r\n            const eA = [];\r\n            const eB = [];\r\n            const eC = [];\r\n            let idx = -1;\r\n            if (extrusora === 'A') {\r\n                eA.push(...form.getFieldValue('lotesA'));\r\n                idx = eA.findIndex(v => v.extrusora === 'A' && v.matprima_cod === lastJsonMessage[0].ITMREF_0);\r\n                if (idx >= 0) {\r\n                    if (eA[idx].lotes.findIndex(v => v.lote === lastJsonMessage[0].LOT_0) === -1) {\r\n                        eA[idx].lotes = [...eA[idx].lotes,{ lote: lastJsonMessage[0].LOT_0, qty: Math.round(lastJsonMessage[0].QTYPCU_0, 2), unit: lastJsonMessage[0].PCUORI_0 }];\r\n                        eA[idx].qty_available = eA[idx].lotes.reduce((basket, itm) => (itm.qty + basket),0);\r\n                        console.log('picjeddddd',eA[idx].lotes.reduce((prev, v) => (v.qty + prev),0))\r\n                        //eA[idx].lotes.forEach(e => { eA[idx].qty_available += e.qty; });\r\n                        form.setFieldsValue({lotesA:eA});\r\n                    }\r\n                }\r\n            } else {\r\n                eB.push(...form.getFieldValue('lotesB'));\r\n                eC.push(...form.getFieldValue('lotesC'));\r\n                idx = eB.findIndex(v => v.extrusora === 'B' && v.matprima_cod === lastJsonMessage[0].ITMREF_0);\r\n                if (idx >= 0) {\r\n                    if (eB[idx].lotes.findIndex(v => v.lote === lastJsonMessage[0].LOT_0) === -1) {\r\n                        eB[idx].lotes = [...eB[idx].lotes,{ lote: lastJsonMessage[0].LOT_0, qty: Math.round(lastJsonMessage[0].QTYPCU_0, 2), unit: lastJsonMessage[0].PCUORI_0 }];\r\n                        eB[idx].qty_available = eB[idx].lotes.reduce((basket, itm) => (itm.qty + basket),0);\r\n                        //eB[idx].lotes.forEach(e => { eB[idx].qty_available += e.qty; });\r\n                        eC[idx].lotes = [...eC[idx].lotes,{ lote: lastJsonMessage[0].LOT_0, qty: Math.round(lastJsonMessage[0].QTYPCU_0, 2), unit: lastJsonMessage[0].PCUORI_0 }];\r\n                        eC[idx].qty_available = eC[idx].lotes.reduce((basket, itm) => (itm.qty + basket),0);\r\n                        //eC[idx].lotes.forEach(e => { eC[idx].qty_available += e.qty; });\r\n                        form.setFieldsValue({lotesB:eB,lotesC:eC});\r\n                    }\r\n                }\r\n            }\r\n           \r\n\r\n\r\n\r\n\r\n            // let _extrusora = extrusora;\r\n            // if (_extrusora === 'A') {\r\n            //     selExtrusora.push(...form.getFieldValue('lotesA'));\r\n            // } else {\r\n            //     selExtrusora.push(...form.getFieldValue('lotesB'));\r\n            //     _extrusora='B';\r\n            // }\r\n            // const idx = selExtrusora.findIndex(v => v.extrusora === _extrusora && v.matprima_cod === lastJsonMessage[0].ITMREF_0);\r\n            // if (idx >= 0) {\r\n            //     if (selExtrusora[idx].lotes.findIndex(v => v.lote === lastJsonMessage[0].LOT_0) === -1) {\r\n            //         const lt = { lote: lastJsonMessage[0].LOT_0, qty: Math.round(lastJsonMessage[0].QTYPCU_0, 2), unit: lastJsonMessage[0].PCUORI_0 };\r\n            //         selExtrusora[idx].lotes = [...selExtrusora[idx].lotes,{...lt}];\r\n            //         selExtrusora[idx].qty_available = selExtrusora[idx].lotes.reduce((basket, itm) => (itm.qty + basket));\r\n            //         selExtrusora[idx].lotes.forEach(e => { selExtrusora[idx].qty_available += e.qty; });\r\n            //         if (extrusora==='BC'){\r\n            //             selExtrusora[idx].lotes = [...selExtrusora[idx].lotes,{...lt}];\r\n            //             selExtrusora[idx].qty_available = selExtrusora[idx].lotes.reduce((basket, itm) => (itm.qty + basket));\r\n            //             selExtrusora[idx].lotes.forEach(e => { selExtrusora[idx].qty_available += e.qty; });\r\n            //         }\r\n\r\n            //         console.log(\"TO PICKKKK\",extrusora,selExtrusora,lt);\r\n            //         //fv[idx].lotes = [...fv[idx].lotes, { lote: lastJsonMessage[0].LOT_0, qty: Math.round(lastJsonMessage[0].QTYPCU_0, 2), unit: lastJsonMessage[0].PCUORI_0 }];\r\n            //         ////fv[idx].qty_available = fv[idx].lotes.reduce((basket, itm) => (itm.qty + basket));\r\n            //         //fv[idx].lotes.forEach(e => { fv[idx].qty_available += e.qty; });\r\n            //         //form.setFieldsValue(fv);\r\n            //     }\r\n            // }\r\n\r\n            // const idx = fv.findIndex(v => v.extrusora === extrusora && v.matprima_cod === lastJsonMessage[0].ITMREF_0);\r\n            // if (idx >= 0) {\r\n            //     if (fv[idx].lotes.findIndex(v => v.lote === lastJsonMessage[0].LOT_0) === -1) {\r\n            //         fv[idx].lotes = [...fv[idx].lotes, { lote: lastJsonMessage[0].LOT_0, qty: Math.round(lastJsonMessage[0].QTYPCU_0, 2), unit: lastJsonMessage[0].PCUORI_0 }];\r\n            //         //fv[idx].qty_available = fv[idx].lotes.reduce((basket, itm) => (itm.qty + basket));\r\n            //         fv[idx].lotes.forEach(e => { fv[idx].qty_available += e.qty; });\r\n            //         form.setFieldsValue(fv);\r\n            //     }\r\n            // }\r\n            // /* const fv = form.getFieldsValue(true);\r\n            // const lotes = !(\"lotes\" in fv) ? [] : fv.lotes;\r\n            // lotes.push({ lote_cod: lastJsonMessage[0].LOT_0 });\r\n            // fv.lotes = lotes; \r\n            // form.setFieldsValue(fv);\r\n            // */\r\n\r\n        }\r\n        inputRef.current.value = '';\r\n\r\n    }, [lastJsonMessage]);\r\n\r\n    const onManualPick = (v) => {\r\n        sendJsonMessage({ cmd: 'pick', value: v.key, cs: record.id });\r\n    }\r\n\r\n    const onPick = (e, a, b) => {\r\n        if (e.keyCode == 9 || e.keyCode == 13) {\r\n            if (inputRef.current.value !== '') {\r\n                e.preventDefault();\r\n                sendJsonMessage({ cmd: 'pick', value: inputRef.current.value, cs: record.id });\r\n                //setInputFocus();\r\n            }\r\n            //console.log(\"----\",inputRef.current.state.value,'----',fv);\r\n        } else {\r\n            console.log(\"xxxx->\", e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Lotes de Matérias Primas</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`flotes`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-LOTES\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\", height: \"65vh\" /* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: false,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: false,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n\r\n                        <FieldSet wide={16} margin={false} field={{ wide: [4, 6, 6] }}>\r\n                            <FieldItem label={{ enabled: false }} style={{ textAlign: \"center\" }}>\r\n                                <MenuExtrusoras setExtrusora={setExtrusora} extrusora={extrusora} setFocus={() => setInputFocus(inputRef)} />\r\n                            </FieldItem>\r\n                            <FieldItem label={{ enabled: false }}><input className=\"ant-input ant-input-lg\" ref={inputRef} onKeyDown={onPick} autoFocus /></FieldItem>\r\n                            <Field required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: false }}>\r\n                                <SelectDebounceField\r\n                                    defaultActiveFirstOption\r\n                                    placeholder=\"Lote Picagem Manual\"\r\n                                    size=\"large\"\r\n                                    keyField=\"LOT_0\"\r\n                                    textField=\"LOT_0\"\r\n                                    showSearch\r\n                                    showArrow\r\n                                    allowClear\r\n                                    onSelect={onManualPick}\r\n                                    fetchOptions={(v) => loadLotesLookup(v)}\r\n                                />\r\n                            </Field>\r\n                        </FieldSet>\r\n\r\n                        <YScroll>\r\n                            <FieldSet layout=\"horizontal\" margin={false}>\r\n                                <FieldSet layout=\"vertical\" split={2} margin={false}>\r\n                                    <Extrusora id='A' form={form} extrusoraRef={extrusoraRef} matPrimasLookup={matPrimasLookup} />\r\n                                </FieldSet>\r\n                                <FieldSet layout=\"vertical\" split={2} margin={false}>\r\n                                    <Extrusora id='B' form={form} extrusoraRef={extrusoraRef} matPrimasLookup={matPrimasLookup} />\r\n                                    <Extrusora id='C' form={form} extrusoraRef={extrusoraRef} matPrimasLookup={matPrimasLookup} />\r\n                                </FieldSet>\r\n                            </FieldSet>\r\n                        </YScroll>\r\n\r\n\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button type=\"primary\" onClick={() => form.submit()}>Registar</Button>\r\n                        <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button>\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}"],"names":["React","useEffect","useState","useCallback","useRef","useMemo","useContext","createUseStyles","styled","css","Joi","fetch","fetchPost","cancelToken","API_URL","getSchema","groupBy","FormLayout","Field","FieldSet","FieldItem","AlertsContainer","Item","SelectField","CheckboxField","HorizontalRule","VerticalSpace","InputAddon","SelectDebounceField","AutoCompleteField","AlertMessages","ResultMessage","YScroll","Portal","Input","Space","Form","Button","InputNumber","DatePicker","Select","Spin","Switch","Tag","DATE_FORMAT","DATETIME_FORMAT","FORMULACAO_MANGUEIRAS","SOCKET","useWebSocket","schema","keys","excludeKeys","unknown","setId","id","key","values","loadMateriasPrimasLookup","token","url","filter","sort","rows","data","loadLotesLookup","lote_cod","item_cod","pagination","limit","loc_cod","TitleExtrusora","value","extrusoraRef","show","current","console","log","wide","label","enabled","fontWeight","fontSize","textAlign","useFocus","htmlElRef","setFocus","focus","StyledButtonMenu","withConfig","shouldForwardProp","prop","includes","first","MenuExtrusoras","setExtrusora","extrusora","onSelect","v","type","Extrusora","form","matPrimasLookup","name","fields","add","remove","move","map","field","index","getFieldValue","style","alignSelf","backgroundColor","d","keyField","textField","input","option","toLowerCase","indexOf","qty","qty_available","color","lotes","idx","padding","lote","unit","record","setFormTitle","parentRef","closeParent","parentReload","wrapForm","forInput","useForm","loading","setLoading","changedValues","setChangedValues","error","warning","info","success","formStatus","setFormStatus","guides","setGuides","artigospecs_id","operation","setOperation","status","resultMessage","setResultMessage","setMatPrimasLookup","inputRef","setInputFocus","onOpen","queryParams","onError","event","shouldReconnect","closeEvent","reconnectInterval","lastJsonMessage","sendJsonMessage","init","lookup","matPrimas","formulacao","items","matprima_cod","join","cmd","cs","nonwovens","quantity","produto","gsmNwSup","nw_des_sup","split","RegExp","trim","pop","gsmNwInf","nw_des_inf","filmeSqm","Number","square_meters","gsm","A","B","C","length","forEach","vitem","Math","round","vglobal","push","setFieldsValue","lotesA","lotesB","lotesC","cancelFetch","cancel","onValuesChange","onFinish","onSuccessOK","resetFields","onErrorOK","onClose","reload","eA","eB","eC","findIndex","ITMREF_0","LOT_0","QTYPCU_0","PCUORI_0","reduce","basket","itm","prev","onManualPick","onPick","e","a","b","keyCode","preventDefault","width","height","margin","overflow","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","layout","top","right","center","bottom","left","required","submit"],"sourceRoot":""}