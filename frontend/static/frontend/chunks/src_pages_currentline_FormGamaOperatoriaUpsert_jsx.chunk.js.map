{"version":3,"file":"chunks/src_pages_currentline_FormGamaOperatoriaUpsert_jsx.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/currentline/FormGamaOperatoriaUpsert.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace, InputAddon } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Toolbar from \"components/toolbar\";\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber, DatePicker } from \"antd\";\r\nimport { PlusOutlined, VerticalAlignBottomOutlined } from '@ant-design/icons';\r\nimport { MdAdjust } from 'react-icons/md';\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, GAMAOPERATORIA } from 'config';\r\nconst gamaOperatoriaItems = GAMAOPERATORIA.filter(v => !v?.disabled);\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        //designacao: Joi.string().label(\"Designação\").required()\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nconst loadGamasOperatoriasLookup = async ({ produto_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/gamasoperatoriaslookup/`, filter: { produto_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\nconst getGamaOperatoriaItems = async ({ gamaoperatoria_id, token }) => {\r\n    if (!gamaoperatoria_id) {\r\n        return [];\r\n    }\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/gamaoperatoriaitemsget/`, filter: { gamaoperatoria_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [isTouched, setIsTouched] = useState(false);\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.gamaoperatoria.id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n    const [gamasOperatorias, setGamasOperatorias] = useState([]);\r\n\r\n\r\n    const transformData = ({ items, gamaoperatoria }) => {\r\n        const fieldsValue = { nitems: items.length };\r\n        for (let [i, v] of items.entries()) {\r\n            fieldsValue[`key-${i}`] = v.item_key;\r\n            fieldsValue[`des-${i}`] = v.item_des;\r\n            fieldsValue[`tolerancia-${i}`] = v.tolerancia;\r\n            const vals = (typeof v.item_values === \"string\") ? JSON.parse(v.item_values) : v.item_values;\r\n            for (let [iV, vV] of vals.entries()) {\r\n                fieldsValue[`v${v.item_key}-${iV}`] = vV;\r\n            }\r\n        }\r\n        return { ...gamaoperatoria, ...fieldsValue };\r\n    }\r\n\r\n    const init = (lookup = false, token) => {\r\n        (async () => {\r\n            if (lookup) {\r\n\r\n            }\r\n            if (operation.key === \"update\") {\r\n                (setFormTitle) && setFormTitle({ title: `Gama Operatória` });\r\n                const { items, ...gamaoperatoria } = record.gamaoperatoria;\r\n                setGamasOperatorias(await loadGamasOperatoriasLookup({ produto_id: gamaoperatoria.produto_id, token }));\r\n                form.setFieldsValue(transformData({ items, gamaoperatoria }));\r\n            }\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        init(true, cancelFetch);\r\n        return (() => cancelFetch.cancel(\"Form Gama Operatória Cancelled\"));\r\n    }, []);\r\n\r\n    const onValuesChange = async (changedValues) => {\r\n        setIsTouched(true);\r\n        if ('id' in changedValues) {\r\n            const gamaoperatoria = gamasOperatorias.find(v=>v.id===changedValues.id);\r\n            const items = await getGamaOperatoriaItems({ gamaoperatoria_id: changedValues.id });\r\n            form.setFieldsValue(transformData({ items, gamaoperatoria }));\r\n        }\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        if (!isTouched) {\r\n            return;\r\n        }\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const v = schema().validate(values, { abortEarly: false });\r\n        if (!v.error) {\r\n            let error = false;\r\n            for (let k in values) {\r\n                if (k !== 'designacao' && values[k] === undefined) {\r\n                    error = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (error) {\r\n                status.error.push({ message: \"Os items da Gama Operatória têm de estar preenchidos!\" });\r\n            }\r\n            if (status.error.length === 0) {\r\n                const response = await fetchPost({ url: `${API_URL}/updatecurrentsettings/`, filter: { csid: record.id }, parameters: { type: 'gamaoperatoria', gamaoperatoria: { ...form.getFieldsValue(true), produto_id: record.gamaoperatoria.produto_id } } });\r\n                setResultMessage(response.data);\r\n                if (response.data.status !== \"error\") {\r\n                    throw 'TODO RELOAD PARENT'\r\n                    //parentReload({ formulacao_id: record.formulacao.id }, \"init\");\r\n                }\r\n                // //const response = await fetchPost({ url: `${API_URL}/newgamaoperatoria/`, parameters: { ...form.getFieldsValue(true), produto_id: record.gamaoperatoria.produto_id } });\r\n                // if (response.data.status !== \"error\") {\r\n                //     parentReload({ gamaoperatoria_id: record.gamaoperatoria_id }, \"init\");\r\n                // }\r\n                // setResultMessage(response.data);\r\n            }\r\n        }\r\n\r\n        setFormStatus(status);\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Criar Nova Gama Operatória</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`fps`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-GAMAOPERATORIA-UPSERT\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        {forInput && <FieldSet wide={16}>\r\n                            <Toolbar\r\n                                style={{ width: \"100%\" }}\r\n                                left={\r\n                                    <FieldSet>\r\n                                        <Field name=\"id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: false, text: \"Gama Operatória\", pos: \"left\" }}>\r\n                                            <SelectField size=\"small\" data={gamasOperatorias} keyField=\"id\" textField=\"designacao\"\r\n                                                optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                                            />\r\n                                        </Field>\r\n                                    </FieldSet>\r\n                                }\r\n                            />\r\n                        </FieldSet>\r\n                        }\r\n                        <FieldSet wide={16} margin={false} layout=\"vertical\">\r\n                            {gamaOperatoriaItems.map((v, idx) =>\r\n                                <FieldSet key={`gop-${idx}`} wide={16} field={{ wide: [5, 9, 2] }} margin={false}>\r\n                                    <FieldItem label={{ enabled: false }} style={{ fontSize: \"11px\" }}>\r\n                                        <b>{v.designacao}</b> ({v.unidade})\r\n                                    </FieldItem>\r\n                                    <FieldSet wide={9} margin={false}>\r\n                                        {[...Array(v.nvalues)].map((x, i) =>\r\n                                            <Field split={9} key={`${v.key}-${i}`} name={`v${v.key}-${i}`} label={{ enabled: false }}>\r\n                                                <InputNumber min={v.min} max={v.max} controls={false} size=\"small\" precision={v?.precision} />\r\n                                            </Field>\r\n                                        )}\r\n                                    </FieldSet>\r\n                                    <Field name={`tolerancia-${idx}`} label={{ enabled: false }}><InputNumber style={{ maxWidth: \"70px\" }} addonBefore=\"&plusmn;\" min={0} max={100} controls={false} size=\"small\" /></Field>\r\n                                </FieldSet>\r\n                            )}\r\n                        </FieldSet>\r\n\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        {isTouched && <Button type=\"primary\" onClick={() => onFinish(form.getFieldsValue(true))}>Guardar</Button>}\r\n                        <Button onClick={onClose}>Fechar</Button>\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}"],"names":["React","useEffect","useState","useCallback","useRef","useContext","createUseStyles","styled","dayjs","Joi","fetch","fetchPost","cancelToken","API_URL","getSchema","FormLayout","Field","FieldSet","FieldItem","AlertsContainer","Item","SelectField","CheckboxField","HorizontalRule","VerticalSpace","InputAddon","AlertMessages","IconButton","ResultMessage","Toolbar","Portal","Input","Space","Form","Button","InputNumber","DatePicker","PlusOutlined","VerticalAlignBottomOutlined","MdAdjust","CgCloseO","DATE_FORMAT","DATETIME_FORMAT","GAMAOPERATORIA","gamaOperatoriaItems","filter","v","disabled","schema","keys","excludeKeys","unknown","setId","id","key","values","loadGamasOperatoriasLookup","produto_id","token","url","sort","rows","data","getGamaOperatoriaItems","gamaoperatoria_id","record","setFormTitle","parentRef","closeParent","parentReload","wrapForm","forInput","useForm","form","loading","setLoading","changedValues","setChangedValues","isTouched","setIsTouched","error","warning","info","success","formStatus","setFormStatus","guides","setGuides","gamaoperatoria","operation","setOperation","status","resultMessage","setResultMessage","gamasOperatorias","setGamasOperatorias","transformData","items","fieldsValue","nitems","length","entries","i","item_key","item_des","tolerancia","vals","item_values","JSON","parse","iV","vV","init","lookup","title","setFieldsValue","cancelFetch","cancel","onValuesChange","find","onFinish","validate","abortEarly","k","undefined","push","message","csid","parameters","type","getFieldsValue","response","onSuccessOK","resetFields","onErrorOK","onClose","reload","width","padding","wide","margin","overflow","label","enabled","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","layout","top","right","center","bottom","left","required","style","alignSelf","text","d","keyField","textField","display","minWidth","value","map","idx","fontSize","designacao","unidade","Array","nvalues","x","min","max","precision","maxWidth","current"],"sourceRoot":""}