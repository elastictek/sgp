{"version":3,"file":"chunks/733/783ea95fdf2c55c39ced.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/planeamento/paletizacaoSchema/FormPaletizacaoSchema.jsx","webpack://sgp/./src/pages/planeamento/ordemFabrico/FormPaletizacao.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber } from \"antd\";\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { CgArrowDownO, CgArrowUpO, CgCloseO } from 'react-icons/cg';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, PALETIZACAO_ITEMS, PALETE_SIZES, CONTENTORES_OPTIONS, CINTASPALETES_OPTIONS } from 'config';\r\nimport { OFabricoContext } from '../ordemFabrico/FormOFabricoValidar';\r\nimport SvgSchema from '../paletizacaoSchema/SvgSchema';\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        npaletes: Joi.number().positive().label(\"Paletes/Contentor\").required(),\r\n        palete_maxaltura: Joi.number().positive().precision(2).label(\"Altura Máx. Palete (metros)\").required(),\r\n        //designacao: Joi.string().label(\"Designação\").required(),\r\n        netiquetas_bobine: Joi.number().positive().precision(2).label(\"Etiqueta/Bobine\").required(),\r\n        netiquetas_lote: Joi.number().positive().precision(2).label(\"Etiqueta do Lote da Palete\").required(),\r\n        netiquetas_final: Joi.number().positive().precision(2).label(\"Etiqueta Final da Palete\").required(),\r\n        folha_identificativa: Joi.number().min(0).precision(2).label(\"Folha Identificativa Palete\").required(),\r\n        cintas: Joi.number().valid(0, 1),\r\n        ncintas: Joi.when('cintas', { is: 1, then: Joi.number().positive().required() }),\r\n        paletizacao: Joi.array().min(1).label(\"Items da Paletização\").required()\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst SubFormPalete = ({ form, field, remove, move, index, length, operation, forInput }) => {\r\n    const [item, setItem] = useState(1);\r\n    useEffect(() => {\r\n        if (operation.key === \"update\") {\r\n            setItem(form.getFieldValue([\"paletizacao\", field.name, \"item_id\"]));\r\n        }\r\n    }, []);\r\n    const onSelect = (f) => {\r\n        setItem(form.getFieldValue([\"paletizacao\", f, \"item_id\"]));\r\n    }\r\n    return (\r\n        <FieldSet layout=\"horizontal\" field={{ wide: [1, 1, 8, 5, 1] }}>\r\n            <FieldItem label={{ enabled: false }}>{forInput && index > 0 && <IconButton onClick={() => move(index, index - 1)} style={{ alignSelf: \"center\" }}><CgArrowUpO /></IconButton>}</FieldItem>\r\n            <FieldItem label={{ enabled: false }}>{forInput && index < (length - 1) && <IconButton onClick={() => move(index, index + 1)} style={{ alignSelf: \"center\" }}><CgArrowDownO /></IconButton>}</FieldItem>\r\n            <Field label={{ enabled: false }} name={[field.name, \"item_id\"]}>\r\n                <SelectField onChange={() => onSelect(field.name)} size=\"small\" data={PALETIZACAO_ITEMS} keyField=\"key\" textField=\"value\" />\r\n            </Field>\r\n            {item === 1 && <Field label={{ enabled: false }} name={[field.name, \"item_paletesize\"]}>\r\n                <SelectField size=\"small\" data={PALETE_SIZES} keyField=\"key\" textField=\"value\" />\r\n            </Field>\r\n            }\r\n            {item === 2 && <Field label={{ enabled: false }} name={[field.name, \"item_numbobines\"]}>\r\n                <InputNumber size=\"small\" min={1} max={80} />\r\n            </Field>\r\n            }\r\n            {(item > 2 || item === undefined) && <FieldItem label={{ enabled: false }} />}\r\n            <FieldItem label={{ enabled: false }}>{forInput && <IconButton onClick={() => remove(field.name)} style={{ alignSelf: \"center\" }}><CgCloseO /></IconButton>}</FieldItem>\r\n        </FieldSet>\r\n\r\n    );\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const ctx = useContext(OFabricoContext);\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.paletizacao_id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n\r\n    const init = () => {\r\n        (async () => {\r\n            if (operation.key === \"update\") {\r\n                (setFormTitle) && setFormTitle({ title: `Editar Esquema de Paletização ${record.cliente_nome}`, subTitle: `${record.artigo_cod}` });\r\n                form.setFieldsValue({ ...record });\r\n            } else {\r\n                (setFormTitle) && setFormTitle({ title: `Novo Esquema de Paletização ${record.cliente_nome}`, subTitle: `${record.artigo_cod}` });\r\n                form.setFieldsValue({ contentor_id: \"Camião\", cintas_palete: 1, ncintas: 2, netiquetas_bobine: 2, netiquetas_lote: 4, netiquetas_final: 1, npaletes: 24, palete_maxaltura: 2.55, folha_identificativa: 1 });\r\n            }\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const onValuesChange = (changedValues, allValues) => {\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const msgKeys = [\"paletizacao\"];\r\n        const v = schema().validate(values, { abortEarly: false });\r\n        status.error = [...status.error, ...(v.error ? v.error?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        if (!v.error && status.error.length === 0) {\r\n            const response = await fetchPost({ url: `${API_URL}/newpaletizacaoschema/`, parameters: { ...values, id: record?.paletizacao_id, cliente_cod: record.cliente_cod, cliente_nome: record.cliente_nome, artigo_cod: record.artigo_cod } });\r\n            if (response.data.status !== \"error\") {\r\n                if (operation.key === \"update\") {\r\n                    parentReload({ paletizacao_id: operation.values.id });\r\n                } else {\r\n                    parentReload({}, \"lookup\");\r\n                }\r\n            }\r\n            setResultMessage(response.data);\r\n        }\r\n        setSubmitting(false);\r\n        setFormStatus(status);\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n        setSubmitting(false);\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setSubmitting(false);\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    const onSubmit = useCallback(async () => {\r\n        setSubmitting(true);\r\n        form.submit();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Criar Novo Esquema</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`fps`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-PALETIZACAO_SCHEMA\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        {forInput && <>\r\n                            <FieldSet margin={false} field={{ wide: [4, 4] }}>\r\n                                <Field name=\"contentor_id\" label={{ enabled: true, text: \"Contentor\" }}>\r\n                                    <SelectField size=\"small\" data={CONTENTORES_OPTIONS} keyField=\"value\" textField=\"label\"\r\n                                        optionsRender={(d, keyField, textField) => ({ label: d[keyField], value: d[keyField] })}\r\n                                    />\r\n                                </Field>\r\n                                <Field name=\"designacao\" label={{ enabled: true, text: \"Designação\" }}><Input size=\"small\" /></Field>\r\n                            </FieldSet>\r\n                            <HorizontalRule margin=\"12px\" />\r\n                        </>\r\n                        }\r\n                        <FieldSet margin={false} field={{ wide: 16 }}>\r\n                            <FieldSet margin={false} split={3} field={{ alert: { tooltip: true }, layout: { center: \"min-width: 70px; max-width: 70px; align-self:center;\" }, label: { pos: \"right\", width: \"100%\" } }} layout=\"vertical\">\r\n                                <Field label={{ text: \"Paletes/Contentor\" }} name=\"npaletes\"><InputNumber size=\"small\" min={1} max={150} /></Field>\r\n                                <Field label={{ text: \"Altura Máx. Palete (metros)\" }} name=\"palete_maxaltura\"><InputNumber size=\"small\" min={1} max={150} /></Field>\r\n                                <Field required={false} name=\"paletes_sobrepostas\" label={{ enabled: true, text: \"Paletes Sobrepostas\" }}><CheckboxField disabled={true} /></Field>\r\n                            </FieldSet>\r\n                            <FieldSet margin={false} split={3} field={{ layout: { center: \"min-width: 70px;max-width: 70px; align-self:center;\" }, label: { pos: \"right\", width: \"100%\" } }} layout=\"vertical\">\r\n                                <Field name=\"netiquetas_bobine\" label={{ enabled: true, text: \"Etiqueta/Bobine\" }}><InputNumber size=\"small\" min={1} max={10} /></Field>\r\n                                <Field name=\"netiquetas_lote\" label={{ enabled: true, text: \"Etiqueta do Lote da Palete\" }}><InputNumber size=\"small\" min={1} max={10} /></Field>\r\n                                <Field name=\"netiquetas_final\" label={{ enabled: true, text: \"Etiqueta Final da Palete\" }}><InputNumber size=\"small\" min={1} max={10} /></Field>\r\n                            </FieldSet>\r\n                            <FieldSet margin={false} split={3} field={{ layout: { center: \"min-width: 20px;max-width: 20px; align-self:center;\" }, label: { pos: \"right\", width: \"100%\" } }} layout=\"vertical\">\r\n                                <Field required={false} name=\"filmeestiravel_bobines\" label={{ enabled: true, text: \"Filme Estirável/Palete\" }}><CheckboxField /></Field>\r\n                                <Field required={false} name=\"filmeestiravel_exterior\" label={{ enabled: true, text: \"Filme Estirável Exterior\" }}><CheckboxField /></Field>\r\n                            </FieldSet>\r\n                        </FieldSet>\r\n\r\n                        <FieldSet wide={16} margin={false} field={{ wide: [2, 2, 3, 5, '*'], style: { alignSelf: \"center\" } }}>\r\n                            <Field name=\"cintas\" style={{ minWidth: \"20px\", alignSelf: \"center\" }} label={{ enabled: false }}><CheckboxField /></Field>\r\n                            <FieldItem label={{ enabled: false }}>\r\n                                <Item shouldUpdate={(prevValues, curValues) => prevValues?.cintas !== curValues?.cintas}>\r\n                                    {() =>\r\n                                        <Field rule={schema(['cintas', 'ncintas'])} allValues={form.getFieldsValue(true)} layout={{ center: \"min-width: 50px;max-width: 50px; align-self:center;\" }} name=\"ncintas\" label={{ enabled: true, text: \"Cintas\", pos: \"right\", colon: false }}>\r\n                                            <InputNumber disabled={form.getFieldValue([\"cintas\"]) !== 1} size=\"small\" min={1} max={10} />\r\n                                        </Field>\r\n                                    }\r\n                                </Item>\r\n                            </FieldItem>\r\n                            <FieldItem label={{ enabled: false }}>\r\n                                <Item shouldUpdate={(prevValues, curValues) => prevValues?.cintas !== curValues?.cintas}>\r\n                                    {() =>\r\n                                        <Field name=\"cintas_palete\" layout={{ center: \"align-self:center;\" }} label={{ enabled: false }}>\r\n                                            <SelectField size=\"small\" data={CINTASPALETES_OPTIONS} keyField=\"value\" textField=\"label\" disabled={form.getFieldValue([\"cintas\"]) !== 1}\r\n                                                optionsRender={(d, keyField, textField) => ({ label: d[textField], value: d[keyField] })}\r\n                                            />\r\n                                        </Field>\r\n                                    }</Item>\r\n                            </FieldItem>\r\n                            <Field name=\"folha_identificativa\" required={false} layout={{ center: \"align-self:center;\" }} label={{ enabled: true, text: \"Folha Identificativa da Palete\", pos: \"left\", width: \"100%\" }}><InputNumber size=\"small\" min={0} max={10} /></Field>\r\n                        </FieldSet>\r\n                        <HorizontalRule margin=\"12px\" />\r\n                        <FieldSet field={{ wide: 16 }} layout=\"horizontal\">\r\n                            <FieldSet layout=\"vertical\" wide={7}>\r\n                                <Form.List name=\"paletizacao\">\r\n                                    {(fields, { add, remove, move }) => {\r\n                                        const addRow = (fields) => {\r\n                                            add({ item_id: 1, item_paletesize: '970x970', item_numbobines: 10 }, 0);\r\n                                        }\r\n                                        const removeRow = (fieldName) => {\r\n                                            remove(fieldName);\r\n                                        }\r\n                                        const moveRow = (from, to) => {\r\n                                            move(from, to);\r\n                                        }\r\n                                        return (\r\n                                            <>\r\n                                                <FieldSet>\r\n                                                    {forInput && <Button type=\"dashed\" onClick={() => addRow(fields)} style={{ width: \"100%\" }}><PlusOutlined />Adicionar</Button>}\r\n                                                </FieldSet>\r\n                                                {fields.map((field, index) => (\r\n                                                    <SubFormPalete key={field.key} form={form} remove={removeRow} move={moveRow} field={field} index={index} length={fields.length} operation={operation} forInput={forInput} />\r\n                                                ))}\r\n                                            </>\r\n                                        );\r\n                                    }}\r\n                                </Form.List>\r\n                            </FieldSet>\r\n                            <FieldSet wide={9}>\r\n                                {!loading && <SvgSchema form={form} changedValues={changedValues} />}\r\n                            </FieldSet>\r\n                        </FieldSet>\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button disabled={submitting} onClick={onSubmit} type=\"primary\">Guardar</Button>\r\n                        {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport Portal from \"components/portal\";\r\nimport { Button, Spin, Form, Space, Input } from \"antd\";\r\nimport { LoadingOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport FormPaletizacaoSchema from '../paletizacaoSchema/FormPaletizacaoSchema';\r\nimport { OFabricoContext } from './FormOFabricoValidar';\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst Drawer = ({ showWrapper, setShowWrapper, parentReload }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n    const { record = {} } = showWrapper;\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type=\"drawer\"\r\n            destroyOnClose={true}\r\n            //width={width}\r\n            mask={true}\r\n            /* style={{ maginTop: \"48px\" }} */\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            width={800}\r\n            bodyStyle={{ height: \"450px\" /*  paddingBottom: 80 *//* , overflowY: \"auto\", minHeight: \"350px\", maxHeight: \"calc(100vh - 50px)\" */ }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n        >\r\n            <FormPaletizacaoSchema setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} />\r\n        </WrapperForm>\r\n    );\r\n}\r\n\r\nconst loadPaletizacoesLookup = async ({ artigo_cod, cliente_cod, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/paletizacoeslookup/`, filter: { artigo_cod, cliente_cod }, sort: [{ column: 'contentor_id' }, { column: 'designacao' }], cancelToken: token });\r\n    return rows;\r\n}\r\nconst getPaletizacaoDetails = async ({ paletizacao_id, token }) => {\r\n    if (!paletizacao_id) {\r\n        return [];\r\n    }\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/paletizacaodetailsget/`, filter: { paletizacao_id }, sort: [{ column: 'item_order', direction: 'DESC' }], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload/* , changedValues = {} */ }) => {\r\n    /* const { form, guides, schema, fieldStatus, ...ctx } = useContext(OFabricoContext); */\r\n    const [form] = Form.useForm();\r\n    const [guides, setGuides] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.aggItem.paletizacao_id));\r\n    const [showSchema, setShowSchema] = useState({ show: false });\r\n    const [paletizacoes, setPaletizacoes] = useState([]);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n\r\n    const init = () => {\r\n        (setFormTitle) && setFormTitle({ title: `Esquema de Paletização ${record.aggItem.cliente_nome}`, subTitle: `${record.aggItem.item_cod}` });\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"zzzz\", form.getFieldsValue(true))\r\n        init();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        loadData({ paletizacao_id: ((\"paletizacao_id\" in changedValues) ? changedValues.paletizacao_id : record.aggItem.paletizacao_id), token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Paletização Cancelled\"));\r\n    }, [changedValues]);\r\n\r\n\r\n\r\n    const onValuesChange = (changedValues, allValues) => {\r\n        if (\"paletizacao_id\" in changedValues) {\r\n            setChangedValues(changedValues);\r\n        }\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        const paletizacao_id = form.getFieldValue(\"paletizacao_id\");\r\n\r\n        const { tempof_id: ofabrico_id, of_id: ofabrico_cod, qty_encomenda: qty_item } = record.aggItem;\r\n        const artigo = {\r\n            artigo_thickness: record.aggItem.artigo.thickness,\r\n            artigo_diam: record.aggItem.artigo.diam_ref,\r\n            artigo_core: record.aggItem.artigo.core,\r\n            artigo_width: record.aggItem.artigo.lar,\r\n            qty_item: record.aggItem.qty_encomenda\r\n        };\r\n        const response = await fetchPost({ url: `${API_URL}/savetempordemfabrico/`, parameters: { type: \"paletizacao\", paletizacao_id, ofabrico_id, ofabrico_cod, artigo } });\r\n        if (response.data.status !== \"error\") {\r\n            parentReload({ agg_id: record.aggItem.id });\r\n            closeParent();\r\n        }\r\n        setSubmitting(false);\r\n        // const status = { error: [], warning: [], info: [], success: [] };\r\n        // const msgKeys = [\"start_date\", \"start_hour\", \"end_date\", \"end_hour\"];\r\n        // const { cliente_cod, cliente_nome, iorder, item, ofabrico, produto_id, item_id } = record;\r\n        // const { core_cod: { value: core_cod, label: core_des } = {} } = values;\r\n        // const { cortes_id, cortesordem_id } = form.getFieldsValue(true);\r\n        // let diff = {};\r\n        // const v = schema().custom((v, h) => {\r\n        //     const { start_date, start_hour, end_date, end_hour } = v;\r\n        //     diff = dateTimeDiffValidator(start_date, start_hour, end_date, end_hour);\r\n        //     if (diff.errors == true) {\r\n        //         return h.message(\"A Data de Fim tem de ser Maior que a Data de Início\", { key: \"start_date\", label: \"start_date\" })\r\n        //     }\r\n        // }).validate(values, { abortEarly: false });\r\n        // status.error = [...status.error, ...(v.error ? v.error?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        // status.warning = [...status.warning, ...(v.warning ? v.warning?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        // if (!v.error) { }\r\n        // if (status.error.length === 0) {\r\n        //     const response = await fetchPost({ url: `${API_URL}/savetempordemfabrico/`, parameters: { ...values, cliente_cod, cliente_nome, iorder, item, item_id, ofabrico, core_cod, core_des, produto_id, cortes_id, cortesordem_id } });\r\n        //     setResultMessage(response.data);\r\n        // }\r\n        // setFieldStatus(diff.fields);\r\n        // setFormStatus(status);\r\n    }\r\n\r\n\r\n    /*     useEffect(() => {\r\n            const cancelFetch = cancelToken();\r\n            if (\"paletizacao_id\" in changedValues) {\r\n                setLoading(true);\r\n                loadData({ paletizacao_id: changedValues.paletizacao_id, token: cancelFetch });\r\n            }\r\n            return (() => cancelFetch.cancel(\"Form Paletização Cancelled\"));\r\n        }, [changedValues]); */\r\n\r\n    const loadData = (data = {}, type = \"init\") => {\r\n        const { paletizacao_id, token } = data;\r\n        switch (type) {\r\n            case \"lookup\":\r\n                setLoading(true);\r\n                (async () => {\r\n                    setPaletizacoes(await loadPaletizacoesLookup({ artigo_cod: record.aggItem.item_cod, cliente_cod: record.aggItem.cliente_cod, token }));\r\n                    setLoading(false);\r\n                })();\r\n                break;\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    let _paletizacoes = paletizacoes;\r\n                    if (record.aggItem.item_cod) {\r\n                        _paletizacoes = await loadPaletizacoesLookup({ artigo_cod: record.aggItem.item_cod, cliente_cod: record.aggItem.cliente_cod, token });\r\n                        setPaletizacoes(_paletizacoes);\r\n                    }\r\n                    if (paletizacao_id) {\r\n                        const [paletizacao] = _paletizacoes.filter(v => v.id === paletizacao_id);\r\n                        const paletizacaoDetails = await getPaletizacaoDetails({ paletizacao_id, token });\r\n                        form.setFieldsValue({ ...paletizacao, paletizacao_id: paletizacao.id, paletizacao: [...paletizacaoDetails] });\r\n                    }\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    const onShowSchema = (newSchema = false, forInput = false) => {\r\n        const { cliente_cod, cliente_nome, item_cod, paletizacao_id } = record.aggItem;\r\n        if (newSchema) {\r\n            setShowSchema(prev => ({ ...prev, show: !prev.show, record: { cliente_cod, cliente_nome, artigo_cod: item_cod, paletizacao_id }, forInput }));\r\n        } else {\r\n            setShowSchema(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue(true) }, forInput }));\r\n        }\r\n    }\r\n\r\n    const onSubmit = useCallback(async () => {\r\n        setSubmitting(true);\r\n        form.submit();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <Drawer showWrapper={showSchema} setShowWrapper={setShowSchema} parentReload={loadData} />\r\n                <Form form={form} name={`form-of-paletizacao`} onFinish={onFinish} onValuesChange={onValuesChange}>\r\n                    <FormLayout\r\n                        id=\"LAY-PALETIZACAO\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            //wide: [3, 2, 1, '*'],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            addons: {}, //top|right|center|bottom|left\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        <FieldSet>\r\n                            <Toolbar\r\n                                style={{ width: \"100%\" }}\r\n                                left={\r\n                                    <FieldSet>\r\n                                        <Field name=\"paletizacao_id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Paletização\", pos: \"left\" }} addons={{\r\n                                            ...(form.getFieldValue(\"paletizacao_id\") && { right: <Button onClick={() => onShowSchema()} style={{ marginLeft: \"3px\" }} size=\"small\"><EditOutlined style={{ fontSize: \"16px\" }} /></Button> })\r\n                                        }}>\r\n                                            <SelectField allowClear size=\"small\" data={paletizacoes} keyField=\"id\" textField=\"designacao\"\r\n                                                optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ width: \"70px\" }}><b>{d[\"contentor_id\"]}</b></div><div style={{ flex: 1 }}>{d[textField]}</div><div style={{ width: \"20px\" }}>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                                            />\r\n                                        </Field>\r\n                                    </FieldSet>\r\n                                }\r\n                                right={<Button onClick={() => onShowSchema(true)}>Novo Esquema</Button>}\r\n                            />\r\n                        </FieldSet>\r\n                        <FieldSet>\r\n                            {(!loading && form.getFieldValue(\"paletizacao_id\")) && <FormPaletizacaoSchema record={form.getFieldsValue(true)} wrapForm={false} forInput={false} parentReload={loadData} />}\r\n                        </FieldSet>\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button disabled={submitting} onClick={onSubmit} type=\"primary\">Guardar</Button>\r\n                        {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </Spin>\r\n        </>\r\n    );\r\n}"],"names":["schema","keys","excludeKeys","getSchema","npaletes","Joi","positive","label","required","palete_maxaltura","precision","netiquetas_bobine","netiquetas_lote","netiquetas_final","folha_identificativa","min","cintas","valid","ncintas","is","then","paletizacao","unknown","SubFormPalete","form","field","remove","move","index","length","operation","forInput","useState","item","setItem","useEffect","key","getFieldValue","name","layout","wide","enabled","onClick","style","alignSelf","onChange","f","size","data","PALETIZACAO_ITEMS","keyField","textField","PALETE_SIZES","max","undefined","id","record","setFormTitle","parentRef","closeParent","parentReload","wrapForm","useContext","OFabricoContext","Form","loading","setLoading","submitting","setSubmitting","changedValues","setChangedValues","error","warning","info","success","formStatus","setFormStatus","guides","paletizacao_id","values","status","resultMessage","setResultMessage","init","title","cliente_nome","subTitle","artigo_cod","setFieldsValue","contentor_id","cintas_palete","onFinish","msgKeys","v","validate","abortEarly","details","filter","includes","context","fetchPost","url","API_URL","parameters","cliente_cod","response","onClose","onSubmit","useCallback","submit","result","successButtonOK","type","resetFields","successButtonClose","errorButtonOK","errorButtonClose","onValuesChange","allValues","component","width","padding","margin","overflow","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","top","right","center","bottom","left","fieldSet","text","CONTENTORES_OPTIONS","optionsRender","d","value","split","disabled","minWidth","shouldUpdate","prevValues","curValues","rule","getFieldsValue","CINTASPALETES_OPTIONS","fields","add","removeRow","fieldName","moveRow","from","to","item_id","item_paletesize","item_numbobines","PlusOutlined","map","SvgSchema","elId","current","Drawer","showWrapper","setShowWrapper","formTitle","iref","useRef","onVisible","prev","show","destroyOnClose","mask","setVisible","visible","bodyStyle","height","footer","ref","textAlign","FormPaletizacaoSchema","loadPaletizacoesLookup","token","sort","column","cancelToken","rows","getPaletizacaoDetails","direction","aggItem","showSchema","setShowSchema","paletizacoes","setPaletizacoes","item_cod","cancelFetch","loadData","cancel","ofabrico_id","tempof_id","ofabrico_cod","of_id","qty_encomenda","artigo","artigo_thickness","thickness","artigo_diam","diam_ref","artigo_core","core","artigo_width","lar","qty_item","agg_id","_paletizacoes","paletizacaoDetails","onShowSchema","newSchema","spinning","indicator","LoadingOutlined","fontSize","spin","tip","addons","marginLeft","EditOutlined","allowClear","display","flex"],"sourceRoot":""}