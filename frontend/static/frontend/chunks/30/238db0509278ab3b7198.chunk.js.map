{"version":3,"file":"chunks/30/238db0509278ab3b7198.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/currentline/FormMenuActions.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, Suspense, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon, SelectDebounceField } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport YScroll from \"components/YScroll\";\r\nimport { Button, Spin, Tag, List, Typography, Form, InputNumber, Input, Card, Collapse, DatePicker, Space, Alert } from \"antd\";\r\nconst { Title, Text } = Typography;\r\nconst { Panel } = Collapse;\r\nimport { LoadingOutlined, EditOutlined, PlusOutlined, EllipsisOutlined, SettingOutlined, PaperClipOutlined, HistoryOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, THICKNESS } from 'config';\r\nimport { remove } from 'ramda';\r\nimport { MdProductionQuantityLimits } from 'react-icons/md';\r\nimport { FaPallet, FaWarehouse, FaTape } from 'react-icons/fa';\r\nimport { Object } from 'sugar';\r\nimport { VerticalSpace } from 'components/formLayout';\r\nimport {Outlet,useNavigate} from \"react-router-dom\";\r\n\r\nconst FormLotes = React.lazy(() => import('./FormLotes'));\r\nconst FormFormulacao = React.lazy(() => import('./FormFormulacaoUpsert'));\r\nconst FormGamaOperatoria = React.lazy(() => import('./FormGamaOperatoriaUpsert'));\r\nconst FormSpecs = React.lazy(() => import('./FormSpecsUpsert'));\r\nconst FormCortes = React.lazy(() => import('./FormCortes'));\r\n\r\n\r\nconst StyledCard = styled(Card)`\r\n    .ant-card-body{\r\n        overflow-y:hidden;\r\n    }\r\n\r\n`;\r\n\r\nconst StyledCollapse = styled(Collapse)`\r\n\r\n    .ant-collapse-header{\r\n        background-color:#f5f5f5;\r\n        border-radius: 2px!important;\r\n        padding:1px 1px!important;\r\n    }\r\n    .ant-collapse-content > .ant-collapse-content-box{\r\n        padding:15px 15px!important;\r\n    }\r\n\r\n`;\r\n\r\nconst StyledGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    grid-gap: .5rem;\r\n    grid-auto-flow: dense;\r\n    align-items: start;\r\n    padding:4px 10px;\r\n`;\r\n\r\n\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst colorsOfs = ['#f5222d', '#fa8c16', '#fadb14', '#52c41a', '#13c2c2', '#1890ff', '#722ed1', '#eb2f96'];\r\n\r\nconst Drawer = ({ showWrapper, setShowWrapper, parentReload }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type={showWrapper.type}\r\n            mode={showWrapper.mode}\r\n            width={showWrapper?.width}\r\n            height={showWrapper?.height}\r\n            destroyOnClose={true}\r\n            mask={true}\r\n            /* style={{ maginTop: \"48px\" }} */\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            bodyStyle={{ height: \"100%\"/*  paddingBottom: 80 *//* , overflowY: \"auto\", minHeight: \"350px\", maxHeight: \"calc(100vh - 50px)\" */ }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n        >\r\n            <YScroll>\r\n                {showWrapper.idcard === \"lotes\" && <Suspense fallback={<></>}><FormLotes setFormTitle={setFormTitle} record={showWrapper.record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.idcard === \"formulacao\" && <Suspense fallback={<></>}><FormFormulacao setFormTitle={setFormTitle} record={showWrapper.record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.idcard === \"gamaoperatoria\" && <Suspense fallback={<></>}><FormGamaOperatoria setFormTitle={setFormTitle} record={showWrapper.record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.idcard === \"especificacoes\" && <Suspense fallback={<></>}><FormSpecs setFormTitle={setFormTitle} record={showWrapper.record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.idcard === \"cortes\" && <Suspense fallback={<></>}><FormCortes setFormTitle={setFormTitle} record={showWrapper.record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.idcard === \"position\" && <div>ssssssssssssssssssssssssssssssss</div>}\r\n                {/*                 {!showWrapper.type && <FormAggUpsert setFormTitle={setFormTitle} parentRef={iref} closeParent={onVisible} parentReload={parentReload} />}\r\n                {showWrapper.idcard === \"paletes_stock\" && <Suspense fallback={<></>}><FormPaletesStockUpsert setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.idcard === \"schema\" && <Suspense fallback={<></>}><FormPaletizacao setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.idcard === \"settings\" && <Suspense fallback={<></>}><FormSettings setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.idcard === \"attachments\" && <Suspense fallback={<></>}><FormAttachments setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>} */}\r\n            </YScroll>\r\n        </WrapperForm>\r\n    );\r\n}\r\n\r\nconst loadCurrentSettings = async (aggId, token) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/currentsettingsget/`, filter: { aggId }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nconst CardAgg = ({ ofItem, paletesStock, setShowForm }) => {\r\n    const { of_cod, cliente_nome, produto_cod, item_des,color } = ofItem;\r\n    const totais = useRef({});\r\n\r\n    // const paletes = JSON.parse(aggItem?.n_paletes);\r\n    const onAction = (idcard) => {\r\n        switch (idcard) {\r\n            case 'paletes_stock':\r\n                setShowForm(prev => ({ ...prev, idcard, show: !prev.show, record: { /* aggItem, */ ofItem, draft_of_id: ofItem.draft_of_id }, mode: \"none\", type: \"modal\", width: \"300px\", height: \"300px\" }));\r\n                break;\r\n            case 'schema':\r\n                setShowForm(prev => ({ ...prev, idcard, show: !prev.show, record: { /* aggItem, */ ofItem, draft_of_id: ofItem.draft_of_id }, mode: \"none\", type: \"modal\", width: \"300px\", height: \"300px\" }));\r\n                break;\r\n            case 'settings':\r\n                setShowForm(prev => ({ ...prev, idcard, show: !prev.show, record: { /* aggItem, */ ofItem, draft_of_id: ofItem.draft_of_id }, mode: \"none\", type: \"modal\", width: \"300px\", height: \"300px\" }));\r\n                break;\r\n            case 'attachments':\r\n                setShowForm(prev => ({ ...prev, idcard, show: !prev.show, record: { /* aggItem, */ ofItem, draft_of_id: ofItem.draft_of_id }, mode: \"none\", type: \"modal\", width: \"300px\", height: \"300px\" }));\r\n                break;\r\n            case 'position':\r\n                setShowForm(prev => ({ ...prev, idcard, show: !prev.show, record: { /* aggItem, */ ofItem, draft_of_id: ofItem.draft_of_id }, mode: \"none\", type: \"modal\", width: \"300px\", height: \"300px\" }));\r\n                break;\r\n        }\r\n    }\r\n\r\n    const computeQty = () => {\r\n        const ps = paletesStock.find(v => v.of_id = ofItem.of_id);\r\n        const total = { n_paletes: ofItem.n_paletes_total, linear_meters: ofItem.linear_meters, qty_encomenda: ofItem.qty_encomenda, paletes_stock: (ps.paletes ? ps.paletes.length : 0) };\r\n        total.paletes_produzir = total.n_paletes - total.paletes_stock;\r\n        return total;\r\n    }\r\n\r\n    useEffect(() => {\r\n        totais.current = computeQty();\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            <StyledCard hoverable\r\n                style={{ width: '100%', height: '100%'/* , height:\"300px\", maxHeight:\"400px\", overflowY:\"auto\" */ }}\r\n                headStyle={{ backgroundColor: \"#002766\", color: \"#fff\" }}\r\n                title={<div>\r\n                    <div style={{ fontWeight: 700, fontSize: \"12px\", display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n                        <div>{of_cod}</div>\r\n                    </div>\r\n                    <div style={{ color: \"#fff\", fontSize: \".6rem\" }}>{cliente_nome}</div>\r\n                </div>} size=\"small\"\r\n                actions={[\r\n                    <div key=\"settings\" onClick={() => onAction('settings')} title=\"Outras definições\">Definições</div>,\r\n                    <div key=\"schema\" onClick={() => onAction('schema')} title=\"Paletização (Esquema)\">Paletização</div>,\r\n                    <div key=\"paletes\" onClick={() => onAction('paletes_stock')}>Stock</div>,\r\n                    <div key=\"attachments\" onClick={() => onAction('attachments')}><span><PaperClipOutlined />Anexos</span></div>\r\n                ]}\r\n            >\r\n                <YScroll>\r\n                    <Text strong>{item_des}</Text>\r\n                    <div style={{ marginTop: \"10px\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <div>Encomenda</div>\r\n                        <div style={{ minWidth: \"120px\", fontWeight: 700, fontSize: \"12px\" }}>{totais.current.qty_encomenda} m&#178;</div>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <div>Paletes Total</div>\r\n                        <div style={{ minWidth: \"120px\", fontWeight: 700, fontSize: \"12px\" }}>{totais.current.n_paletes}</div>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <div>Paletes Stock</div>\r\n                        <div style={{ minWidth: \"120px\", fontWeight: 700, fontSize: \"12px\" }}>{totais.current.paletes_stock}</div>\r\n                    </div>\r\n                    <div style={{ borderTop: \"solid 1px #000\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <div>Paletes a Produzir</div>\r\n                        <div style={{ minWidth: \"120px\", fontWeight: 700, fontSize: \"12px\" }}>{totais.current.paletes_produzir}</div>\r\n                    </div>\r\n                </YScroll>\r\n\r\n\r\n            </StyledCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CardPlanificacao = ({ menuItem, record }) => {\r\n    const { planificacao, ofs, paletesstock } = record;\r\n    const totais = useRef({});\r\n\r\n    const computeQty = () => {\r\n        const paletes_stock = paletesstock.reduce((ac, v) => {\r\n            ac += (v.paletes) ? v.paletes.length : 0;\r\n            return ac;\r\n        }, 0);\r\n\r\n        const total = ofs.reduce((ac, v) => {\r\n            ac.n_paletes += v.n_paletes_total;\r\n            ac.linear_meters += v.linear_meters;\r\n            ac.qty_encomenda += v.qty_encomenda;\r\n            return ac;\r\n        }, { n_paletes: 0, linear_meters: 0, qty_encomenda: 0, paletes_stock });\r\n        total.paletes_produzir = total.n_paletes - total.paletes_stock;\r\n        return total;\r\n    }\r\n\r\n    useEffect(() => {\r\n        totais.current = computeQty();\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ height: '100%', ...menuItem.span && { gridColumn: `span ${menuItem.span}` } }}>\r\n            <Card hoverable\r\n                style={{ width: '100%', height: '100%', textAlign: 'center'/* , height:\"300px\", maxHeight:\"400px\", overflowY:\"auto\" */ }}\r\n            >\r\n                <div>\r\n                    <div>Horas de Produção Previstas</div>\r\n                </div>\r\n                <div style={{ fontWeight: 700, fontSize: \"16px\" }}>{planificacao.horas_previstas_producao}H</div>\r\n\r\n                <div style={{ display: \"flex\" }}>\r\n                    <div style={{ flex: 1 }}>Início</div>\r\n                    <div style={{ flex: 1 }}>Fim</div>\r\n                </div>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <div style={{ flex: 1, fontWeight: 600 }}>{planificacao.start_prev_date}</div>\r\n                    <div style={{ flex: 1, fontWeight: 600 }}>{planificacao.end_prev_date}</div>\r\n                </div>\r\n\r\n                <div style={{ marginTop: \"10px\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <div>Encomenda</div>\r\n                    <div style={{ minWidth: \"120px\", fontWeight: 700, fontSize: \"14px\" }}>{totais.current.qty_encomenda} m&#178;</div>\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <div>Paletes Total</div>\r\n                    <div style={{ minWidth: \"120px\", fontWeight: 700, fontSize: \"14px\" }}>{totais.current.n_paletes}</div>\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <div>Paletes Stock</div>\r\n                    <div style={{ minWidth: \"120px\", fontWeight: 700, fontSize: \"14px\" }}>{totais.current.paletes_stock}</div>\r\n                </div>\r\n                <div style={{ borderTop: \"solid 1px #000\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <div>Paletes a Produzir</div>\r\n                    <div style={{ minWidth: \"120px\", fontWeight: 700, fontSize: \"14px\" }}>{totais.current.paletes_produzir}</div>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CardLotes = ({ menuItem, record, setShowForm }) => {\r\n    const { formulacao, cores, nonwovens } = record;\r\n\r\n    const onEdit = () => {\r\n        setShowForm(prev => ({ ...prev, idcard: menuItem.idcard, show: !prev.show, record, mode: \"fullscreen\", type: \"modal\" }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"ENTREI LOTES\", record)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ height: '100%', ...menuItem.span && { gridColumn: `span ${menuItem.span}` } }}>\r\n            <Card hoverable\r\n                style={{ width: '100%', height: '100%', textAlign: 'center'/* , height:\"300px\", maxHeight:\"400px\", overflowY:\"auto\" */ }}\r\n                title={<div style={{ fontWeight: 700, fontSize: \"16px\" }}>{menuItem.title}</div>}\r\n                extra={<Button onClick={onEdit} icon={<EditOutlined />} />}\r\n            >\r\n\r\n                {/* <div>\r\n                    <div>Horas de Produção Previstas</div>\r\n                </div>\r\n                <div style={{ fontWeight: 700, fontSize: \"16px\" }}>{planificacao.horas_previstas_producao}H</div>\r\n\r\n                <div style={{ display: \"flex\" }}>\r\n                    <div style={{ flex: 1 }}>Início</div>\r\n                    <div style={{ flex: 1 }}>Fim</div>\r\n                </div>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <div style={{ flex: 1, fontWeight: 600 }}>{planificacao.start_prev_date}</div>\r\n                    <div style={{ flex: 1, fontWeight: 600 }}>{planificacao.end_prev_date}</div>\r\n                </div> */}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CardFormulacao = ({ menuItem, record, setShowForm }) => {\r\n    const { formulacao } = record;\r\n\r\n    useEffect(() => {\r\n        console.log(\"ENTREI NA FORMULAÇÃO\", record)\r\n    }, []);\r\n\r\n    const onEdit = () => {\r\n        setShowForm(prev => ({ ...prev, idcard: menuItem.idcard, show: !prev.show, record, mode: \"maximized\", type: \"modal\", width: null, height: null }))\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '100%', ...menuItem.span && { gridColumn: `span ${menuItem.span}` } }}>\r\n            <Card hoverable\r\n                style={{ width: '100%', height: '100%', textAlign: 'center'/* , height:\"300px\", maxHeight:\"400px\", overflowY:\"auto\" */ }}\r\n                title={<div style={{ fontWeight: 700, fontSize: \"16px\" }}>{menuItem.title}</div>}\r\n                extra={<Space><Button onClick={onEdit} icon={<EditOutlined />} /><Button onClick={onEdit} icon={<HistoryOutlined />} /></Space>}\r\n                bodyStyle={{ height: \"200px\", maxHeight: \"400px\", overflow: \"hidden\" }}\r\n            >\r\n                <YScroll>\r\n                    <FormFormulacao record={record} forInput={false} />\r\n                </YScroll>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CardGamaOperatoria = ({ menuItem, record, setShowForm }) => {\r\n    const { gamaoperatoria } = record;\r\n\r\n    useEffect(() => {\r\n        console.log(\"ENTREI NA GAMA OPERATORIA\", record)\r\n    }, []);\r\n\r\n    const onEdit = () => {\r\n        setShowForm(prev => ({ ...prev, idcard: menuItem.idcard, show: !prev.show, record, mode: \"normal\", type: 'modal', width: null, height: null }))\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '100%', ...menuItem.span && { gridColumn: `span ${menuItem.span}` } }}>\r\n            <Card hoverable\r\n                style={{ width: '100%', height: '100%', textAlign: 'center'/* , height:\"300px\", maxHeight:\"400px\", overflowY:\"auto\" */ }}\r\n                title={<div style={{ fontWeight: 700, fontSize: \"16px\" }}>{menuItem.title}</div>}\r\n                extra={<Space><Button onClick={onEdit} icon={<EditOutlined />} /><Button onClick={onEdit} icon={<HistoryOutlined />} /></Space>}\r\n                bodyStyle={{ height: \"200px\", maxHeight: \"400px\", overflow: \"hidden\" }}\r\n            >\r\n                <YScroll>\r\n                    <FormGamaOperatoria record={record} forInput={false} />\r\n                </YScroll>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CardArtigoSpecs = ({ menuItem, record, setShowForm }) => {\r\n    const { artigospecs } = record;\r\n\r\n    useEffect(() => {\r\n        console.log(\"ENTREI NAs ESPECIFICAÇÕES\", record)\r\n    }, []);\r\n\r\n    const onEdit = () => {\r\n        setShowForm(prev => ({ ...prev, idcard: menuItem.idcard, show: !prev.show, record, mode: \"normal\", type: 'modal', width: null, height: null }))\r\n    };\r\n\r\n    return (\r\n        <div style={{ height: '100%', ...menuItem.span && { gridColumn: `span ${menuItem.span}` } }}>\r\n            <Card hoverable\r\n                style={{ width: '100%', height: '100%', textAlign: 'center'/* , height:\"300px\", maxHeight:\"400px\", overflowY:\"auto\" */ }}\r\n                title={<div style={{ fontWeight: 700, fontSize: \"16px\" }}>{menuItem.title}</div>}\r\n                extra={<Space><Button onClick={onEdit} icon={<EditOutlined />} /><Button onClick={onEdit} icon={<HistoryOutlined />} /></Space>}\r\n                bodyStyle={{ height: \"200px\", maxHeight: \"400px\", overflow: \"hidden\" }}\r\n            >\r\n                <YScroll>\r\n                    <FormSpecs record={record} forInput={false} />\r\n                </YScroll>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CardCortes = ({ menuItem, record, setShowForm }) => {\r\n    const { formulacao } = record;\r\n\r\n    useEffect(() => {\r\n        console.log(\"ENTREI NOS CORTES\", record)\r\n    }, []);\r\n\r\n    const onEdit = () => {\r\n        setShowForm(prev => ({ ...prev, idcard: menuItem.idcard, show: !prev.show, record, mode: \"maximized\", type: \"modal\", width: null, height: null }))\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '100%', ...menuItem.span && { gridColumn: `span ${menuItem.span}` } }}>\r\n            <Card hoverable\r\n                style={{ width: '100%', height: '100%', textAlign: 'center'/* , height:\"300px\", maxHeight:\"400px\", overflowY:\"auto\" */ }}\r\n                title={<div style={{ fontWeight: 700, fontSize: \"16px\" }}>{menuItem.title}</div>}\r\n                extra={<Space><Button onClick={onEdit} icon={<EditOutlined />} /><Button onClick={onEdit} icon={<HistoryOutlined />} /></Space>}\r\n                bodyStyle={{ height: \"200px\", maxHeight: \"400px\", overflow: \"hidden\" }}\r\n            >\r\n                <YScroll>\r\n                    <FormCortes record={record} forInput={false} />\r\n                </YScroll>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CardOperacoes = ({ menuItem, record, setShowForm, parentReload }) => {\r\n    const { status } = record;\r\n\r\n    const onEdit = () => {\r\n        setShowForm(prev => ({ ...prev, idcard: menuItem.idcard, show: !prev.show, record, mode: \"fullscreen\", type: \"modal\" }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"ENTREI NAS OPERAÇÕES\", record)\r\n    }, [])\r\n\r\n    const changeStatus = async (status) => {\r\n        const response = await fetchPost({ url: `${API_URL}/changecurrsettings/`, parameters: { id: record.id, status, agg_of_id: record.agg_of_id } });\r\n        if (response.data.status !== \"error\") {\r\n            parentReload({ aggId: record.agg_of_id });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '100%', ...menuItem.span && { gridColumn: `span ${menuItem.span}` } }}>\r\n            <Card hoverable\r\n                style={{ width: '100%', height: '100%', textAlign: 'center'/* , height:\"300px\", maxHeight:\"400px\", overflowY:\"auto\" */ }}\r\n                title={<div style={{ fontWeight: 700, fontSize: \"16px\" }}>{menuItem.title}</div>}\r\n            >\r\n                {record.status == 1 &&\r\n                    <>\r\n                        <Button block size=\"large\" style={{ background: \"#389e0d\", color: \"#fff\", fontWeight: 700 }} onClick={() => changeStatus(3)}>Iniciar Produção</Button>\r\n                        <VerticalSpace height=\"5px\" />\r\n                        <Button block size=\"large\" style={{ background: \"#fa8c16\", color: \"#fff\", fontWeight: 700 }} onClick={() => changeStatus(0)}>Refazer Planeamento</Button>\r\n                    </>\r\n                }\r\n                {record.status == 3 &&\r\n                    <>\r\n                        <Button block size=\"large\" style={{ background: \"red\", color: \"#fff\", fontWeight: 700 }} onClick={() => changeStatus(1)}>Parar/Suspender Produção</Button>\r\n                    </>\r\n                }\r\n                {/* <div>\r\n                    <div>Horas de Produção Previstas</div>\r\n                </div>\r\n                <div style={{ fontWeight: 700, fontSize: \"16px\" }}>{planificacao.horas_previstas_producao}H</div>\r\n\r\n                <div style={{ display: \"flex\" }}>\r\n                    <div style={{ flex: 1 }}>Início</div>\r\n                    <div style={{ flex: 1 }}>Fim</div>\r\n                </div>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <div style={{ flex: 1, fontWeight: 600 }}>{planificacao.start_prev_date}</div>\r\n                    <div style={{ flex: 1, fontWeight: 600 }}>{planificacao.end_prev_date}</div>\r\n                </div> */}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst menuItems = [\r\n    {\r\n        idcard: \"planificacao\",\r\n        title: \"Planificação\",\r\n    }, {\r\n        idcard: \"lotes\",\r\n        title: \"Lotes de Matérias Primas\"\r\n    }, {\r\n        idcard: \"especificacoes\",\r\n        title: \"Especificações\"\r\n    }, {\r\n        idcard: \"formulacao\",\r\n        title: \"Formulação\",\r\n        span: 3\r\n    }, {\r\n        idcard: \"operacoes\",\r\n        title: \"Operações\"\r\n    }, {\r\n        idcard: \"gamaoperatoria\",\r\n        title: \"Gama Operatória\",\r\n        span: 2\r\n    }, {\r\n        idcard: \"cortes\",\r\n        title: \"Cortes\",\r\n        span: 3\r\n    }\r\n];\r\n\r\nexport default ({ aggId }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [showForm, setShowForm] = useState({ show: false, type: 'modal', mode: \"fullscreen\" });\r\n    const [guides, setGuides] = useState(false);\r\n    const [currentSettings, setCurrentSettings] = useState({});\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        /*         console.log(\"FORM-AGG->\", ctx) */\r\n        const cancelFetch = cancelToken();\r\n        loadData({ aggId, token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Actions Menu Cancelled\"));\r\n    }, []);\r\n\r\n    const loadData = (data = {}, type = \"init\") => {\r\n        const { aggId, token } = data;\r\n        switch (type) {\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    let raw = await loadCurrentSettings(aggId, token);\r\n                    console.log(\"CURRENT--SETTINGS\", raw[0]);\r\n                    const formulacao = JSON.parse(raw[0].formulacao);\r\n                    const gamaoperatoria = JSON.parse(raw[0].gamaoperatoria);\r\n                    const nonwovens = JSON.parse(raw[0].nonwovens);\r\n                    const artigospecs = JSON.parse(raw[0].artigospecs);\r\n                    const cortes = JSON.parse(raw[0].cortes);\r\n                    const cortesordem = JSON.parse(raw[0].cortesordem);\r\n                    const cores = JSON.parse(raw[0].cores);\r\n                    const emendas = JSON.parse(raw[0].emendas);\r\n                    const paletesstock = JSON.parse(raw[0].paletesstock);\r\n                    const ofs = JSON.parse(raw[0].ofs);\r\n                    const paletizacao = JSON.parse(raw[0].paletizacao);\r\n                    const lotes = raw[0]?.lotes ? JSON.parse(raw[0].lotes) : [];\r\n\r\n                    for (const [idx, v] of ofs.entries()) {\r\n                        v['color'] = colorsOfs[idx]\r\n                    }\r\n\r\n                    const quantity = ofs.reduce((basket, ofitem) => {\r\n                        basket[\"square_meters\"] = (!basket?.square_meters) ? ofitem.qty_encomenda : basket.square_meters + ofitem.qty_encomenda;\r\n                        basket[\"linear_meters\"] = (!basket?.linear_meters) ? ofitem.linear_meters : basket.linear_meters + ofitem.linear_meters;\r\n                        basket[\"n_paletes\"] = (!basket?.n_paletes) ? ofitem.n_paletes_total : basket.n_paletes + ofitem.n_paletes_total;\r\n                        return basket;\r\n                    }, {});\r\n                    setCurrentSettings({\r\n                        id: raw[0].id, user_id: raw[0].user_id, status: raw[0].status, agg_of_id: raw[0].agg_of_id,\r\n                        quantity,\r\n                        planificacao: {\r\n                            start_prev_date: dayjs(raw[0].start_prev_date, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD HH:mm'),\r\n                            end_prev_date: dayjs(raw[0].end_prev_date, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD HH:mm'), horas_previstas_producao: raw[0].horas_previstas_producao\r\n                        },\r\n                        produto: { produto_id: raw[0].produto_id, produto_cod: raw[0].produto_cod, gsm: raw[0].gsm },\r\n                        sentido_enrolamento: raw[0].sentido_enrolamento, observacoes: raw[0].observacoes, formulacao, gamaoperatoria, paletesstock,\r\n                        nonwovens, artigospecs, cortes, cortesordem, cores, emendas, ofs, paletizacao, status: raw[0].status, lotes\r\n                    });\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    // const onShowForm = (/* newForm = false */) => {\r\n    //     setShowForm(prev => ({ ...prev, type: 'modal', show: !prev.show, record: {} }));\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <Drawer showWrapper={showForm} setShowWrapper={setShowForm} parentReload={loadData} />\r\n\r\n                {/*                     <FormLayout id=\"LAY-MENU-ACTIONS-0\" style={{ width: \"500px\", padding: \"0px\" }} field={{label:{enabled:false}}}>\r\n                        <FieldSet margin={false} field={{ wide: [8,8] }}>\r\n                            <FieldItem><DatePicker showTime size=\"small\" format=\"YYYY-MM-DD HH:mm\" /></FieldItem>\r\n                            <FieldItem><DatePicker showTime size=\"small\" format=\"YYYY-MM-DD HH:mm\" /></FieldItem>\r\n                        </FieldSet>\r\n                    </FormLayout> */}\r\n                {currentSettings.observacoes &&\r\n                    <div style={{ padding: \"10px\" }}>\r\n                        <Alert\r\n                            style={{ width: \"100%\" }}\r\n                            message=\"Observações\"\r\n                            description={currentSettings.observacoes}\r\n                            type=\"info\"\r\n                        />\r\n                    </div>\r\n                }\r\n                {Object.keys(currentSettings).length > 0 && <StyledGrid>\r\n                    {menuItems.map((menuItem, idx) => {\r\n                        const { planificacao, formulacao, cores, nonwovens, artigospecs, produto, quantity, gamaoperatoria, lotes, cortes, cortesordem, ofs, paletesstock } = currentSettings;\r\n                        switch (menuItem.idcard) {\r\n                            case \"planificacao\":\r\n                                return (<CardPlanificacao key={`ct-${menuItem.idcard}-${idx}`} menuItem={menuItem} record={{ id: currentSettings.id, planificacao, ofs, paletesstock }} setShowForm={setShowForm} />);\r\n                            case \"lotes\":\r\n                                return (<CardLotes key={`ct-${menuItem.idcard}-${idx}`} menuItem={menuItem} record={{ id: currentSettings.id, formulacao, nonwovens, produto, quantity, lotes }} setShowForm={setShowForm} />);\r\n                            case \"formulacao\":\r\n                                return (<CardFormulacao key={`ct-${menuItem.idcard}-${idx}`} menuItem={menuItem} record={{ id: currentSettings.id, formulacao }} setShowForm={setShowForm} />);\r\n                            case \"gamaoperatoria\":\r\n                                return (<CardGamaOperatoria key={`ct-${menuItem.idcard}-${idx}`} menuItem={menuItem} record={{ id: currentSettings.id, gamaoperatoria }} setShowForm={setShowForm} />);\r\n                            case \"especificacoes\":\r\n                                return (<CardArtigoSpecs key={`ct-${menuItem.idcard}-${idx}`} menuItem={menuItem} record={{ id: currentSettings.id, artigospecs }} setShowForm={setShowForm} />);\r\n                            case \"cortes\":\r\n                                return (<CardCortes key={`ct-${menuItem.idcard}-${idx}`} menuItem={menuItem} record={{ id: currentSettings.id, cortes, cortesordem, agg_of_id: currentSettings.agg_of_id, ofs }} setShowForm={setShowForm} />);\r\n                            case \"operacoes\":\r\n                                return (<CardOperacoes key={`ct-${menuItem.idcard}-${idx}`} menuItem={menuItem} record={{ id: currentSettings.id, agg_of_id: currentSettings.agg_of_id, status: currentSettings.status }} setShowForm={setShowForm} parentReload={loadData} />);\r\n                            default: <React.Fragment key={`ct-${idx}`} />\r\n                        }\r\n                    })}\r\n                </StyledGrid>}\r\n\r\n                {Object.keys(currentSettings).length > 0 && <StyledGrid style={{ marginTop: \"15px\" }}>\r\n                    {currentSettings.ofs.map((ofItem, idx) => {\r\n                        return (<CardAgg key={`ct-agg-${idx}`} ofItem={ofItem} setShowForm={setShowForm} paletesStock={currentSettings.paletesstock} />)\r\n                    })}\r\n                </StyledGrid>}\r\n\r\n\r\n\r\n            </Spin>\r\n        </>\r\n    );\r\n}"],"names":["Typography","Text","FormLotes","Collapse","React","FormFormulacao","FormGamaOperatoria","FormSpecs","FormCortes","StyledCard","styled","Card","StyledGrid","colorsOfs","Drawer","showWrapper","setShowWrapper","parentReload","useState","formTitle","setFormTitle","iref","useRef","onVisible","prev","show","title","subTitle","type","mode","width","height","destroyOnClose","mask","setVisible","visible","bodyStyle","footer","ref","id","style","textAlign","idcard","Suspense","fallback","record","parentRef","closeParent","loadCurrentSettings","aggId","token","fetchPost","url","API_URL","filter","sort","cancelToken","rows","data","CardAgg","ofItem","paletesStock","setShowForm","of_cod","cliente_nome","item_des","produto_cod","totais","color","onAction","draft_of_id","useEffect","ps","total","current","find","v","of_id","n_paletes","n_paletes_total","linear_meters","qty_encomenda","paletes_stock","paletes","length","paletes_produzir","hoverable","headStyle","backgroundColor","fontWeight","fontSize","display","flexDirection","justifyContent","size","actions","key","onClick","strong","marginTop","minWidth","borderTop","CardPlanificacao","menuItem","planificacao","ofs","paletesstock","reduce","ac","span","gridColumn","horas_previstas_producao","flex","start_prev_date","end_prev_date","CardLotes","formulacao","cores","nonwovens","extra","icon","CardFormulacao","onEdit","maxHeight","overflow","forInput","CardGamaOperatoria","gamaoperatoria","CardArtigoSpecs","artigospecs","CardCortes","CardOperacoes","status","changeStatus","parameters","agg_of_id","block","background","menuItems","loading","setLoading","showForm","currentSettings","setCurrentSettings","cancelFetch","loadData","cancel","raw","JSON","parse","cortes","cortesordem","emendas","paletizacao","lotes","entries","idx","quantity","basket","ofitem","square_meters","user_id","dayjs","format","produto","produto_id","gsm","sentido_enrolamento","observacoes","spinning","indicator","spin","tip","padding","message","description","Object","map"],"sourceRoot":""}