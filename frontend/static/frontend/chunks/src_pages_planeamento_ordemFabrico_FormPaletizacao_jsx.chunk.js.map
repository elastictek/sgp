{"version":3,"file":"chunks/src_pages_planeamento_ordemFabrico_FormPaletizacao_jsx.chunk.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMwC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAOC,WAAP,EAAuB;AAClC,SAAO7B,iEAAS,CAAC,EAAD,EAAK4B,IAAL,EAAWC,WAAX,CAAT,CAAiCC,OAAjC,CAAyC,IAAzC,CAAP;AACH,CAFD;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAmD;AAAA,MAAhDC,WAAgD,QAAhDA,WAAgD;AAAA,MAAnCC,cAAmC,QAAnCA,cAAmC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAC9D,kBAAkC7C,gDAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAO8C,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,IAAI,GAAG9C,8CAAM,EAAnB;AACA,4BAAwByC,WAAxB,CAAQM,MAAR;AAAA,MAAQA,MAAR,oCAAiB,EAAjB;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBN,IAAAA,cAAc,CAAC,UAAAO,IAAI;AAAA,6CAAUA,IAAV;AAAgBC,QAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAA5B;AAAA,KAAL,CAAd;AACH,GAFD;;AAGA,sBACI,kDAAC,+DAAD;AACI,SAAK,eAAE,kDAAC,6DAAD;AAAW,WAAK,EAAEN,SAAS,CAACO,KAA5B;AAAmC,cAAQ,EAAEP,SAAS,CAACQ;AAAvD,MADX;AAEI,QAAI,EAAC,QAFT;AAGI,kBAAc,EAAE,IAHpB,CAII;AAJJ;AAKI,QAAI,EAAE;AACN;AANJ;AAOI,cAAU,EAAEJ,SAPhB;AAQI,WAAO,EAAEP,WAAW,CAACS,IARzB;AASI,SAAK,EAAE,GATX;AAUI,aAAS,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAQ;;AAAwB;;AAA1C,KAVf;AAWI,UAAM,eAAE;AAAK,SAAG,EAAEP,IAAV;AAAgB,QAAE,EAAC,cAAnB;AAAkC,WAAK,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb;AAAzC;AAXZ,kBAaI,kDAAC,iFAAD;AAAuB,gBAAY,EAAET,YAArC;AAAmD,UAAM,EAAEE,MAA3D;AAAmE,aAAS,EAAED,IAA9E;AAAoF,eAAW,EAAEE,SAAjG;AAA4G,gBAAY,EAAEL;AAA1H,IAbJ,CADJ;AAiBH,CAxBD;;AA0BA,IAAMY,sBAAsB;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,UAAT,SAASA,UAAT,EAAqBC,WAArB,SAAqBA,WAArB,EAAkCC,KAAlC,SAAkCA,KAAlC;AAAA;AAAA,mBACMnD,uDAAS,CAAC;AAAEoD,cAAAA,GAAG,YAAKjD,4CAAL,yBAAL;AAAyCkD,cAAAA,MAAM,EAAE;AAAEJ,gBAAAA,UAAU,EAAVA,UAAF;AAAcC,gBAAAA,WAAW,EAAXA;AAAd,eAAjD;AAA8EI,cAAAA,IAAI,EAAE,CAAC;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAD,EAA6B;AAAEA,gBAAAA,MAAM,EAAE;AAAV,eAA7B,CAApF;AAA4ItD,cAAAA,WAAW,EAAEkD;AAAzJ,aAAD,CADf;;AAAA;AAAA;AACXK,YAAAA,IADW,oBACnBC,IADmB,CACXD,IADW;AAAA,6CAEpBA,IAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBR,sBAAsB;AAAA;AAAA;AAAA,GAA5B;;AAIA,IAAMU,qBAAqB;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,cAAT,SAASA,cAAT,EAAyBR,KAAzB,SAAyBA,KAAzB;;AAAA,gBACrBQ,cADqB;AAAA;AAAA;AAAA;;AAAA,8CAEf,EAFe;;AAAA;AAAA;AAAA,mBAIO3D,uDAAS,CAAC;AAAEoD,cAAAA,GAAG,YAAKjD,4CAAL,4BAAL;AAA4CkD,cAAAA,MAAM,EAAE;AAAEM,gBAAAA,cAAc,EAAdA;AAAF,eAApD;AAAwEL,cAAAA,IAAI,EAAE,CAAC;AAAEC,gBAAAA,MAAM,EAAE,YAAV;AAAwBK,gBAAAA,SAAS,EAAE;AAAnC,eAAD,CAA9E;AAA6H3D,cAAAA,WAAW,EAAEkD;AAA1I,aAAD,CAJhB;;AAAA;AAAA;AAIVK,YAAAA,IAJU,qBAIlBC,IAJkB,CAIVD,IAJU;AAAA,8CAKnBA,IALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBE,qBAAqB;AAAA;AAAA;AAAA,GAA3B;;AAQA,IAAMG,KAAK,GAAG,SAARA,KAAQ,CAACC,EAAD,EAAQ;AAClB,MAAIA,EAAJ,EAAQ;AACJ,WAAO;AAAEC,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,MAAM,EAAE;AAAEF,QAAAA,EAAE,EAAFA;AAAF;AAAzB,KAAP;AACH;;AACD,SAAO;AAAEC,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAAP;AACH,CALD;;AAOA,iEAAe,iBAA8F;AAAA,MAA3FxB,MAA2F,SAA3FA,MAA2F;AAAA,MAAnFF,YAAmF,SAAnFA,YAAmF;AAAA,MAArE2B,SAAqE,SAArEA,SAAqE;AAAA,MAA1DC,WAA0D,SAA1DA,WAA0D;AAAA,MAA7C9B,YAA6C,SAA7CA,YAA6C;;AACzG;AACA,sBAAehB,qDAAA,EAAf;AAAA;AAAA,MAAOgD,IAAP;;AACA,mBAA4B7E,gDAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAO8E,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA8B/E,gDAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOgF,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAoCjF,gDAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOkF,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAkCnF,gDAAQ,CAACsE,KAAK,CAACrB,MAAM,CAACmC,OAAP,CAAehB,cAAhB,CAAN,CAA1C;AAAA;AAAA,MAAOiB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAAoCtF,gDAAQ,CAAC;AAAEoD,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA5C;AAAA;AAAA,MAAOmC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,oBAAwCxF,gDAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOyF,YAAP;AAAA,MAAqBC,eAArB;;AACA,oBAA0C1F,gDAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAO2F,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAA0C5F,gDAAQ,CAAC;AAAE6F,IAAAA,MAAM,EAAE;AAAV,GAAD,CAAlD;AAAA;AAAA,MAAOC,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACdjD,IAAAA,YAAD,IAAkBA,YAAY,CAAC;AAAEM,MAAAA,KAAK,yCAA4BJ,MAAM,CAACmC,OAAP,CAAea,YAA3C,CAAP;AAAkE3C,MAAAA,QAAQ,YAAKL,MAAM,CAACmC,OAAP,CAAec,QAApB;AAA1E,KAAD,CAA9B;AACH,GAFD;;AAIAnG,EAAAA,iDAAS,CAAC,YAAM;AACZoG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBvB,IAAI,CAACwB,cAAL,CAAoB,IAApB,CAApB;AACAL,IAAAA,IAAI;AACP,GAHQ,EAGN,EAHM,CAAT;AAMAjG,EAAAA,iDAAS,CAAC,YAAM;AACZ,QAAMuG,WAAW,GAAG5F,yDAAW,EAA/B;AACA6F,IAAAA,QAAQ,CAAC;AAAEnC,MAAAA,cAAc,EAAI,oBAAoBuB,aAArB,GAAsCA,aAAa,CAACvB,cAApD,GAAqEnB,MAAM,CAACmC,OAAP,CAAehB,cAAvG;AAAwHR,MAAAA,KAAK,EAAE0C;AAA/H,KAAD,CAAR;AACA,WAAQ;AAAA,aAAMA,WAAW,CAACE,MAAZ,CAAmB,4BAAnB,CAAN;AAAA,KAAR;AACH,GAJQ,EAIN,CAACb,aAAD,CAJM,CAAT;;AAQA,MAAMc,cAAc,GAAG,SAAjBA,cAAiB,CAACd,aAAD,EAAgBe,SAAhB,EAA8B;AACjD,QAAI,oBAAoBf,aAAxB,EAAuC;AACnCC,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACH;AACJ,GAJD;;AAMA,MAAMgB,QAAQ;AAAA,wEAAG,kBAAOlC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPL,cAAAA,cADO,GACUS,IAAI,CAAC+B,aAAL,CAAmB,gBAAnB,CADV;AAAA,gCAGoE3D,MAAM,CAACmC,OAH3E,EAGMyB,WAHN,mBAGLC,SAHK,EAG0BC,YAH1B,mBAGmBC,KAHnB,EAGuDC,QAHvD,mBAGwCC,aAHxC;AAIPC,cAAAA,MAJO,GAIE;AACXC,gBAAAA,gBAAgB,EAAEnE,MAAM,CAACmC,OAAP,CAAe+B,MAAf,CAAsBE,SAD7B;AAEXC,gBAAAA,WAAW,EAAErE,MAAM,CAACmC,OAAP,CAAe+B,MAAf,CAAsBI,QAFxB;AAGXC,gBAAAA,WAAW,EAAEvE,MAAM,CAACmC,OAAP,CAAe+B,MAAf,CAAsBM,IAHxB;AAIXC,gBAAAA,YAAY,EAAEzE,MAAM,CAACmC,OAAP,CAAe+B,MAAf,CAAsBQ,GAJzB;AAKXV,gBAAAA,QAAQ,EAAEhE,MAAM,CAACmC,OAAP,CAAe8B;AALd,eAJF;AAAA;AAAA,qBAWUzG,uDAAS,CAAC;AAAEoD,gBAAAA,GAAG,YAAKjD,4CAAL,2BAAL;AAA2CgH,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,IAAI,EAAE,aAAR;AAAuBzD,kBAAAA,cAAc,EAAdA,cAAvB;AAAuCyC,kBAAAA,WAAW,EAAXA,WAAvC;AAAoDE,kBAAAA,YAAY,EAAZA,YAApD;AAAkEI,kBAAAA,MAAM,EAANA;AAAlE;AAAvD,eAAD,CAXnB;;AAAA;AAWPW,cAAAA,QAXO;;AAYb,kBAAIA,QAAQ,CAAC5D,IAAT,CAAc2B,MAAd,KAAyB,OAA7B,EAAsC;AAClChD,gBAAAA,YAAY,CAAC;AAAEkF,kBAAAA,MAAM,EAAE9E,MAAM,CAACmC,OAAP,CAAeb;AAAzB,iBAAD,CAAZ;AACAI,gBAAAA,WAAW;AACd;;AACDQ,cAAAA,aAAa,CAAC,KAAD,CAAb,CAhBa,CAiBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtCa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARwB,QAAQ;AAAA;AAAA;AAAA,KAAd;AA0CA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,MAAMJ,QAAQ,GAAG,SAAXA,QAAW,GAA8B;AAAA,QAA7BrC,IAA6B,uEAAtB,EAAsB;AAAA,QAAlB2D,IAAkB,uEAAX,MAAW;AAC3C,QAAQzD,cAAR,GAAkCF,IAAlC,CAAQE,cAAR;AAAA,QAAwBR,KAAxB,GAAkCM,IAAlC,CAAwBN,KAAxB;;AACA,YAAQiE,IAAR;AACI,WAAK,QAAL;AACI5C,QAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,gEAAC;AAAA;AAAA;AAAA;AAAA;AAAA,iCACGS,eADH;AAAA;AAAA,yBACyBjC,sBAAsB,CAAC;AAAEC,oBAAAA,UAAU,EAAET,MAAM,CAACmC,OAAP,CAAec,QAA7B;AAAuCvC,oBAAAA,WAAW,EAAEV,MAAM,CAACmC,OAAP,CAAezB,WAAnE;AAAgFC,oBAAAA,KAAK,EAALA;AAAhF,mBAAD,CAD/C;;AAAA;AAAA;AAAA;AAEGqB,kBAAAA,UAAU,CAAC,KAAD,CAAV;;AAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD;;AAIA;;AACJ;AACI,YAAI,CAACD,OAAL,EAAc;AACVC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,gEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACO+C,kBAAAA,aADP,GACuBvC,YADvB;;AAAA,uBAEOxC,MAAM,CAACmC,OAAP,CAAec,QAFtB;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAG6BzC,sBAAsB,CAAC;AAAEC,oBAAAA,UAAU,EAAET,MAAM,CAACmC,OAAP,CAAec,QAA7B;AAAuCvC,oBAAAA,WAAW,EAAEV,MAAM,CAACmC,OAAP,CAAezB,WAAnE;AAAgFC,oBAAAA,KAAK,EAALA;AAAhF,mBAAD,CAHnD;;AAAA;AAGOoE,kBAAAA,aAHP;AAIOtC,kBAAAA,eAAe,CAACsC,aAAD,CAAf;;AAJP;AAAA,uBAMO5D,cANP;AAAA;AAAA;AAAA;;AAAA,yCAO6B4D,aAAa,CAAClE,MAAd,CAAqB,UAAAmE,CAAC;AAAA,2BAAIA,CAAC,CAAC1D,EAAF,KAASH,cAAb;AAAA,mBAAtB,CAP7B,mEAOc8D,WAPd;AAAA;AAAA,yBAQwC/D,qBAAqB,CAAC;AAAEC,oBAAAA,cAAc,EAAdA,cAAF;AAAkBR,oBAAAA,KAAK,EAALA;AAAlB,mBAAD,CAR7D;;AAAA;AAQauE,kBAAAA,kBARb;AASOtD,kBAAAA,IAAI,CAACuD,cAAL,iCAAyBF,WAAzB;AAAsC9D,oBAAAA,cAAc,EAAE8D,WAAW,CAAC3D,EAAlE;AAAsE2D,oBAAAA,WAAW,qBAAMC,kBAAN;AAAjF;;AATP;AAWGlD,kBAAAA,UAAU,CAAC,KAAD,CAAV;;AAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD;;AAZR;AA0BH,GA5BD;;AA8BA,MAAMoD,YAAY,GAAG,SAAfA,YAAe,GAAyC;AAAA,QAAxCC,SAAwC,uEAA5B,KAA4B;AAAA,QAArBC,QAAqB,uEAAV,KAAU;AAC1D,2BAAgEtF,MAAM,CAACmC,OAAvE;AAAA,QAAQzB,WAAR,oBAAQA,WAAR;AAAA,QAAqBsC,YAArB,oBAAqBA,YAArB;AAAA,QAAmCC,QAAnC,oBAAmCA,QAAnC;AAAA,QAA6C9B,cAA7C,oBAA6CA,cAA7C;;AACA,QAAIkE,SAAJ,EAAe;AACX9C,MAAAA,aAAa,CAAC,UAAArC,IAAI;AAAA,+CAAUA,IAAV;AAAgBC,UAAAA,IAAI,EAAE,CAACD,IAAI,CAACC,IAA5B;AAAkCH,UAAAA,MAAM,EAAE;AAAEU,YAAAA,WAAW,EAAXA,WAAF;AAAesC,YAAAA,YAAY,EAAZA,YAAf;AAA6BvC,YAAAA,UAAU,EAAEwC,QAAzC;AAAmD9B,YAAAA,cAAc,EAAdA;AAAnD,WAA1C;AAA+GmE,UAAAA,QAAQ,EAARA;AAA/G;AAAA,OAAL,CAAb;AACH,KAFD,MAEO;AACH/C,MAAAA,aAAa,CAAC,UAAArC,IAAI;AAAA,+CAAUA,IAAV;AAAgBC,UAAAA,IAAI,EAAE,CAACD,IAAI,CAACC,IAA5B;AAAkCH,UAAAA,MAAM,oBAAO4B,IAAI,CAACwB,cAAL,CAAoB,IAApB,CAAP,CAAxC;AAA4EkC,UAAAA,QAAQ,EAARA;AAA5E;AAAA,OAAL,CAAb;AACH;AACJ,GAPD;;AASA,MAAMC,QAAQ,GAAGvI,mDAAW,uEAAC;AAAA;AAAA;AAAA;AAAA;AACzBkF,YAAAA,aAAa,CAAC,IAAD,CAAb;AACAN,YAAAA,IAAI,CAAC4D,MAAL;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAGzB,EAHyB,CAA5B;AAKA,sBACI,mHACI,kDAAC,6CAAD;AAAM,YAAQ,EAAEzD,OAAhB;AAAyB,aAAS,eAAE,kDAAC,0DAAD;AAAiB,WAAK,EAAE;AAAE0D,QAAAA,QAAQ,EAAE;AAAZ,OAAxB;AAA0C,UAAI;AAA9C,MAApC;AAAuF,OAAG,EAAC;AAA3F,kBACI,kDAAC,MAAD;AAAQ,eAAW,EAAEnD,UAArB;AAAiC,kBAAc,EAAEC,aAAjD;AAAgE,gBAAY,EAAEe;AAA9E,IADJ,eAEI,kDAAC,6CAAD;AAAM,QAAI,EAAE1B,IAAZ;AAAkB,QAAI,uBAAtB;AAA+C,YAAQ,EAAE8B,QAAzD;AAAmE,kBAAc,EAAEF;AAAnF,kBACI,kDAAC,8DAAD;AACI,MAAE,EAAC,iBADP;AAEI,UAAM,EAAE3B,MAFZ;AAGI,UAAM,EAAC,UAHX;AAII,SAAK,EAAE;AAAE6D,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAAK;;AAA/B,KAJX;AAKI,UAAM,EAAEtG,MALZ;AAMI,SAAK,EAAE;AACH;AACAuG,MAAAA,MAAM,EAAE,KAFL;AAEYC,MAAAA,QAAQ,EAAE,KAFtB;AAE6BhE,MAAAA,MAAM,EAAEA,MAFrC;AAGHiE,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,GAAG,EAAE,KAAtB;AAA6BC,QAAAA,KAAK,EAAE,OAApC;AAA6CC,QAAAA,MAAM,EAAE,QAArD;;AAA+D;AAAqBC,QAAAA,IAAI,EAAE,KAA1F;AAAiGN,QAAAA,QAAQ,EAAE,KAA3G;AAAkHO,QAAAA,KAAK,EAAE,IAAzH;AAA+HC,QAAAA,QAAQ,EAAE;AAAzI,OAHJ;AAIHC,MAAAA,KAAK,EAAE;AAAEN,QAAAA,GAAG,EAAE,OAAP;AAAgBO,QAAAA,OAAO,EAAE,IAAzB;AAA+BC,QAAAA,SAAS,EAAE;AAAK;;AAA/C,OAJJ;AAKHC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,MAAM,EAAE,EAA9B;AAAkCC,QAAAA,MAAM,EAAE,EAA1C;AAA8CC,QAAAA,IAAI,EAAE;AAApD,OALL;AAMHC,MAAAA,MAAM,EAAE,EANL;AAMS;AACZC,MAAAA,QAAQ,EAAE,IAPP;AAQHC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AARJ,KANX;AAgBI,YAAQ,EAAE;AACNrF,MAAAA,MAAM,EAAEA,MADF;AAENsF,MAAAA,IAAI,EAAE,EAFA;AAEIvB,MAAAA,MAAM,EAAE,KAFZ;AAEmBa,MAAAA,MAAM,EAAE,YAF3B;AAEyCZ,MAAAA,QAAQ,EAAE;AAFnD;AAhBd,kBAqBI,kDAAC,4DAAD,qBACI,kDAAC,2DAAD;AACI,SAAK,EAAE;AAAEH,MAAAA,KAAK,EAAE;AAAT,KADX;AAEI,QAAI,eACA,kDAAC,4DAAD,qBACI,kDAAC,yDAAD;AAAO,UAAI,EAAC,gBAAZ;AAA6B,YAAM,EAAE;AAAEkB,QAAAA,MAAM,EAAE,oBAAV;AAAgCD,QAAAA,KAAK,EAAE;AAAvC,OAArC;AAAoG,WAAK,EAAE;AAAEZ,QAAAA,OAAO,EAAE,IAAX;AAAiBqB,QAAAA,IAAI,EAAE,aAAvB;AAAsCpB,QAAAA,GAAG,EAAE;AAA3C,OAA3G;AAAgK,YAAM,oBAC9JpE,IAAI,CAAC+B,aAAL,CAAmB,gBAAnB,KAAwC;AAAEgD,QAAAA,KAAK,eAAE,kDAAC,6CAAD;AAAQ,iBAAO,EAAE;AAAA,mBAAMvB,YAAY,EAAlB;AAAA,WAAjB;AAAuC,eAAK,EAAE;AAAEiC,YAAAA,UAAU,EAAE;AAAd,WAA9C;AAAqE,cAAI,EAAC;AAA1E,wBAAkF,kDAAC,0DAAD;AAAc,eAAK,EAAE;AAAE5B,YAAAA,QAAQ,EAAE;AAAZ;AAArB,UAAlF;AAAT,OADsH;AAAtK,oBAGI,kDAAC,+DAAD;AAAa,gBAAU,MAAvB;AAAwB,UAAI,EAAC,OAA7B;AAAqC,UAAI,EAAEjD,YAA3C;AAAyD,cAAQ,EAAC,IAAlE;AAAuE,eAAS,EAAC,YAAjF;AACI,mBAAa,EAAE,uBAAC8E,CAAD,EAAIC,QAAJ,EAAcC,SAAd;AAAA,eAA6B;AAAE1B,UAAAA,KAAK,eAAE;AAAK,iBAAK,EAAE;AAAE2B,cAAAA,OAAO,EAAE;AAAX;AAAZ,0BAAiC;AAAK,iBAAK,EAAE;AAAE/B,cAAAA,KAAK,EAAE;AAAT;AAAZ,0BAA+B,6DAAI4B,CAAC,CAAC,cAAD,CAAL,CAA/B,CAAjC,eAAgG;AAAK,iBAAK,EAAE;AAAEI,cAAAA,IAAI,EAAE;AAAR;AAAZ,aAA0BJ,CAAC,CAACE,SAAD,CAA3B,CAAhG,eAA6I;AAAK,iBAAK,EAAE;AAAE9B,cAAAA,KAAK,EAAE;AAAT;AAAZ,mBAAkC4B,CAAC,CAAC,QAAD,CAAnC,CAA7I,CAAT;AAAkNK,UAAAA,KAAK,EAAEL,CAAC,CAACC,QAAD;AAA1N,SAA7B;AAAA;AADnB,MAHJ,CADJ,CAHR;AAaI,SAAK,eAAE,kDAAC,6CAAD;AAAQ,aAAO,EAAE;AAAA,eAAMnC,YAAY,CAAC,IAAD,CAAlB;AAAA;AAAjB;AAbX,IADJ,CArBJ,eAsCI,kDAAC,4DAAD,QACM,CAACrD,OAAD,IAAYH,IAAI,CAAC+B,aAAL,CAAmB,gBAAnB,CAAb,iBAAsD,kDAAC,iFAAD;AAAuB,UAAM,EAAE/B,IAAI,CAACwB,cAAL,CAAoB,IAApB,CAA/B;AAA0D,YAAQ,EAAE,KAApE;AAA2E,YAAQ,EAAE,KAArF;AAA4F,gBAAY,EAAEE;AAA1G,IAD3D,CAtCJ,CADJ,CAFJ,EA8CK7B,SAAS,iBAAI,kDAAC,0DAAD;AAAQ,QAAI,EAAEA,SAAS,CAACmG;AAAxB,kBACV,kDAAC,6CAAD,qBACI,kDAAC,6CAAD;AAAQ,YAAQ,EAAE3F,UAAlB;AAA8B,WAAO,EAAEsD,QAAvC;AAAiD,QAAI,EAAC;AAAtD,eADJ,CADU,CA9ClB,CADJ,CADJ;AA0DH,CA7LD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMlG,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAOC,WAAP,EAAuB;AAClC,SAAO7B,iEAAS,CAAC;AACbkL,IAAAA,QAAQ,EAAEtL,kDAAA,GAAawL,QAAb,GAAwBhD,KAAxB,CAA8B,mBAA9B,EAAmDkB,QAAnD,EADG;AAEb+B,IAAAA,gBAAgB,EAAEzL,kDAAA,GAAawL,QAAb,GAAwBE,SAAxB,CAAkC,CAAlC,EAAqClD,KAArC,CAA2C,6BAA3C,EAA0EkB,QAA1E,EAFL;AAGb;AACAiC,IAAAA,iBAAiB,EAAE3L,kDAAA,GAAawL,QAAb,GAAwBE,SAAxB,CAAkC,CAAlC,EAAqClD,KAArC,CAA2C,iBAA3C,EAA8DkB,QAA9D,EAJN;AAKbkC,IAAAA,eAAe,EAAE5L,kDAAA,GAAawL,QAAb,GAAwBE,SAAxB,CAAkC,CAAlC,EAAqClD,KAArC,CAA2C,4BAA3C,EAAyEkB,QAAzE,EALJ;AAMbmC,IAAAA,gBAAgB,EAAE7L,kDAAA,GAAawL,QAAb,GAAwBE,SAAxB,CAAkC,CAAlC,EAAqClD,KAArC,CAA2C,0BAA3C,EAAuEkB,QAAvE,EANL;AAOboC,IAAAA,oBAAoB,EAAE9L,kDAAA,GAAa+L,GAAb,CAAiB,CAAjB,EAAoBL,SAApB,CAA8B,CAA9B,EAAiClD,KAAjC,CAAuC,6BAAvC,EAAsEkB,QAAtE,EAPT;AAQbsC,IAAAA,MAAM,EAAEhM,kDAAA,GAAaiM,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CARK;AASbC,IAAAA,OAAO,EAAElM,gDAAA,CAAS,QAAT,EAAmB;AAAEoM,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAErM,kDAAA,GAAawL,QAAb,GAAwB9B,QAAxB;AAAf,KAAnB,CATI;AAUb/B,IAAAA,WAAW,EAAE3H,iDAAA,GAAY+L,GAAZ,CAAgB,CAAhB,EAAmBvD,KAAnB,CAAyB,sBAAzB,EAAiDkB,QAAjD;AAVA,GAAD,EAWb1H,IAXa,EAWPC,WAXO,CAAT,CAWeC,OAXf,CAWuB,IAXvB,CAAP;AAYH,CAbD;;AAeA,IAAMqK,aAAa,GAAG,SAAhBA,aAAgB,OAAuE;AAAA,MAApEjI,IAAoE,QAApEA,IAAoE;AAAA,MAA9DkI,KAA8D,QAA9DA,KAA8D;AAAA,MAAvDC,MAAuD,QAAvDA,MAAuD;AAAA,MAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1B9H,SAA0B,QAA1BA,SAA0B;AAAA,MAAfkD,QAAe,QAAfA,QAAe;;AACzF,kBAAwBvI,gDAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOoN,IAAP;AAAA,MAAaC,OAAb;;AACAtN,EAAAA,iDAAS,CAAC,YAAM;AACZ,QAAIsF,SAAS,CAACb,GAAV,KAAkB,QAAtB,EAAgC;AAC5B6I,MAAAA,OAAO,CAACxI,IAAI,CAAC+B,aAAL,CAAmB,CAAC,aAAD,EAAgBmG,KAAK,CAACO,IAAtB,EAA4B,SAA5B,CAAnB,CAAD,CAAP;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;;AAKA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACpBH,IAAAA,OAAO,CAACxI,IAAI,CAAC+B,aAAL,CAAmB,CAAC,aAAD,EAAgB4G,CAAhB,EAAmB,SAAnB,CAAnB,CAAD,CAAP;AACH,GAFD;;AAGA,sBACI,kDAAC,4DAAD;AAAU,UAAM,EAAC,YAAjB;AAA8B,SAAK,EAAE;AAAEpD,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAAR;AAArC,kBACI,kDAAC,6DAAD;AAAW,SAAK,EAAE;AAAEpB,MAAAA,OAAO,EAAE;AAAX;AAAlB,KAAuCT,QAAQ,IAAI2E,KAAK,GAAG,CAApB,iBAAyB,kDAAC,8DAAD;AAAY,WAAO,EAAE;AAAA,aAAMD,IAAI,CAACC,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAV;AAAA,KAArB;AAAmD,SAAK,EAAE;AAAE/C,MAAAA,SAAS,EAAE;AAAb;AAA1D,kBAAmF,kDAAC,uDAAD,OAAnF,CAAhE,CADJ,eAEI,kDAAC,6DAAD;AAAW,SAAK,EAAE;AAAEnB,MAAAA,OAAO,EAAE;AAAX;AAAlB,KAAuCT,QAAQ,IAAI2E,KAAK,GAAIC,MAAM,GAAG,CAA9B,iBAAoC,kDAAC,8DAAD;AAAY,WAAO,EAAE;AAAA,aAAMF,IAAI,CAACC,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAV;AAAA,KAArB;AAAmD,SAAK,EAAE;AAAE/C,MAAAA,SAAS,EAAE;AAAb;AAA1D,kBAAmF,kDAAC,yDAAD,OAAnF,CAA3E,CAFJ,eAGI,kDAAC,yDAAD;AAAO,SAAK,EAAE;AAAEnB,MAAAA,OAAO,EAAE;AAAX,KAAd;AAAkC,QAAI,EAAE,CAAC+D,KAAK,CAACO,IAAP,EAAa,SAAb;AAAxC,kBACI,kDAAC,+DAAD;AAAa,YAAQ,EAAE;AAAA,aAAMC,QAAQ,CAACR,KAAK,CAACO,IAAP,CAAd;AAAA,KAAvB;AAAmD,QAAI,EAAC,OAAxD;AAAgE,QAAI,EAAE9B,sDAAtE;AAAyF,YAAQ,EAAC,KAAlG;AAAwG,aAAS,EAAC;AAAlH,IADJ,CAHJ,EAMK4B,IAAI,KAAK,CAAT,iBAAc,kDAAC,yDAAD;AAAO,SAAK,EAAE;AAAEpE,MAAAA,OAAO,EAAE;AAAX,KAAd;AAAkC,QAAI,EAAE,CAAC+D,KAAK,CAACO,IAAP,EAAa,iBAAb;AAAxC,kBACX,kDAAC,+DAAD;AAAa,QAAI,EAAC,OAAlB;AAA0B,QAAI,EAAE7B,iDAAhC;AAA8C,YAAQ,EAAC,KAAvD;AAA6D,aAAS,EAAC;AAAvE,IADW,CANnB,EAUK2B,IAAI,KAAK,CAAT,iBAAc,kDAAC,yDAAD;AAAO,SAAK,EAAE;AAAEpE,MAAAA,OAAO,EAAE;AAAX,KAAd;AAAkC,QAAI,EAAE,CAAC+D,KAAK,CAACO,IAAP,EAAa,iBAAb;AAAxC,kBACX,kDAAC,6CAAD;AAAa,QAAI,EAAC,OAAlB;AAA0B,OAAG,EAAE,CAA/B;AAAkC,OAAG,EAAE;AAAvC,IADW,CAVnB,EAcK,CAACF,IAAI,GAAG,CAAP,IAAYA,IAAI,KAAKK,SAAtB,kBAAoC,kDAAC,6DAAD;AAAW,SAAK,EAAE;AAAEzE,MAAAA,OAAO,EAAE;AAAX;AAAlB,IAdzC,eAeI,kDAAC,6DAAD;AAAW,SAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX;AAAlB,KAAuCT,QAAQ,iBAAI,kDAAC,8DAAD;AAAY,WAAO,EAAE;AAAA,aAAMyE,MAAM,CAACD,KAAK,CAACO,IAAP,CAAZ;AAAA,KAArB;AAA+C,SAAK,EAAE;AAAEnD,MAAAA,SAAS,EAAE;AAAb;AAAtD,kBAA+E,kDAAC,qDAAD,OAA/E,CAAnD,CAfJ,CADJ;AAoBH,CA9BD;;AAgCA,IAAM7F,KAAK,GAAG,SAARA,KAAQ,CAACC,EAAD,EAAQ;AAClB,MAAIA,EAAJ,EAAQ;AACJ,WAAO;AAAEC,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,MAAM,EAAE;AAAEF,QAAAA,EAAE,EAAFA;AAAF;AAAzB,KAAP;AACH;;AACD,SAAO;AAAEC,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAAP;AACH,CALD;;AAOA,iEAAe,iBAAwG;AAAA,MAArGxB,MAAqG,SAArGA,MAAqG;AAAA,MAA7FF,YAA6F,SAA7FA,YAA6F;AAAA,MAA/E2B,SAA+E,SAA/EA,SAA+E;AAAA,MAApEC,WAAoE,SAApEA,WAAoE;AAAA,MAAvD9B,YAAuD,SAAvDA,YAAuD;AAAA,6BAAzC6K,QAAyC;AAAA,MAAzCA,QAAyC,+BAA9B,MAA8B;AAAA,6BAAtBnF,QAAsB;AAAA,MAAtBA,QAAsB,+BAAX,IAAW;AACnH,MAAMoF,GAAG,GAAGxN,kDAAU,CAACkC,+EAAD,CAAtB;;AACA,sBAAeR,qDAAA,EAAf;AAAA;AAAA,MAAOgD,IAAP;;AACA,mBAA8B7E,gDAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOgF,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAoCjF,gDAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOkF,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0CnF,gDAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAO2F,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAoC5F,gDAAQ,CAAC;AAAE4N,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE,EAAtB;AAA0BC,IAAAA,IAAI,EAAE,EAAhC;AAAoCC,IAAAA,OAAO,EAAE;AAA7C,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,oBAA4BjO,gDAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAO8E,MAAP;AAAA,MAAeC,SAAf;;AACA,oBAAkC/E,gDAAQ,CAACsE,KAAK,CAACrB,MAAM,CAACmB,cAAR,CAAN,CAA1C;AAAA;AAAA,MAAOiB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAA0CtF,gDAAQ,CAAC;AAAE6F,IAAAA,MAAM,EAAE;AAAV,GAAD,CAAlD;AAAA;AAAA,MAAOC,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,4DAAC;AAAA;AAAA;AAAA;AAAA;AACG,kBAAIX,SAAS,CAACb,GAAV,KAAkB,QAAtB,EAAgC;AAC3BzB,gBAAAA,YAAD,IAAkBA,YAAY,CAAC;AAAEM,kBAAAA,KAAK,gDAAmCJ,MAAM,CAACgD,YAA1C,CAAP;AAAiE3C,kBAAAA,QAAQ,YAAKL,MAAM,CAACS,UAAZ;AAAzE,iBAAD,CAA9B;AACAmB,gBAAAA,IAAI,CAACuD,cAAL,mBAAyBnF,MAAzB;AACH,eAHD,MAGO;AACFF,gBAAAA,YAAD,IAAkBA,YAAY,CAAC;AAAEM,kBAAAA,KAAK,8CAAiCJ,MAAM,CAACgD,YAAxC,CAAP;AAA+D3C,kBAAAA,QAAQ,YAAKL,MAAM,CAACS,UAAZ;AAAvE,iBAAD,CAA9B;AACAmB,gBAAAA,IAAI,CAACuD,cAAL,CAAoB;AAAE8F,kBAAAA,YAAY,EAAE,QAAhB;AAA0BC,kBAAAA,aAAa,EAAE,CAAzC;AAA4C1B,kBAAAA,OAAO,EAAE,CAArD;AAAwDP,kBAAAA,iBAAiB,EAAE,CAA3E;AAA8EC,kBAAAA,eAAe,EAAE,CAA/F;AAAkGC,kBAAAA,gBAAgB,EAAE,CAApH;AAAuHP,kBAAAA,QAAQ,EAAE,EAAjI;AAAqIG,kBAAAA,gBAAgB,EAAE,IAAvJ;AAA6JK,kBAAAA,oBAAoB,EAAE;AAAnL,iBAApB;AACH;;AACDpH,cAAAA,UAAU,CAAC,KAAD,CAAV;;AARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAUH,GAXD;;AAaAlF,EAAAA,iDAAS,CAAC,YAAM;AACZiG,IAAAA,IAAI;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACd,aAAD,EAAgBe,SAAhB,EAA8B;AACjDd,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACH,GAFD;;AAIA,MAAMgB,QAAQ;AAAA,wEAAG,kBAAOlC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACPoB,cAAAA,MADO,GACE;AAAE+H,gBAAAA,KAAK,EAAE,EAAT;AAAaC,gBAAAA,OAAO,EAAE,EAAtB;AAA0BC,gBAAAA,IAAI,EAAE,EAAhC;AAAoCC,gBAAAA,OAAO,EAAE;AAA7C,eADF;AAEPK,cAAAA,OAFO,GAEG,CAAC,aAAD,CAFH;AAGPnG,cAAAA,CAHO,GAGH3F,MAAM,GAAG+L,QAAT,CAAkB5J,MAAlB,EAA0B;AAAE6J,gBAAAA,UAAU,EAAE;AAAd,eAA1B,CAHG;AAIbzI,cAAAA,MAAM,CAAC+H,KAAP,gCAAmB/H,MAAM,CAAC+H,KAA1B,sBAAqC3F,CAAC,CAAC2F,KAAF,eAAU3F,CAAC,CAAC2F,KAAZ,6CAAU,SAASW,OAAT,CAAiBzK,MAAjB,CAAwB,UAACmE,CAAD;AAAA,uBAAOmG,OAAO,CAACI,QAAR,CAAiBvG,CAAC,CAACwG,OAAF,CAAUjK,GAA3B,CAAP;AAAA,eAAxB,CAAV,GAA4E,EAAjH;;AAJa,oBAKT,CAACyD,CAAC,CAAC2F,KAAH,IAAY/H,MAAM,CAAC+H,KAAP,CAAaT,MAAb,KAAwB,CAL3B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAMc1M,uDAAS,CAAC;AAAEoD,gBAAAA,GAAG,YAAKjD,4CAAL,2BAAL;AAA2CgH,gBAAAA,UAAU,kCAAOnD,MAAP;AAAeF,kBAAAA,EAAE,EAAEtB,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEmB,cAA3B;AAA2CT,kBAAAA,WAAW,EAAEV,MAAM,CAACU,WAA/D;AAA4EsC,kBAAAA,YAAY,EAAEhD,MAAM,CAACgD,YAAjG;AAA+GvC,kBAAAA,UAAU,EAAET,MAAM,CAACS;AAAlI;AAArD,eAAD,CANvB;;AAAA;AAMHoE,cAAAA,QANG;;AAOT,kBAAIA,QAAQ,CAAC5D,IAAT,CAAc2B,MAAd,KAAyB,OAA7B,EAAsC;AAClC,oBAAIR,SAAS,CAACb,GAAV,KAAkB,QAAtB,EAAgC;AAC5B3B,kBAAAA,YAAY,CAAC;AAAEuB,oBAAAA,cAAc,EAAEiB,SAAS,CAACZ,MAAV,CAAiBF;AAAnC,mBAAD,CAAZ;AACH,iBAFD,MAEO;AACH1B,kBAAAA,YAAY,CAAC,EAAD,EAAK,QAAL,CAAZ;AACH;AACJ;;AACDkD,cAAAA,gBAAgB,CAAC+B,QAAQ,CAAC5D,IAAV,CAAhB;;AAdS;AAgBbiB,cAAAA,aAAa,CAAC,KAAD,CAAb;AACA8I,cAAAA,aAAa,CAACpI,MAAD,CAAb;;AAjBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARc,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAoBA,MAAM+H,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAIrJ,SAAS,CAACb,GAAV,KAAkB,QAAtB,EAAgC;AAC5BK,MAAAA,IAAI,CAAC8J,WAAL;AACA3I,MAAAA,IAAI;AACJD,MAAAA,gBAAgB,CAAC;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAD,CAAhB;AACH;;AACDV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAPD;;AASA,MAAMyJ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBzJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAY,IAAAA,gBAAgB,CAAC;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAhB;AACH,GAHD;;AAKA,MAAMgJ,OAAO,GAAG,SAAVA,OAAU,GAAoB;AAAA,QAAnBC,MAAmB,uEAAV,KAAU;AAChCnK,IAAAA,WAAW;AACd,GAFD;;AAIA,MAAM6D,QAAQ,GAAGvI,mDAAW,uEAAC;AAAA;AAAA;AAAA;AAAA;AACzBkF,YAAAA,aAAa,CAAC,IAAD,CAAb;AACAN,YAAAA,IAAI,CAAC4D,MAAL;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAGzB,EAHyB,CAA5B;AAKA,sBACI,mHACI,kDAAC,iEAAD;AACI,UAAM,EAAE3C,aADZ;AAEI,mBAAe,EAAET,SAAS,CAACb,GAAV,KAAkB,QAAlB,iBAA8B,kDAAC,6CAAD;AAAQ,UAAI,EAAC,SAAb;AAAuB,SAAG,EAAC,SAA3B;AAAqC,aAAO,EAAEkK;AAA9C,4BAFnD;AAGI,sBAAkB,eAAE,kDAAC,6CAAD;AAAQ,SAAG,EAAC,YAAZ;AAAyB,aAAO,EAAE;AAAA,eAAMG,OAAO,CAAC,IAAD,CAAb;AAAA;AAAlC,gBAHxB;AAII,iBAAa,eAAE,kDAAC,6CAAD;AAAQ,UAAI,EAAC,SAAb;AAAuB,SAAG,EAAC,SAA3B;AAAqC,aAAO,EAAED;AAA9C,YAJnB;AAKI,oBAAgB,eAAE,kDAAC,6CAAD;AAAQ,SAAG,EAAC,YAAZ;AAAyB,aAAO,EAAEC;AAAlC;AALtB,kBAOI,kDAAC,mEAAD;AAAiB,MAAE,EAAC;AAApB,IAPJ,eAQI,kDAAC,iEAAD;AAAe,cAAU,EAAEb;AAA3B,IARJ,eASI,kDAAC,6CAAD;AAAM,QAAI,EAAEnJ,IAAZ;AAAkB,QAAI,OAAtB;AAA+B,YAAQ,EAAE8B,QAAzC;AAAmD,kBAAc,EAAEF,cAAnE;AAAmF,aAAS,EAAEiH;AAA9F,kBACI,kDAAC,8DAAD;AACI,MAAE,EAAC,wBADP;AAEI,UAAM,EAAE5I,MAFZ;AAGI,UAAM,EAAC,UAHX;AAII,SAAK,EAAE;AAAE6D,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAAK;;AAA/B,KAJX;AAKI,UAAM,EAAEtG,MALZ;AAMI,SAAK,EAAE;AACHiG,MAAAA,QAAQ,EAARA,QADG;AAEH6B,MAAAA,IAAI,EAAE,CAAC,EAAD,CAFH;AAGHvB,MAAAA,MAAM,EAAE,KAHL;AAGYC,MAAAA,QAAQ,EAAE,KAHtB;AAG6BhE,MAAAA,MAAM,EAAEA,MAHrC;AAIHiE,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,GAAG,EAAE,KAAtB;AAA6BC,QAAAA,KAAK,EAAE,OAApC;AAA6CC,QAAAA,MAAM,EAAE,QAArD;;AAA+D;AAAqBC,QAAAA,IAAI,EAAE,KAA1F;AAAiGN,QAAAA,QAAQ,EAAE,KAA3G;AAAkHO,QAAAA,KAAK,EAAE,IAAzH;AAA+HC,QAAAA,QAAQ,EAAE;AAAzI,OAJJ;AAKHC,MAAAA,KAAK,EAAE;AAAEN,QAAAA,GAAG,EAAE,OAAP;AAAgBO,QAAAA,OAAO,EAAE,IAAzB;AAA+BC,QAAAA,SAAS,EAAE;AAAM;;AAAhD,OALJ;AAMHC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,MAAM,EAAE,EAA9B;AAAkCC,QAAAA,MAAM,EAAE,EAA1C;AAA8CC,QAAAA,IAAI,EAAE;AAApD,OANL;AAOHE,MAAAA,QAAQ,EAAE,IAPP;AAQHC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AARJ,KANX;AAgBI,YAAQ,EAAE;AACNrF,MAAAA,MAAM,EAAEA,MADF;AAENsF,MAAAA,IAAI,EAAE,EAFA;AAEIvB,MAAAA,MAAM,EAAE,KAFZ;AAEmBa,MAAAA,MAAM,EAAE,YAF3B;AAEyCZ,MAAAA,QAAQ,EAAE;AAFnD;AAhBd,KAqBKP,QAAQ,iBAAI,mHACT,kDAAC,4DAAD;AAAU,UAAM,EAAE,KAAlB;AAAyB,SAAK,EAAE;AAAE6B,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAR;AAAhC,kBACI,kDAAC,yDAAD;AAAO,QAAI,EAAC,cAAZ;AAA2B,SAAK,EAAE;AAAEpB,MAAAA,OAAO,EAAE,IAAX;AAAiBqB,MAAAA,IAAI,EAAE;AAAvB;AAAlC,kBACI,kDAAC,+DAAD;AAAa,QAAI,EAAC,OAAlB;AAA0B,QAAI,EAAEqB,wDAAhC;AAAqD,YAAQ,EAAC,OAA9D;AAAsE,aAAS,EAAC,OAAhF;AACI,iBAAa,EAAE,uBAACnB,CAAD,EAAIC,QAAJ,EAAcC,SAAd;AAAA,aAA6B;AAAE1B,QAAAA,KAAK,EAAEwB,CAAC,CAACC,QAAD,CAAV;AAAsBI,QAAAA,KAAK,EAAEL,CAAC,CAACC,QAAD;AAA9B,OAA7B;AAAA;AADnB,IADJ,CADJ,eAMI,kDAAC,yDAAD;AAAO,QAAI,EAAC,YAAZ;AAAyB,SAAK,EAAE;AAAExB,MAAAA,OAAO,EAAE,IAAX;AAAiBqB,MAAAA,IAAI,EAAE;AAAvB;AAAhC,kBAAuE,kDAAC,6CAAD;AAAO,QAAI,EAAC;AAAZ,IAAvE,CANJ,CADS,eAST,kDAAC,kEAAD;AAAgB,UAAM,EAAC;AAAvB,IATS,CArBjB,eAiCI,kDAAC,4DAAD;AAAU,UAAM,EAAE,KAAlB;AAAyB,SAAK,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAAhC,kBACI,kDAAC,4DAAD;AAAU,UAAM,EAAE,KAAlB;AAAyB,SAAK,EAAE,CAAhC;AAAmC,SAAK,EAAE;AAAEb,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT;AAA4BE,MAAAA,MAAM,EAAE;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAApC;AAAwGd,MAAAA,KAAK,EAAE;AAAEE,QAAAA,GAAG,EAAE,OAAP;AAAgBN,QAAAA,KAAK,EAAE;AAAvB;AAA/G,KAA1C;AAA4L,UAAM,EAAC;AAAnM,kBACI,kDAAC,yDAAD;AAAO,SAAK,EAAE;AAAE0B,MAAAA,IAAI,EAAE;AAAR,KAAd;AAA6C,QAAI,EAAC;AAAlD,kBAA6D,kDAAC,6CAAD;AAAa,QAAI,EAAC,OAAlB;AAA0B,OAAG,EAAE,CAA/B;AAAkC,OAAG,EAAE;AAAvC,IAA7D,CADJ,eAEI,kDAAC,yDAAD;AAAO,SAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAAd;AAAuD,QAAI,EAAC;AAA5D,kBAA+E,kDAAC,6CAAD;AAAa,QAAI,EAAC,OAAlB;AAA0B,OAAG,EAAE,CAA/B;AAAkC,OAAG,EAAE;AAAvC,IAA/E,CAFJ,eAGI,kDAAC,yDAAD;AAAO,YAAQ,EAAE,KAAjB;AAAwB,QAAI,EAAC,qBAA7B;AAAmD,SAAK,EAAE;AAAErB,MAAAA,OAAO,EAAE,IAAX;AAAiBqB,MAAAA,IAAI,EAAE;AAAvB;AAA1D,kBAA0G,kDAAC,iEAAD;AAAe,YAAQ,EAAE;AAAzB,IAA1G,CAHJ,CADJ,eAMI,kDAAC,4DAAD;AAAU,UAAM,EAAE,KAAlB;AAAyB,SAAK,EAAE,CAAhC;AAAmC,SAAK,EAAE;AAAEX,MAAAA,MAAM,EAAE;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAAV;AAA6Ed,MAAAA,KAAK,EAAE;AAAEE,QAAAA,GAAG,EAAE,OAAP;AAAgBN,QAAAA,KAAK,EAAE;AAAvB;AAApF,KAA1C;AAAiK,UAAM,EAAC;AAAxK,kBACI,kDAAC,yDAAD;AAAO,QAAI,EAAC,mBAAZ;AAAgC,SAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE,IAAX;AAAiBqB,MAAAA,IAAI,EAAE;AAAvB;AAAvC,kBAAmF,kDAAC,6CAAD;AAAa,QAAI,EAAC,OAAlB;AAA0B,OAAG,EAAE,CAA/B;AAAkC,OAAG,EAAE;AAAvC,IAAnF,CADJ,eAEI,kDAAC,yDAAD;AAAO,QAAI,EAAC,iBAAZ;AAA8B,SAAK,EAAE;AAAErB,MAAAA,OAAO,EAAE,IAAX;AAAiBqB,MAAAA,IAAI,EAAE;AAAvB;AAArC,kBAA4F,kDAAC,6CAAD;AAAa,QAAI,EAAC,OAAlB;AAA0B,OAAG,EAAE,CAA/B;AAAkC,OAAG,EAAE;AAAvC,IAA5F,CAFJ,eAGI,kDAAC,yDAAD;AAAO,QAAI,EAAC,kBAAZ;AAA+B,SAAK,EAAE;AAAErB,MAAAA,OAAO,EAAE,IAAX;AAAiBqB,MAAAA,IAAI,EAAE;AAAvB;AAAtC,kBAA2F,kDAAC,6CAAD;AAAa,QAAI,EAAC,OAAlB;AAA0B,OAAG,EAAE,CAA/B;AAAkC,OAAG,EAAE;AAAvC,IAA3F,CAHJ,CANJ,eAWI,kDAAC,4DAAD;AAAU,UAAM,EAAE,KAAlB;AAAyB,SAAK,EAAE,CAAhC;AAAmC,SAAK,EAAE;AAAEX,MAAAA,MAAM,EAAE;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAAV;AAA6Ed,MAAAA,KAAK,EAAE;AAAEE,QAAAA,GAAG,EAAE,OAAP;AAAgBN,QAAAA,KAAK,EAAE;AAAvB;AAApF,KAA1C;AAAiK,UAAM,EAAC;AAAxK,kBACI,kDAAC,yDAAD;AAAO,YAAQ,EAAE,KAAjB;AAAwB,QAAI,EAAC,wBAA7B;AAAsD,SAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE,IAAX;AAAiBqB,MAAAA,IAAI,EAAE;AAAvB;AAA7D,kBAAgH,kDAAC,iEAAD,OAAhH,CADJ,eAEI,kDAAC,yDAAD;AAAO,YAAQ,EAAE,KAAjB;AAAwB,QAAI,EAAC,yBAA7B;AAAuD,SAAK,EAAE;AAAErB,MAAAA,OAAO,EAAE,IAAX;AAAiBqB,MAAAA,IAAI,EAAE;AAAvB;AAA9D,kBAAmH,kDAAC,iEAAD,OAAnH,CAFJ,CAXJ,CAjCJ,eAkDI,kDAAC,4DAAD;AAAU,QAAI,EAAE,EAAhB;AAAoB,UAAM,EAAE,KAA5B;AAAmC,SAAK,EAAE;AAAED,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,GAAb,CAAR;AAA2BF,MAAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAlC;AAA1C,kBACI,kDAAC,yDAAD;AAAO,QAAI,EAAC,QAAZ;AAAqB,SAAK,EAAE;AAAE4E,MAAAA,QAAQ,EAAE,MAAZ;AAAoB5E,MAAAA,SAAS,EAAE;AAA/B,KAA5B;AAAuE,SAAK,EAAE;AAAEnB,MAAAA,OAAO,EAAE;AAAX;AAA9E,kBAAkG,kDAAC,iEAAD,OAAlG,CADJ,eAEI,kDAAC,6DAAD;AAAW,SAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX;AAAlB,kBACI,kDAAC,wDAAD;AAAM,gBAAY,EAAE,sBAACgG,UAAD,EAAaC,SAAb;AAAA,aAA2B,CAAAD,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEzC,MAAZ,OAAuB0C,SAAvB,aAAuBA,SAAvB,uBAAuBA,SAAS,CAAE1C,MAAlC,CAA3B;AAAA;AAApB,KACK;AAAA,wBACG,kDAAC,yDAAD;AAAO,UAAI,EAAEjK,MAAM,CAAC,CAAC,QAAD,EAAW,SAAX,CAAD,CAAnB;AAA4C,eAAS,EAAEuC,IAAI,CAACwB,cAAL,CAAoB,IAApB,CAAvD;AAAkF,YAAM,EAAE;AAAEwD,QAAAA,MAAM,EAAE;AAAV,OAA1F;AAA6J,UAAI,EAAC,SAAlK;AAA4K,WAAK,EAAE;AAAEb,QAAAA,OAAO,EAAE,IAAX;AAAiBqB,QAAAA,IAAI,EAAE,QAAvB;AAAiCpB,QAAAA,GAAG,EAAE,OAAtC;AAA+CI,QAAAA,KAAK,EAAE;AAAtD;AAAnL,oBACI,kDAAC,6CAAD;AAAa,cAAQ,EAAExE,IAAI,CAAC+B,aAAL,CAAmB,CAAC,QAAD,CAAnB,MAAmC,CAA1D;AAA6D,UAAI,EAAC,OAAlE;AAA0E,SAAG,EAAE,CAA/E;AAAkF,SAAG,EAAE;AAAvF,MADJ,CADH;AAAA,GADL,CADJ,CAFJ,eAWI,kDAAC,6DAAD;AAAW,SAAK,EAAE;AAAEoC,MAAAA,OAAO,EAAE;AAAX;AAAlB,kBACI,kDAAC,wDAAD;AAAM,gBAAY,EAAE,sBAACgG,UAAD,EAAaC,SAAb;AAAA,aAA2B,CAAAD,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEzC,MAAZ,OAAuB0C,SAAvB,aAAuBA,SAAvB,uBAAuBA,SAAS,CAAE1C,MAAlC,CAA3B;AAAA;AAApB,KACK;AAAA,wBACG,kDAAC,yDAAD;AAAO,UAAI,EAAC,eAAZ;AAA4B,YAAM,EAAE;AAAE1C,QAAAA,MAAM,EAAE;AAAV,OAApC;AAAsE,WAAK,EAAE;AAAEb,QAAAA,OAAO,EAAE;AAAX;AAA7E,oBACI,kDAAC,+DAAD;AAAa,UAAI,EAAC,OAAlB;AAA0B,UAAI,EAAE2C,0DAAhC;AAAuD,cAAQ,EAAC,OAAhE;AAAwE,eAAS,EAAC,OAAlF;AAA0F,cAAQ,EAAE9G,IAAI,CAAC+B,aAAL,CAAmB,CAAC,QAAD,CAAnB,MAAmC,CAAvI;AACI,mBAAa,EAAE,uBAAC2D,CAAD,EAAIC,QAAJ,EAAcC,SAAd;AAAA,eAA6B;AAAE1B,UAAAA,KAAK,EAAEwB,CAAC,CAACE,SAAD,CAAV;AAAuBG,UAAAA,KAAK,EAAEL,CAAC,CAACC,QAAD;AAA/B,SAA7B;AAAA;AADnB,MADJ,CADH;AAAA,GADL,CADJ,CAXJ,eAqBI,kDAAC,yDAAD;AAAO,QAAI,EAAC,sBAAZ;AAAmC,YAAQ,EAAE,KAA7C;AAAoD,UAAM,EAAE;AAAEX,MAAAA,MAAM,EAAE;AAAV,KAA5D;AAA8F,SAAK,EAAE;AAAEb,MAAAA,OAAO,EAAE,IAAX;AAAiBqB,MAAAA,IAAI,EAAE,gCAAvB;AAAyDpB,MAAAA,GAAG,EAAE,MAA9D;AAAsEN,MAAAA,KAAK,EAAE;AAA7E;AAArG,kBAA4L,kDAAC,6CAAD;AAAa,QAAI,EAAC,OAAlB;AAA0B,OAAG,EAAE,CAA/B;AAAkC,OAAG,EAAE;AAAvC,IAA5L,CArBJ,CAlDJ,eAyEI,kDAAC,kEAAD;AAAgB,UAAM,EAAC;AAAvB,IAzEJ,eA0EI,kDAAC,4DAAD;AAAU,SAAK,EAAE;AAAEyB,MAAAA,IAAI,EAAE;AAAR,KAAjB;AAA+B,UAAM,EAAC;AAAtC,kBACI,kDAAC,4DAAD;AAAU,UAAM,EAAC,UAAjB;AAA4B,QAAI,EAAE;AAAlC,kBACI,kDAAC,kDAAD;AAAW,QAAI,EAAC;AAAhB,KACK,UAAC8E,MAAD,SAAmC;AAAA,QAAxBC,GAAwB,SAAxBA,GAAwB;AAAA,QAAnBnC,MAAmB,SAAnBA,MAAmB;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AAChC,QAAMmC,MAAM,GAAG,SAATA,MAAS,CAACF,MAAD,EAAY;AACvBC,MAAAA,GAAG,CAAC;AAAEE,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,eAAe,EAAE,SAA/B;AAA0CC,QAAAA,eAAe,EAAE;AAA3D,OAAD,EAAkE,CAAlE,CAAH;AACH,KAFD;;AAGA,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAe;AAC7BzC,MAAAA,MAAM,CAACyC,SAAD,CAAN;AACH,KAFD;;AAGA,QAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,EAAP,EAAc;AAC1B3C,MAAAA,IAAI,CAAC0C,IAAD,EAAOC,EAAP,CAAJ;AACH,KAFD;;AAGA,wBACI,mHACI,kDAAC,4DAAD,QACKrH,QAAQ,iBAAI,kDAAC,6CAAD;AAAQ,UAAI,EAAC,QAAb;AAAsB,aAAO,EAAE;AAAA,eAAM6G,MAAM,CAACF,MAAD,CAAZ;AAAA,OAA/B;AAAqD,WAAK,EAAE;AAAEvG,QAAAA,KAAK,EAAE;AAAT;AAA5D,oBAA+E,kDAAC,0DAAD,OAA/E,cADjB,CADJ,EAIKuG,MAAM,CAACW,GAAP,CAAW,UAAC9C,KAAD,EAAQG,KAAR;AAAA,0BACR,kDAAC,aAAD;AAAe,WAAG,EAAEH,KAAK,CAACvI,GAA1B;AAA+B,YAAI,EAAEK,IAArC;AAA2C,cAAM,EAAE2K,SAAnD;AAA8D,YAAI,EAAEE,OAApE;AAA6E,aAAK,EAAE3C,KAApF;AAA2F,aAAK,EAAEG,KAAlG;AAAyG,cAAM,EAAEgC,MAAM,CAAC/B,MAAxH;AAAgI,iBAAS,EAAE9H,SAA3I;AAAsJ,gBAAQ,EAAEkD;AAAhK,QADQ;AAAA,KAAX,CAJL,CADJ;AAUH,GArBL,CADJ,CADJ,eA0BI,kDAAC,4DAAD;AAAU,QAAI,EAAE;AAAhB,KACK,CAACvD,OAAD,iBAAY,kDAAC,qEAAD;AAAW,QAAI,EAAEH,IAAjB;AAAuB,iBAAa,EAAEc;AAAtC,IADjB,CA1BJ,CA1EJ,CADJ,CATJ,EAoHKjB,SAAS,iBAAI,kDAAC,0DAAD;AAAQ,QAAI,EAAEA,SAAS,CAACmG;AAAxB,kBACV,kDAAC,6CAAD,qBACI,kDAAC,6CAAD;AAAQ,YAAQ,EAAE3F,UAAlB;AAA8B,WAAO,EAAEsD,QAAvC;AAAiD,QAAI,EAAC;AAAtD,eADJ,CADU,CApHlB,CADJ,CADJ;AAgIH,CA3MD","sources":["webpack://sgp/./src/pages/planeamento/ordemFabrico/FormPaletizacao.jsx","webpack://sgp/./src/pages/planeamento/paletizacaoSchema/FormPaletizacaoSchema.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport Portal from \"components/portal\";\r\nimport { Button, Spin, Form, Space, Input } from \"antd\";\r\nimport { LoadingOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport FormPaletizacaoSchema from '../paletizacaoSchema/FormPaletizacaoSchema';\r\nimport { OFabricoContext } from './FormOFabricoValidar';\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst Drawer = ({ showWrapper, setShowWrapper, parentReload }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n    const { record = {} } = showWrapper;\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type=\"drawer\"\r\n            destroyOnClose={true}\r\n            //width={width}\r\n            mask={true}\r\n            /* style={{ maginTop: \"48px\" }} */\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            width={800}\r\n            bodyStyle={{ height: \"450px\" /*  paddingBottom: 80 *//* , overflowY: \"auto\", minHeight: \"350px\", maxHeight: \"calc(100vh - 50px)\" */ }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n        >\r\n            <FormPaletizacaoSchema setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} />\r\n        </WrapperForm>\r\n    );\r\n}\r\n\r\nconst loadPaletizacoesLookup = async ({ artigo_cod, cliente_cod, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/paletizacoeslookup/`, filter: { artigo_cod, cliente_cod }, sort: [{ column: 'contentor_id' }, { column: 'designacao' }], cancelToken: token });\r\n    return rows;\r\n}\r\nconst getPaletizacaoDetails = async ({ paletizacao_id, token }) => {\r\n    if (!paletizacao_id) {\r\n        return [];\r\n    }\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/paletizacaodetailsget/`, filter: { paletizacao_id }, sort: [{ column: 'item_order', direction: 'DESC' }], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload/* , changedValues = {} */ }) => {\r\n    /* const { form, guides, schema, fieldStatus, ...ctx } = useContext(OFabricoContext); */\r\n    const [form] = Form.useForm();\r\n    const [guides, setGuides] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.aggItem.paletizacao_id));\r\n    const [showSchema, setShowSchema] = useState({ show: false });\r\n    const [paletizacoes, setPaletizacoes] = useState([]);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n\r\n    const init = () => {\r\n        (setFormTitle) && setFormTitle({ title: `Esquema de Paletização ${record.aggItem.cliente_nome}`, subTitle: `${record.aggItem.item_cod}` });\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"zzzz\", form.getFieldsValue(true))\r\n        init();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        loadData({ paletizacao_id: ((\"paletizacao_id\" in changedValues) ? changedValues.paletizacao_id : record.aggItem.paletizacao_id), token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Paletização Cancelled\"));\r\n    }, [changedValues]);\r\n\r\n\r\n\r\n    const onValuesChange = (changedValues, allValues) => {\r\n        if (\"paletizacao_id\" in changedValues) {\r\n            setChangedValues(changedValues);\r\n        }\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        const paletizacao_id = form.getFieldValue(\"paletizacao_id\");\r\n\r\n        const { tempof_id: ofabrico_id, of_id: ofabrico_cod, qty_encomenda: qty_item } = record.aggItem;\r\n        const artigo = {\r\n            artigo_thickness: record.aggItem.artigo.thickness,\r\n            artigo_diam: record.aggItem.artigo.diam_ref,\r\n            artigo_core: record.aggItem.artigo.core,\r\n            artigo_width: record.aggItem.artigo.lar,\r\n            qty_item: record.aggItem.qty_encomenda\r\n        };\r\n        const response = await fetchPost({ url: `${API_URL}/savetempordemfabrico/`, parameters: { type: \"paletizacao\", paletizacao_id, ofabrico_id, ofabrico_cod, artigo } });\r\n        if (response.data.status !== \"error\") {\r\n            parentReload({ agg_id: record.aggItem.id });\r\n            closeParent();\r\n        }\r\n        setSubmitting(false);\r\n        // const status = { error: [], warning: [], info: [], success: [] };\r\n        // const msgKeys = [\"start_date\", \"start_hour\", \"end_date\", \"end_hour\"];\r\n        // const { cliente_cod, cliente_nome, iorder, item, ofabrico, produto_id, item_id } = record;\r\n        // const { core_cod: { value: core_cod, label: core_des } = {} } = values;\r\n        // const { cortes_id, cortesordem_id } = form.getFieldsValue(true);\r\n        // let diff = {};\r\n        // const v = schema().custom((v, h) => {\r\n        //     const { start_date, start_hour, end_date, end_hour } = v;\r\n        //     diff = dateTimeDiffValidator(start_date, start_hour, end_date, end_hour);\r\n        //     if (diff.errors == true) {\r\n        //         return h.message(\"A Data de Fim tem de ser Maior que a Data de Início\", { key: \"start_date\", label: \"start_date\" })\r\n        //     }\r\n        // }).validate(values, { abortEarly: false });\r\n        // status.error = [...status.error, ...(v.error ? v.error?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        // status.warning = [...status.warning, ...(v.warning ? v.warning?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        // if (!v.error) { }\r\n        // if (status.error.length === 0) {\r\n        //     const response = await fetchPost({ url: `${API_URL}/savetempordemfabrico/`, parameters: { ...values, cliente_cod, cliente_nome, iorder, item, item_id, ofabrico, core_cod, core_des, produto_id, cortes_id, cortesordem_id } });\r\n        //     setResultMessage(response.data);\r\n        // }\r\n        // setFieldStatus(diff.fields);\r\n        // setFormStatus(status);\r\n    }\r\n\r\n\r\n    /*     useEffect(() => {\r\n            const cancelFetch = cancelToken();\r\n            if (\"paletizacao_id\" in changedValues) {\r\n                setLoading(true);\r\n                loadData({ paletizacao_id: changedValues.paletizacao_id, token: cancelFetch });\r\n            }\r\n            return (() => cancelFetch.cancel(\"Form Paletização Cancelled\"));\r\n        }, [changedValues]); */\r\n\r\n    const loadData = (data = {}, type = \"init\") => {\r\n        const { paletizacao_id, token } = data;\r\n        switch (type) {\r\n            case \"lookup\":\r\n                setLoading(true);\r\n                (async () => {\r\n                    setPaletizacoes(await loadPaletizacoesLookup({ artigo_cod: record.aggItem.item_cod, cliente_cod: record.aggItem.cliente_cod, token }));\r\n                    setLoading(false);\r\n                })();\r\n                break;\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    let _paletizacoes = paletizacoes;\r\n                    if (record.aggItem.item_cod) {\r\n                        _paletizacoes = await loadPaletizacoesLookup({ artigo_cod: record.aggItem.item_cod, cliente_cod: record.aggItem.cliente_cod, token });\r\n                        setPaletizacoes(_paletizacoes);\r\n                    }\r\n                    if (paletizacao_id) {\r\n                        const [paletizacao] = _paletizacoes.filter(v => v.id === paletizacao_id);\r\n                        const paletizacaoDetails = await getPaletizacaoDetails({ paletizacao_id, token });\r\n                        form.setFieldsValue({ ...paletizacao, paletizacao_id: paletizacao.id, paletizacao: [...paletizacaoDetails] });\r\n                    }\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    const onShowSchema = (newSchema = false, forInput = false) => {\r\n        const { cliente_cod, cliente_nome, item_cod, paletizacao_id } = record.aggItem;\r\n        if (newSchema) {\r\n            setShowSchema(prev => ({ ...prev, show: !prev.show, record: { cliente_cod, cliente_nome, artigo_cod: item_cod, paletizacao_id }, forInput }));\r\n        } else {\r\n            setShowSchema(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue(true) }, forInput }));\r\n        }\r\n    }\r\n\r\n    const onSubmit = useCallback(async () => {\r\n        setSubmitting(true);\r\n        form.submit();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <Drawer showWrapper={showSchema} setShowWrapper={setShowSchema} parentReload={loadData} />\r\n                <Form form={form} name={`form-of-paletizacao`} onFinish={onFinish} onValuesChange={onValuesChange}>\r\n                    <FormLayout\r\n                        id=\"LAY-PALETIZACAO\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            //wide: [3, 2, 1, '*'],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            addons: {}, //top|right|center|bottom|left\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        <FieldSet>\r\n                            <Toolbar\r\n                                style={{ width: \"100%\" }}\r\n                                left={\r\n                                    <FieldSet>\r\n                                        <Field name=\"paletizacao_id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Paletização\", pos: \"left\" }} addons={{\r\n                                            ...(form.getFieldValue(\"paletizacao_id\") && { right: <Button onClick={() => onShowSchema()} style={{ marginLeft: \"3px\" }} size=\"small\"><EditOutlined style={{ fontSize: \"16px\" }} /></Button> })\r\n                                        }}>\r\n                                            <SelectField allowClear size=\"small\" data={paletizacoes} keyField=\"id\" textField=\"designacao\"\r\n                                                optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ width: \"70px\" }}><b>{d[\"contentor_id\"]}</b></div><div style={{ flex: 1 }}>{d[textField]}</div><div style={{ width: \"20px\" }}>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                                            />\r\n                                        </Field>\r\n                                    </FieldSet>\r\n                                }\r\n                                right={<Button onClick={() => onShowSchema(true)}>Novo Esquema</Button>}\r\n                            />\r\n                        </FieldSet>\r\n                        <FieldSet>\r\n                            {(!loading && form.getFieldValue(\"paletizacao_id\")) && <FormPaletizacaoSchema record={form.getFieldsValue(true)} wrapForm={false} forInput={false} parentReload={loadData} />}\r\n                        </FieldSet>\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button disabled={submitting} onClick={onSubmit} type=\"primary\">Guardar</Button>\r\n                        {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </Spin>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber } from \"antd\";\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { CgArrowDownO, CgArrowUpO, CgCloseO } from 'react-icons/cg';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, PALETIZACAO_ITEMS, PALETE_SIZES, CONTENTORES_OPTIONS, CINTASPALETES_OPTIONS } from 'config';\r\nimport { OFabricoContext } from '../ordemFabrico/FormOFabricoValidar';\r\nimport SvgSchema from '../paletizacaoSchema/SvgSchema';\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        npaletes: Joi.number().positive().label(\"Paletes/Contentor\").required(),\r\n        palete_maxaltura: Joi.number().positive().precision(2).label(\"Altura Máx. Palete (metros)\").required(),\r\n        //designacao: Joi.string().label(\"Designação\").required(),\r\n        netiquetas_bobine: Joi.number().positive().precision(2).label(\"Etiqueta/Bobine\").required(),\r\n        netiquetas_lote: Joi.number().positive().precision(2).label(\"Etiqueta do Lote da Palete\").required(),\r\n        netiquetas_final: Joi.number().positive().precision(2).label(\"Etiqueta Final da Palete\").required(),\r\n        folha_identificativa: Joi.number().min(0).precision(2).label(\"Folha Identificativa Palete\").required(),\r\n        cintas: Joi.number().valid(0, 1),\r\n        ncintas: Joi.when('cintas', { is: 1, then: Joi.number().positive().required() }),\r\n        paletizacao: Joi.array().min(1).label(\"Items da Paletização\").required()\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst SubFormPalete = ({ form, field, remove, move, index, length, operation, forInput }) => {\r\n    const [item, setItem] = useState(1);\r\n    useEffect(() => {\r\n        if (operation.key === \"update\") {\r\n            setItem(form.getFieldValue([\"paletizacao\", field.name, \"item_id\"]));\r\n        }\r\n    }, []);\r\n    const onSelect = (f) => {\r\n        setItem(form.getFieldValue([\"paletizacao\", f, \"item_id\"]));\r\n    }\r\n    return (\r\n        <FieldSet layout=\"horizontal\" field={{ wide: [1, 1, 8, 5, 1] }}>\r\n            <FieldItem label={{ enabled: false }}>{forInput && index > 0 && <IconButton onClick={() => move(index, index - 1)} style={{ alignSelf: \"center\" }}><CgArrowUpO /></IconButton>}</FieldItem>\r\n            <FieldItem label={{ enabled: false }}>{forInput && index < (length - 1) && <IconButton onClick={() => move(index, index + 1)} style={{ alignSelf: \"center\" }}><CgArrowDownO /></IconButton>}</FieldItem>\r\n            <Field label={{ enabled: false }} name={[field.name, \"item_id\"]}>\r\n                <SelectField onChange={() => onSelect(field.name)} size=\"small\" data={PALETIZACAO_ITEMS} keyField=\"key\" textField=\"value\" />\r\n            </Field>\r\n            {item === 1 && <Field label={{ enabled: false }} name={[field.name, \"item_paletesize\"]}>\r\n                <SelectField size=\"small\" data={PALETE_SIZES} keyField=\"key\" textField=\"value\" />\r\n            </Field>\r\n            }\r\n            {item === 2 && <Field label={{ enabled: false }} name={[field.name, \"item_numbobines\"]}>\r\n                <InputNumber size=\"small\" min={1} max={80} />\r\n            </Field>\r\n            }\r\n            {(item > 2 || item === undefined) && <FieldItem label={{ enabled: false }} />}\r\n            <FieldItem label={{ enabled: false }}>{forInput && <IconButton onClick={() => remove(field.name)} style={{ alignSelf: \"center\" }}><CgCloseO /></IconButton>}</FieldItem>\r\n        </FieldSet>\r\n\r\n    );\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const ctx = useContext(OFabricoContext);\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.paletizacao_id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n\r\n    const init = () => {\r\n        (async () => {\r\n            if (operation.key === \"update\") {\r\n                (setFormTitle) && setFormTitle({ title: `Editar Esquema de Paletização ${record.cliente_nome}`, subTitle: `${record.artigo_cod}` });\r\n                form.setFieldsValue({ ...record });\r\n            } else {\r\n                (setFormTitle) && setFormTitle({ title: `Novo Esquema de Paletização ${record.cliente_nome}`, subTitle: `${record.artigo_cod}` });\r\n                form.setFieldsValue({ contentor_id: \"Camião\", cintas_palete: 1, ncintas: 2, netiquetas_bobine: 2, netiquetas_lote: 4, netiquetas_final: 1, npaletes: 24, palete_maxaltura: 2.55, folha_identificativa: 1 });\r\n            }\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const onValuesChange = (changedValues, allValues) => {\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const msgKeys = [\"paletizacao\"];\r\n        const v = schema().validate(values, { abortEarly: false });\r\n        status.error = [...status.error, ...(v.error ? v.error?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        if (!v.error && status.error.length === 0) {\r\n            const response = await fetchPost({ url: `${API_URL}/newpaletizacaoschema/`, parameters: { ...values, id: record?.paletizacao_id, cliente_cod: record.cliente_cod, cliente_nome: record.cliente_nome, artigo_cod: record.artigo_cod } });\r\n            if (response.data.status !== \"error\") {\r\n                if (operation.key === \"update\") {\r\n                    parentReload({ paletizacao_id: operation.values.id });\r\n                } else {\r\n                    parentReload({}, \"lookup\");\r\n                }\r\n            }\r\n            setResultMessage(response.data);\r\n        }\r\n        setSubmitting(false);\r\n        setFormStatus(status);\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n        setSubmitting(false);\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setSubmitting(false);\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    const onSubmit = useCallback(async () => {\r\n        setSubmitting(true);\r\n        form.submit();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Criar Novo Esquema</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`fps`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-PALETIZACAO_SCHEMA\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        {forInput && <>\r\n                            <FieldSet margin={false} field={{ wide: [4, 4] }}>\r\n                                <Field name=\"contentor_id\" label={{ enabled: true, text: \"Contentor\" }}>\r\n                                    <SelectField size=\"small\" data={CONTENTORES_OPTIONS} keyField=\"value\" textField=\"label\"\r\n                                        optionsRender={(d, keyField, textField) => ({ label: d[keyField], value: d[keyField] })}\r\n                                    />\r\n                                </Field>\r\n                                <Field name=\"designacao\" label={{ enabled: true, text: \"Designação\" }}><Input size=\"small\" /></Field>\r\n                            </FieldSet>\r\n                            <HorizontalRule margin=\"12px\" />\r\n                        </>\r\n                        }\r\n                        <FieldSet margin={false} field={{ wide: 16 }}>\r\n                            <FieldSet margin={false} split={3} field={{ alert: { tooltip: true }, layout: { center: \"min-width: 70px; max-width: 70px; align-self:center;\" }, label: { pos: \"right\", width: \"100%\" } }} layout=\"vertical\">\r\n                                <Field label={{ text: \"Paletes/Contentor\" }} name=\"npaletes\"><InputNumber size=\"small\" min={1} max={150} /></Field>\r\n                                <Field label={{ text: \"Altura Máx. Palete (metros)\" }} name=\"palete_maxaltura\"><InputNumber size=\"small\" min={1} max={150} /></Field>\r\n                                <Field required={false} name=\"paletes_sobrepostas\" label={{ enabled: true, text: \"Paletes Sobrepostas\" }}><CheckboxField disabled={true} /></Field>\r\n                            </FieldSet>\r\n                            <FieldSet margin={false} split={3} field={{ layout: { center: \"min-width: 70px;max-width: 70px; align-self:center;\" }, label: { pos: \"right\", width: \"100%\" } }} layout=\"vertical\">\r\n                                <Field name=\"netiquetas_bobine\" label={{ enabled: true, text: \"Etiqueta/Bobine\" }}><InputNumber size=\"small\" min={1} max={10} /></Field>\r\n                                <Field name=\"netiquetas_lote\" label={{ enabled: true, text: \"Etiqueta do Lote da Palete\" }}><InputNumber size=\"small\" min={1} max={10} /></Field>\r\n                                <Field name=\"netiquetas_final\" label={{ enabled: true, text: \"Etiqueta Final da Palete\" }}><InputNumber size=\"small\" min={1} max={10} /></Field>\r\n                            </FieldSet>\r\n                            <FieldSet margin={false} split={3} field={{ layout: { center: \"min-width: 20px;max-width: 20px; align-self:center;\" }, label: { pos: \"right\", width: \"100%\" } }} layout=\"vertical\">\r\n                                <Field required={false} name=\"filmeestiravel_bobines\" label={{ enabled: true, text: \"Filme Estirável/Palete\" }}><CheckboxField /></Field>\r\n                                <Field required={false} name=\"filmeestiravel_exterior\" label={{ enabled: true, text: \"Filme Estirável Exterior\" }}><CheckboxField /></Field>\r\n                            </FieldSet>\r\n                        </FieldSet>\r\n\r\n                        <FieldSet wide={16} margin={false} field={{ wide: [2, 2, 3, 5, '*'], style: { alignSelf: \"center\" } }}>\r\n                            <Field name=\"cintas\" style={{ minWidth: \"20px\", alignSelf: \"center\" }} label={{ enabled: false }}><CheckboxField /></Field>\r\n                            <FieldItem label={{ enabled: false }}>\r\n                                <Item shouldUpdate={(prevValues, curValues) => prevValues?.cintas !== curValues?.cintas}>\r\n                                    {() =>\r\n                                        <Field rule={schema(['cintas', 'ncintas'])} allValues={form.getFieldsValue(true)} layout={{ center: \"min-width: 50px;max-width: 50px; align-self:center;\" }} name=\"ncintas\" label={{ enabled: true, text: \"Cintas\", pos: \"right\", colon: false }}>\r\n                                            <InputNumber disabled={form.getFieldValue([\"cintas\"]) !== 1} size=\"small\" min={1} max={10} />\r\n                                        </Field>\r\n                                    }\r\n                                </Item>\r\n                            </FieldItem>\r\n                            <FieldItem label={{ enabled: false }}>\r\n                                <Item shouldUpdate={(prevValues, curValues) => prevValues?.cintas !== curValues?.cintas}>\r\n                                    {() =>\r\n                                        <Field name=\"cintas_palete\" layout={{ center: \"align-self:center;\" }} label={{ enabled: false }}>\r\n                                            <SelectField size=\"small\" data={CINTASPALETES_OPTIONS} keyField=\"value\" textField=\"label\" disabled={form.getFieldValue([\"cintas\"]) !== 1}\r\n                                                optionsRender={(d, keyField, textField) => ({ label: d[textField], value: d[keyField] })}\r\n                                            />\r\n                                        </Field>\r\n                                    }</Item>\r\n                            </FieldItem>\r\n                            <Field name=\"folha_identificativa\" required={false} layout={{ center: \"align-self:center;\" }} label={{ enabled: true, text: \"Folha Identificativa da Palete\", pos: \"left\", width: \"100%\" }}><InputNumber size=\"small\" min={0} max={10} /></Field>\r\n                        </FieldSet>\r\n                        <HorizontalRule margin=\"12px\" />\r\n                        <FieldSet field={{ wide: 16 }} layout=\"horizontal\">\r\n                            <FieldSet layout=\"vertical\" wide={7}>\r\n                                <Form.List name=\"paletizacao\">\r\n                                    {(fields, { add, remove, move }) => {\r\n                                        const addRow = (fields) => {\r\n                                            add({ item_id: 1, item_paletesize: '970x970', item_numbobines: 10 }, 0);\r\n                                        }\r\n                                        const removeRow = (fieldName) => {\r\n                                            remove(fieldName);\r\n                                        }\r\n                                        const moveRow = (from, to) => {\r\n                                            move(from, to);\r\n                                        }\r\n                                        return (\r\n                                            <>\r\n                                                <FieldSet>\r\n                                                    {forInput && <Button type=\"dashed\" onClick={() => addRow(fields)} style={{ width: \"100%\" }}><PlusOutlined />Adicionar</Button>}\r\n                                                </FieldSet>\r\n                                                {fields.map((field, index) => (\r\n                                                    <SubFormPalete key={field.key} form={form} remove={removeRow} move={moveRow} field={field} index={index} length={fields.length} operation={operation} forInput={forInput} />\r\n                                                ))}\r\n                                            </>\r\n                                        );\r\n                                    }}\r\n                                </Form.List>\r\n                            </FieldSet>\r\n                            <FieldSet wide={9}>\r\n                                {!loading && <SvgSchema form={form} changedValues={changedValues} />}\r\n                            </FieldSet>\r\n                        </FieldSet>\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button disabled={submitting} onClick={onSubmit} type=\"primary\">Guardar</Button>\r\n                        {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}"],"names":["React","useEffect","useState","useCallback","useRef","useContext","createUseStyles","styled","dayjs","Joi","fetch","fetchPost","cancelToken","getSchema","API_URL","WrapperForm","TitleForm","FormLayout","Field","FieldSet","Label","LabelField","FieldItem","AlertsContainer","Item","SelectField","InputAddon","Toolbar","Portal","Button","Spin","Form","Space","Input","LoadingOutlined","EditOutlined","DATE_FORMAT","DATETIME_FORMAT","FormPaletizacaoSchema","OFabricoContext","schema","keys","excludeKeys","unknown","Drawer","showWrapper","setShowWrapper","parentReload","formTitle","setFormTitle","iref","record","onVisible","prev","show","title","subTitle","height","textAlign","loadPaletizacoesLookup","artigo_cod","cliente_cod","token","url","filter","sort","column","rows","data","getPaletizacaoDetails","paletizacao_id","direction","setId","id","key","values","parentRef","closeParent","useForm","form","guides","setGuides","loading","setLoading","submitting","setSubmitting","aggItem","operation","setOperation","showSchema","setShowSchema","paletizacoes","setPaletizacoes","changedValues","setChangedValues","status","resultMessage","setResultMessage","init","cliente_nome","item_cod","console","log","getFieldsValue","cancelFetch","loadData","cancel","onValuesChange","allValues","onFinish","getFieldValue","ofabrico_id","tempof_id","ofabrico_cod","of_id","qty_item","qty_encomenda","artigo","artigo_thickness","thickness","artigo_diam","diam_ref","artigo_core","core","artigo_width","lar","parameters","type","response","agg_id","_paletizacoes","v","paletizacao","paletizacaoDetails","setFieldsValue","onShowSchema","newSchema","forInput","onSubmit","submit","fontSize","width","padding","margin","overflow","label","enabled","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","layout","top","right","center","bottom","left","addons","required","style","alignSelf","wide","text","marginLeft","d","keyField","textField","display","flex","value","current","CheckboxField","HorizontalRule","AlertMessages","IconButton","ResultMessage","InputNumber","PlusOutlined","CgArrowDownO","CgArrowUpO","CgCloseO","PALETIZACAO_ITEMS","PALETE_SIZES","CONTENTORES_OPTIONS","CINTASPALETES_OPTIONS","SvgSchema","npaletes","number","positive","palete_maxaltura","precision","netiquetas_bobine","netiquetas_lote","netiquetas_final","folha_identificativa","min","cintas","valid","ncintas","when","is","then","array","SubFormPalete","field","remove","move","index","length","item","setItem","name","onSelect","f","undefined","wrapForm","ctx","error","warning","info","success","formStatus","setFormStatus","contentor_id","cintas_palete","msgKeys","validate","abortEarly","details","includes","context","onSuccessOK","resetFields","onErrorOK","onClose","reload","minWidth","prevValues","curValues","fields","add","addRow","item_id","item_paletesize","item_numbobines","removeRow","fieldName","moveRow","from","to","map"],"sourceRoot":""}