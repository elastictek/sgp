{"version":3,"file":"chunks/src_pages_planeamento_ordemFabrico_FormAgg_jsx.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/planeamento/agg/FormAggUpsert.jsx","webpack://sgp/./src/pages/planeamento/ordemFabrico/FormAgg.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace, InputAddon } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber, DatePicker } from \"antd\";\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport { OFabricoContext } from '../ordemFabrico/FormOFabricoValidar';\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nconst loadAggsLookup = async ({ produto_id, agg_id }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/tempaggofabricolookup/`, filter: { status: 0, produto_id, agg_id }, parameters: { group: false }, sort: [] });\r\n    return rows;\r\n}\r\n\r\nexport default ({ setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const ctx = useContext(OFabricoContext);\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(ctx.agg_id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n\r\n    const init = () => {\r\n        const { produto_id, produto_cod, of_cod, agg_id } = ctx;\r\n        (async () => {\r\n            const aggsLookup = await loadAggsLookup({ produto_id, agg_id });\r\n            (setFormTitle) && setFormTitle({ title: `Agrupar Ordens Fabrico` });\r\n            const aggs = aggsLookup.filter(v => (v.id == agg_id || v.agg_ofid_original == v.id)).map(v => {\r\n                return ({\r\n                    checked: (agg_id === v.id ? 1 : 0),\r\n                    tempof_id: v.tempof_id,\r\n                    of_id: v.of_id,\r\n                    artigo_cod: v.item_cod,\r\n                    cliente_nome: v.cliente_nome,\r\n                    iorder: v.iorder,\r\n                    item_nome: v.item_nome,\r\n                    enabled: (of_cod == v.of_id ? false : true)\r\n                });\r\n            });\r\n            form.setFieldsValue({ aggs });\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n        return (() => { });\r\n    }, []);\r\n\r\n    const onValuesChange = (changedValues) => {\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        const response = await fetchPost({ url: `${API_URL}/savetempagg/`, parameters: { ...values, agg_id: ctx.agg_id } });\r\n        if (response.data.status !== \"error\") {\r\n            parentReload({ agg_id: ctx.agg_id }, \"init\");\r\n            setSubmitting(false);\r\n            closeParent();\r\n        } else {\r\n            setSubmitting(false);\r\n            setResultMessage(response.data);\r\n        }\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            setSubmitting(false);\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setSubmitting(false);\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n    \r\n    const onSubmit = useCallback(() =>{\r\n        setSubmitting(true);\r\n        form.submit();\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>xxxx</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`fps`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-AGG-UPSERT\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\" /* pos: (forInput ? \"top\" : \"left\"), align: (forInput ? \"start\" : \"end\"), vAlign: \"center\", width: \"140px\" */, wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"center\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: false, layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        <Form.List name=\"aggs\">\r\n                            {(fields, { }) => {\r\n                                return (\r\n                                    <FieldSet layout=\"vertical\" margin={false}>\r\n                                        {fields.map((field, index) => (\r\n                                            <FieldSet key={field.key} field={{ wide: [1] }} margin=\"0px 0px 3px 0px\" padding=\"5px\" style={{ border: \"solid 1px #d9d9d9\", borderRadius: \"3px\" }}>\r\n                                                <Field forInput={true} name={[field.name, `checked`]} label={{ enabled: false }}><CheckboxField disabled={form.getFieldValue([\"aggs\", field.name, \"enabled\"]) ? false : true} /></Field>\r\n                                                <FieldSet margin={false} wide={15} layout=\"vertical\">\r\n                                                    <FieldSet field={{ wide: [5, 5, 6], forViewBorder: false }} margin={false} wide={16} style={{ fontWeight: 700 }}>\r\n                                                        <Field forInput={false} name={[field.name, `of_id`]} label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                                        <Field forInput={false} name={[field.name, `iorder`]} label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                                        <Field forInput={false} name={[field.name, `artigo_cod`]} label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                                    </FieldSet>\r\n                                                    <FieldSet field={{ wide: [7, 9], forViewBorder: false }} margin={false} wide={16}>\r\n                                                        <Field forInput={false} name={[field.name, `cliente_nome`]} label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                                        <Field forInput={false} name={[field.name, `item_nome`]} label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                                    </FieldSet>\r\n                                                </FieldSet>\r\n                                            </FieldSet>\r\n                                        ))}\r\n                                    </FieldSet>\r\n                                )\r\n                            }}\r\n                        </Form.List>\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button disabled={submitting} type=\"primary\" onClick={onSubmit}>Guardar</Button>\r\n                        {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, Suspense, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon, SelectDebounceField } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport YScroll from \"components/YScroll\";\r\nimport { Button, Spin, Tag, List, Typography, Form, InputNumber, Input, Card, Collapse } from \"antd\";\r\nconst { Panel } = Collapse;\r\nimport { LoadingOutlined, EditOutlined, PlusOutlined, EllipsisOutlined, SettingOutlined, PaperClipOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, THICKNESS } from 'config';\r\nimport FormAggUpsert from '../agg/FormAggUpsert';\r\nconst FormPaletesStockUpsert = React.lazy(() => import('../paletesStock/FormPaletesStockUpsert'));\r\nconst FormPaletizacao = React.lazy(() => import('./FormPaletizacao'));\r\nconst FormSettings = React.lazy(() => import('./FormSettings'));\r\nconst FormAttachments = React.lazy(() => import('./FormAttachments'));\r\nimport { remove } from 'ramda';\r\nimport { MdProductionQuantityLimits } from 'react-icons/md';\r\nimport { FaPallet, FaWarehouse, FaTape } from 'react-icons/fa';\r\n\r\nimport { OFabricoContext } from '../ordemFabrico/FormOFabricoValidar';\r\nimport SvgSchema from '../paletizacaoSchema/SvgSchema';\r\n\r\nconst StyledCard = styled(Card)`\r\n    .ant-card-body{\r\n        height:250px;\r\n        max-height:400px; \r\n        overflow-y:hidden;\r\n    }\r\n\r\n`;\r\n\r\nconst StyledCollapse = styled(Collapse)`\r\n\r\n    .ant-collapse-header{\r\n        background-color:#f5f5f5;\r\n        border-radius: 2px!important;\r\n        padding:1px 1px!important;\r\n    }\r\n    .ant-collapse-content > .ant-collapse-content-box{\r\n        padding:15px 15px!important;\r\n    }\r\n\r\n`;\r\n\r\n\r\n\r\nconst Drawer = ({ showWrapper, setShowWrapper, parentReload }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n    const { record = {} } = showWrapper;\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type={showWrapper.mode}\r\n            destroyOnClose={true}\r\n            width={800}\r\n            mask={true}\r\n            /* style={{ maginTop: \"48px\" }} */\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            bodyStyle={{ height: \"450px\" /*  paddingBottom: 80 *//* , overflowY: \"auto\", minHeight: \"350px\", maxHeight: \"calc(100vh - 50px)\" */ }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n        >\r\n            <YScroll>\r\n                {!showWrapper.type && <FormAggUpsert setFormTitle={setFormTitle} /* record={record} */ parentRef={iref} closeParent={onVisible} parentReload={parentReload} />}\r\n                {showWrapper.type === \"paletes_stock\" && <Suspense fallback={<></>}><FormPaletesStockUpsert setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.type === \"schema\" && <Suspense fallback={<></>}><FormPaletizacao setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.type === \"settings\" && <Suspense fallback={<></>}><FormSettings setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n                {showWrapper.type === \"attachments\" && <Suspense fallback={<></>}><FormAttachments setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} /></Suspense>}\r\n            </YScroll>\r\n        </WrapperForm>\r\n    );\r\n}\r\n\r\nconst loadAggsLookup = async (produto_id, token) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/tempaggofabricolookup/`, filter: { status: 6, produto_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nconst loadPaletesGet = async (tempof_id) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/paletesstockget/`, parameters: {}, pagination: { enabled: false }, filter: { of_id: tempof_id }, sort: [] });\r\n    return rows;\r\n}\r\n\r\nconst PaletesStock = ({ item }) => {\r\n    return (\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", flexDirection: \"row-reverse\" }}>\r\n            {item.paletesstock && item.paletesstock.map((v, idx) => { return <div style={{ flex: \"1 1 80px\" }} key={`ps-${item.tempof_id}-${idx}`}>{v}</div> })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CardAgg = ({ aggItem, setShowForm, /* aggItem */ of_id }) => {\r\n    const paletes = JSON.parse(aggItem?.n_paletes);\r\n\r\n    const onAction = (op) => {\r\n        switch (op) {\r\n            case 'paletes_stock':\r\n                setShowForm(prev => ({ ...prev, type: op, mode: \"drawer\", show: !prev.show, record: { /* aggItem, */ aggItem, of_id } }));\r\n                break;\r\n            case 'schema':\r\n                setShowForm(prev => ({ ...prev, type: op, mode: \"drawer\", show: !prev.show, record: { /* aggItem, */ aggItem, of_id } }));\r\n                break;\r\n            case 'settings':\r\n                console.log(\"sssss\",aggItem,of_id)\r\n                setShowForm(prev => ({ ...prev, type: op, mode: \"drawer\", show: !prev.show, record: { /* aggItem, */ aggItem, of_id } }));\r\n                break;\r\n            case 'attachments':\r\n                setShowForm(prev => ({ ...prev, type: op, mode: \"drawer\", show: !prev.show, record: { /* aggItem, */ aggItem, of_id } }));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <List.Item>\r\n            <StyledCard hoverable\r\n                style={{ width: '100%'/* , height:\"300px\", maxHeight:\"400px\", overflowY:\"auto\" */ }}\r\n                headStyle={{ backgroundColor: \"#002766\", color: \"#fff\" }}\r\n                title={<div>\r\n                    <div style={{ fontWeight: 700, fontSize: \"14px\" }}>{aggItem.of_id}</div>\r\n                    <div style={{ color: \"#fff\", fontSize: \".7rem\" }}>{aggItem.item_cod} - {aggItem.cliente_nome}</div>\r\n                </div>} size=\"small\"\r\n                actions={[\r\n                    <div key=\"settings\" onClick={() => onAction('settings')} title=\"Outras definições\">Definições</div>,\r\n                    /* <FaPallet key=\"schema\" onClick={() => onAction('schema')} title=\"Paletização (Esquema)\" />, */\r\n                    /* <FaWarehouse key=\"paletes\" onClick={() => onAction('paletes_stock')} title=\"Paletes em Stock\" />, */\r\n                    <div key=\"schema\" onClick={() => onAction('schema')} title=\"Paletização (Esquema)\">Paletização</div>,\r\n                    <div key=\"paletes\" onClick={() => onAction('paletes_stock')}>Stock</div>,\r\n                    <div key=\"attachments\" onClick={() => onAction('attachments')}><span><PaperClipOutlined />Anexos</span></div>\r\n                    /* <div key=\"quantity\" onClick={() => onAction('quantity')} title=\"Quantidades\">Quantidades</div> */\r\n                    /*<SettingOutlined key=\"settings\" onClick={() => onAction('settings')} title=\"Outras definições\" />,*/\r\n                    /*<MdProductionQuantityLimits key=\"quantity\" onClick={() => onAction('quantity')} title=\"Quantidades\" />*/\r\n                    /*                     <EditOutlined key=\"edit\" />,\r\n                                        <EllipsisOutlined key=\"ellipsis\" />, */\r\n                ]}\r\n            >\r\n                <YScroll>\r\n                    <FieldSet wide={16} margin={false} layout=\"vertical\">\r\n                        <StyledCollapse defaultActiveKey={['1']} expandIconPosition=\"right\" bordered>\r\n                            <Panel header={<div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"80%\" }}><div><b>Encomenda</b></div><div>{aggItem.qty_encomenda} m&#178;</div></div>} key=\"1\">\r\n                                <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}><div>{aggItem.linear_meters.toFixed(2)}</div><div>m/bobine</div></div>\r\n                                <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}><div>{aggItem.sqm_bobine.toFixed(2)}</div><div>m&#178;/bobine</div></div>\r\n                                <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}><div>{(aggItem.qty_encomenda / aggItem.sqm_bobine).toFixed(2)}</div><div>bobines</div></div>\r\n                                {paletes?.items && <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}><div>{paletes.total.n_paletes.toFixed(2)}</div><div>paletes</div></div>}\r\n                                {paletes?.items && <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}><div>{paletes.total.sqm_contentor.toFixed(2)}</div><div>m&#178;/contentor</div></div>}\r\n                                {paletes?.items && <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}><div>{(aggItem.qty_encomenda / paletes.total.sqm_contentor).toFixed(2)}</div><div>contentores</div></div>}\r\n                            </Panel>\r\n                            <Panel header={<div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"80%\" }}><div><b>Paletização</b></div></div>} key=\"2\">\r\n                                {paletes?.items && paletes.items.map((v, idx) => {\r\n                                    return (\r\n                                        <div style={{ borderBottom: \"20px\" }} key={`pc-${aggItem.name}-${v.id}`}>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", borderBottom: \"solid 1px #d9d9d9\" }}><div><b>Palete</b> {idx + 1}</div><div><b>Bobines</b> {v.num_bobines}</div></div>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}><div style={{ color: \"#595959\" }}>m&#178;</div><div>{v.sqm_palete.toFixed(2)}</div></div>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}><div style={{ color: \"#595959\" }}>Nº Paletes</div><div>{(paletes.total.n_paletes / paletes.items.length).toFixed(2)}</div></div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                                <SvgSchema items={aggItem} width=\"100%\" height=\"100%\" />\r\n                            </Panel>\r\n                            {aggItem?.paletesstock?.length && <Panel header={<div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"80%\" }}><div><b>{aggItem?.paletesstock?.length} Paletes de Stock</b></div></div>} key=\"3\">\r\n                                <div style={{ height: \"150px\", overflowY: \"hidden\" }}>\r\n                                    <YScroll>\r\n                                        <PaletesStock item={aggItem} />\r\n                                    </YScroll>\r\n                                </div>\r\n                            </Panel>\r\n                            }\r\n                        </StyledCollapse>\r\n\r\n                    </FieldSet>\r\n                </YScroll>\r\n\r\n\r\n            </StyledCard>\r\n        </List.Item>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ({ /* changedValues */ }) => {\r\n    const { form, guides, schema, ...ctx } = useContext(OFabricoContext);\r\n    //temp_ofabrico_agg, item_id, form, guides, schema\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [showForm, setShowForm] = useState({ show: false, type: null });\r\n    const [aggs, setAggs] = useState([]);\r\n    const [aggId, setAggId] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        /*         console.log(\"FORM-AGG->\", ctx) */\r\n        const cancelFetch = cancelToken();\r\n        loadData({ agg_id: ctx.agg_id, token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Agg Cancelled\"));\r\n    }, []);\r\n\r\n    /*     useEffect(() => {\r\n            const cancelFetch = cancelToken();\r\n            if (changedValues) {\r\n                console.log(\"CHANGED\",changedValues)\r\n                if (\"agg_id\" in changedValues) {\r\n                    setLoading(true);\r\n                    loadData({ agg_id: changedValues.agg_id, token: cancelFetch });\r\n                }\r\n            }\r\n            return (() => cancelFetch.cancel(\"Form Agg Cancelled\"));\r\n        }, [changedValues]); */\r\n\r\n    const loadData = (data = {}, type = \"init\") => {\r\n        const { agg_id, token } = data;\r\n        switch (type) {\r\n            case \"lookup\":\r\n                setLoading(true);\r\n                (async () => {\r\n                    setAggs(await loadAggsLookup(ctx.produto_id, token));\r\n                    setLoading(false);\r\n                })();\r\n                break;\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    let _aggs = await loadAggsLookup(ctx.produto_id, token);\r\n                    setAggs(_aggs);\r\n                    console.log(\"LOAD-DATA-AGG\",agg_id)\r\n                    if (agg_id && _aggs[0]?.v) {\r\n                        //const { id, group_id, group_ofid, group_item_cod, group_qty_item } = _aggs[0].v.filter(v => v.id == agg_of_id)[0];\r\n                        const ret = _aggs[0].v.filter(v => v.id == agg_id);\r\n                        //setAggId({ id, group_id: group_id.split(','), group_ofid: group_ofid.split(','), group_item_cod: group_item_cod.split(','), group_qty_item: group_qty_item.split(',') });\r\n                        console.log(\"CHANGED\", _aggs[0].v.filter(v => v.id == agg_id))\r\n                        setAggId(_aggs[0].v.filter(v => v.id == agg_id));\r\n                        //console.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxxx\", { id, group_id: group_id.split(','), group_ofid: group_ofid.split(','), group_item_cod: group_item_cod.split(','), group_qty_item: group_qty_item.split(',') });\r\n                        //form.setFieldsValue({ thikness: THICKNESS });\r\n                        // let [artigoSpecs] = _artigosspecs.filter(v => v.id === artigospecs_id);\r\n                        // const artigoSpecsItems = await getArtigoSpecsItems({ artigospecs_id });\r\n                        // const fieldsValue = { nitems: artigoSpecsItems.length };\r\n                        // for (let [i, v] of artigoSpecsItems.entries()) {\r\n                        //     fieldsValue[`key-${i}`] = v.item_key;\r\n                        //     fieldsValue[`des-${i}`] = v.item_des;\r\n                        //     const vals = (typeof v.item_values === \"string\") ? JSON.parse(v.item_values) : v.item_values;\r\n                        //     for (let [iV, vV] of vals.entries()) {\r\n                        //         fieldsValue[`v${v.item_key}-${iV}`] = vV;\r\n                        //     }\r\n                        // }\r\n                        // artigoSpecs = { ...artigoSpecs, cliente_cod: { key: artigoSpecs.cliente_cod, value: artigoSpecs.cliente_cod, label: artigoSpecs.cliente_nome } };\r\n                        // form.setFieldsValue({ artigoSpecs, artigoSpecsItems: fieldsValue });\r\n                    }\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    const onShowForm = (/* newForm = false */) => {\r\n        /* const { produto_id, produto_cod, ofabrico, temp_ofabrico_agg, temp_ofabrico } = ctx; */\r\n        /* if (newForm) { */\r\n        setShowForm(prev => ({ ...prev, type: null, show: !prev.show, /* record: { produto_id, produto_cod, ofabrico, temp_ofabrico_agg, temp_ofabrico } */ }));\r\n        /* } else { */\r\n        //setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue(true) } }));\r\n        /* } */\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <Drawer showWrapper={showForm} setShowWrapper={setShowForm} parentReload={loadData} />\r\n                <FormLayout\r\n                    id=\"LAY-AGGS\"\r\n                    guides={guides}\r\n                    layout=\"vertical\"\r\n                    style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{\r\n                        //wide: [3, 2, 1, '*'],\r\n                        margin: \"2px\", overflow: false, guides: guides,\r\n                        label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", width: \"180px\", wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                        alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                        layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                        addons: {}, //top|right|center|bottom|left\r\n                        required: true,\r\n                        style: { alignSelf: \"top\" }\r\n                    }}\r\n                    fieldSet={{\r\n                        guides: guides,\r\n                        wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                    }}\r\n                >\r\n                    <FieldSet margin={false}>\r\n                        <Toolbar\r\n                            style={{ width: \"100%\" }}\r\n                            /* left={<FieldSet>\r\n                                <Field name=\"thikness\" wide={11} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, width: \"100px\", text: \"Espessura\", pos: \"left\" }}>\r\n                                    <SelectField size=\"small\" data={THICKNESS} keyField=\"t\" textField=\"t\"\r\n                                        optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ minWidth: \"100px\" }}><b>{d[textField]} &#x00B5;</b></div></div>, value: d[keyField] })}\r\n                                    />\r\n                                </Field>\r\n                            </FieldSet>} */\r\n                            right={<Button onClick={() => onShowForm()}>Agrupar</Button>}\r\n                        />\r\n                    </FieldSet>\r\n\r\n                    <FieldSet margin={false}>\r\n                        {aggId &&\r\n                            /*                             <Form.List name=\"agg\" initialValue={aggId}>\r\n                                                            {(fields, { add, remove, move }) => {\r\n                                                                return ( */\r\n                            <List\r\n                                style={{ width: \"100%\" }}\r\n                                grid={{\r\n                                    gutter: 16,\r\n                                    xs: 1,\r\n                                    sm: 1,\r\n                                    md: 2,\r\n                                    lg: 2,\r\n                                    xl: 2,\r\n                                    xxl: 2,\r\n                                }}\r\n                                size=\"small\"\r\n                                dataSource={aggId}\r\n                                renderItem={aggItem => {\r\n                                    return (<CardAgg aggItem={aggItem} /* aggItem={aggId[item.name]} */ of_id={ctx.of_id} setShowForm={setShowForm} />);\r\n                                }}\r\n                            >\r\n                            </List>\r\n                            /*                                     )\r\n                                                            }}\r\n                                                        </Form.List> */\r\n                        }\r\n                    </FieldSet>\r\n\r\n\r\n\r\n                </FormLayout>\r\n            </Spin>\r\n        </>\r\n    );\r\n}"],"names":["React","useEffect","useState","useCallback","useRef","useContext","createUseStyles","styled","dayjs","Joi","fetch","fetchPost","API_URL","getSchema","FormLayout","Field","FieldSet","FieldItem","AlertsContainer","Item","SelectField","CheckboxField","HorizontalRule","VerticalSpace","InputAddon","AlertMessages","IconButton","ResultMessage","Portal","Input","Space","Form","Button","InputNumber","DatePicker","DATE_FORMAT","DATETIME_FORMAT","OFabricoContext","schema","keys","excludeKeys","unknown","setId","id","key","values","loadAggsLookup","produto_id","agg_id","url","filter","status","parameters","group","sort","rows","data","setFormTitle","parentRef","closeParent","parentReload","wrapForm","forInput","ctx","useForm","form","loading","setLoading","submitting","setSubmitting","changedValues","setChangedValues","error","warning","info","success","formStatus","setFormStatus","guides","setGuides","operation","setOperation","resultMessage","setResultMessage","init","produto_cod","of_cod","aggsLookup","title","aggs","v","agg_ofid_original","map","checked","tempof_id","of_id","artigo_cod","item_cod","cliente_nome","iorder","item_nome","enabled","setFieldsValue","onValuesChange","onFinish","response","onSuccessOK","resetFields","onErrorOK","onClose","reload","onSubmit","submit","width","padding","wide","margin","overflow","label","pos","wrap","colon","ellipsis","alert","tooltip","container","layout","top","right","center","bottom","left","required","style","alignSelf","fields","field","index","border","borderRadius","name","getFieldValue","forViewBorder","fontWeight","current","Suspense","cancelToken","WrapperForm","TitleForm","Label","LabelField","SelectDebounceField","Toolbar","YScroll","Spin","Tag","List","Typography","Card","Collapse","Panel","LoadingOutlined","EditOutlined","PlusOutlined","EllipsisOutlined","SettingOutlined","PaperClipOutlined","THICKNESS","FormAggUpsert","FormPaletesStockUpsert","lazy","FormPaletizacao","FormSettings","FormAttachments","remove","MdProductionQuantityLimits","FaPallet","FaWarehouse","FaTape","SvgSchema","StyledCard","StyledCollapse","Drawer","showWrapper","setShowWrapper","formTitle","iref","record","onVisible","prev","show","subTitle","mode","height","textAlign","type","token","loadPaletesGet","pagination","PaletesStock","item","display","flexWrap","flexDirection","paletesstock","idx","flex","CardAgg","aggItem","setShowForm","paletes","JSON","parse","n_paletes","onAction","op","console","log","backgroundColor","color","fontSize","justifyContent","qty_encomenda","linear_meters","toFixed","sqm_bobine","items","total","sqm_contentor","borderBottom","num_bobines","sqm_palete","length","overflowY","showForm","setAggs","aggId","setAggId","cancelFetch","loadData","cancel","_aggs","ret","onShowForm","align","vAlign","addons","gutter","xs","sm","md","lg","xl","xxl"],"sourceRoot":""}