{"version":3,"file":"chunks/src_pages_planeamento_ordemFabrico_FormCortes_jsx.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/planeamento/cortes/FormCortesUpsert.jsx","webpack://sgp/./src/pages/planeamento/ordemFabrico/FormCortes.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber } from \"antd\";\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport { useDrag, useDrop, DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { useImmer } from \"use-immer\";\r\n/* import SvgSchema from '../paletizacaoSchema/SvgSchema'; */\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({}, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst useStyles = createUseStyles({\r\n    bobine: {\r\n        cursor: \"move\",\r\n        border: \"solid 1px #bfbfbf\",\r\n        height: \"150px\",\r\n        boxShadow: \"2px 1px 2px #f0f0f0\",\r\n        margin: \"3px\",\r\n        borderRadius: \"3px\",\r\n        width: (props) => `${props.width}%`,\r\n        '&:hover': {\r\n            backgroundColor: \"#e6f7ff\"\r\n        }\r\n    }\r\n})\r\n\r\nconst Bobine = ({ id, value, index, moveBobine, width = 0, forInput = false, cortes }) => {\r\n    const classes = useStyles({ width });\r\n    const ref = useRef(null);\r\n    const color = cortes.find(v => v.item_lar == value);\r\n    const style = {\r\n        color: color.color,\r\n        fontStyle: \"italic\",\r\n        height: \"70%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    };\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: 'bobine',\r\n        collect(monitor) {\r\n            return {\r\n                handlerId: monitor.getHandlerId(),\r\n            };\r\n        },\r\n        drop(item, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            moveBobine(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        }\r\n    });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: 'bobine',\r\n\r\n        item: () => {\r\n            return { id, index };\r\n        },\r\n        canDrag(monitor) {\r\n            return forInput;\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    const opacity = isDragging ? 0 : 1;\r\n    drag(ref);\r\n    drop(ref);\r\n    return (\r\n        <div ref={ref} className={classes.bobine} style={{ opacity, background: color.bcolor, color: color.color }} data-handler-id={handlerId}>\r\n            <div style={{ fontSize: \"10px\", textAlign: \"center\" }}>{index + 1}</div>\r\n            <div style={style}>{value}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [bobines, setBobines] = useImmer([]);\r\n    const [larguraTotal, setLarguraTotal] = useState(0);\r\n\r\n\r\n    const init = () => {\r\n        const { cortes, cortesOrdem } = record;\r\n        (setFormTitle) && setFormTitle({ title: `Posicionar Cortes` });\r\n        const { largura_json } = cortes[0];\r\n        const _bobines = [];\r\n        let _larguraTotal = 0;\r\n        if (!cortesOrdem) {\r\n            for (const [key, value] of Object.entries(JSON.parse(largura_json))) {\r\n                _bobines.push(...(new Array(value)).fill(key));\r\n                _larguraTotal = _larguraTotal + value * key;\r\n            }\r\n        } else {\r\n            const _cortesOrdem = JSON.parse(cortesOrdem.largura_ordem);\r\n            _bobines.push(..._cortesOrdem);\r\n            form.setFieldsValue({ designacao: cortesOrdem.designacao });\r\n            _larguraTotal = _cortesOrdem.reduce((sum, v) => Number(sum) + Number(v));\r\n        }\r\n        setBobines(_bobines);\r\n        setLarguraTotal(_larguraTotal);\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [record]);\r\n\r\n    const onFinish = async (values) => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const { cortes, ordem } = record;\r\n        const { cortes_id } = cortes[0];\r\n        let touched = false;\r\n        if (!ordem) {\r\n            touched = true;\r\n        } else {\r\n            if (!JSON.parse(ordem.largura_ordem).every((v, i) => v === bobines[i])) {\r\n                touched = true;\r\n            }\r\n        }\r\n        if (touched) {\r\n            const response = await fetchPost({ url: `${API_URL}/updatecortesordem/`, parameters: { ...values, largura_ordem: JSON.stringify(bobines), cortes_id } });\r\n            if (response.data.status !== \"error\") {\r\n                status.success.push({ message: response.data.title });\r\n                parentReload({}, \"lookup\");\r\n                closeParent();\r\n            } else {\r\n                status.error.push({ message: response.data.title });\r\n            }\r\n            setFormStatus(status);\r\n        }\r\n    }\r\n\r\n    const moveBobine = useCallback((dragIndex, hoverIndex) => {\r\n        setBobines(draft => {\r\n            const tmp = draft[hoverIndex];\r\n            draft[hoverIndex] = draft[dragIndex];\r\n            draft[dragIndex] = tmp;\r\n        });\r\n    }, [bobines]);\r\n\r\n    \r\n    const onSubmit = useCallback(() =>{\r\n        setSubmitting(true);\r\n        form.submit();\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <AlertMessages formStatus={formStatus} />\r\n            <Form form={form} name={`fps`} onFinish={onFinish} component={wrapForm}>\r\n                <FormLayout\r\n                    id=\"LAY-CORTESORDEM-UPSERT\"\r\n                    guides={guides}\r\n                    layout=\"vertical\"\r\n                    style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{\r\n                        forInput,\r\n                        wide: [16],\r\n                        margin: \"2px\", overflow: false, guides: guides,\r\n                        label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                        alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                        layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                        required: true,\r\n                        style: { alignSelf: \"top\" }\r\n                    }}\r\n                    fieldSet={{\r\n                        guides: guides,\r\n                        wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                    }}\r\n                >\r\n                    {forInput && <>\r\n                        <FieldSet margin={false} field={{ wide: [6, 4] }}>\r\n                            <Field name=\"designacao\" label={{ enabled: false }}><Input placeholder=\"Designação\" size=\"small\" /></Field>\r\n                        </FieldSet>\r\n                        <VerticalSpace height=\"24px\" />\r\n                    </>\r\n                    }\r\n                </FormLayout>\r\n            </Form>\r\n\r\n            <DndProvider backend={HTML5Backend}>\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                    {bobines.map((v, i) => {\r\n                        return (<Bobine key={`b-${v}.${i}`} id={`b-${v}.${i}`} value={v} index={i} moveBobine={moveBobine} width={(v * 100) / larguraTotal} cortes={record.cortes} forInput={forInput} />);\r\n                    })}\r\n                </div>\r\n            </DndProvider>\r\n            {parentRef && <Portal elId={parentRef.current}>\r\n                <Space>\r\n                    <Button disabled={submitting} onClick={onSubmit} type=\"primary\">Guardar</Button>\r\n                    {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                </Space>\r\n            </Portal>\r\n            }\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon, VerticalSpace } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport { Button, Spin, Input, Form, InputNumber, Skeleton } from \"antd\";\r\nimport { LoadingOutlined, EditOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport FormCortesUpsert from '../cortes/FormCortesUpsert';\r\nimport { useImmer } from \"use-immer\";\r\nimport { OFabricoContext } from './FormOFabricoValidar';\r\n\r\n\r\nconst colors = [\r\n    { bcolor: '#002766', color: '#ffffff' },\r\n    { bcolor: '#0050b3', color: '#ffffff' }, { bcolor: '#1890ff', color: '#000000' },\r\n    { bcolor: '#69c0ff', color: '#000000' }, { bcolor: '#bae7ff', color: '#000000' },\r\n    { bcolor: '#ffffff', color: '#000000' }\r\n];\r\n\r\n\r\nconst Drawer = ({ showWrapper, setShowWrapper, parentReload }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n    const { record = {} } = showWrapper;\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type=\"drawer\"\r\n            destroyOnClose={true}\r\n            mask={true}\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            width={800}\r\n            bodyStyle={{ height: \"450px\" }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n        >\r\n            <FormCortesUpsert setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} />\r\n        </WrapperForm>\r\n    );\r\n}\r\n\r\n\r\nconst loadArtigosAggLookup = async ({ agg_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/artigostempagglookup/`, filter: { agg_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nconst loadCortesOrdemLookup = async ({ cortes_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/cortesordemlookup/`, filter: { cortes_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\n\r\nexport default ({ /* form, guides, schema,  */changedValues }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [showForm, setShowForm] = useState({ show: false });\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [cortesOrdemLookup, setCortesOrdemLookup] = useState([]);\r\n    const [larguraUtil, setLarguraUtil] = useState();\r\n    const { form, guides, schema, ...ctx } = useContext(OFabricoContext);\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        loadData({ agg_id: ctx.agg_id, token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Cortes Cancelled\"));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (changedValues) {\r\n            if (\"cortes\" in changedValues) {\r\n                setLarguraUtil(calculateLarguraUtil(form.getFieldValue(\"cortes\")));\r\n            }\r\n            if (\"cortesordem_id\" in changedValues) {\r\n                //const v = ((changedValues.cortesordem_id) ? cortesOrdemLookup.filter(v => v.id === changedValues.cortesordem_id) : [])[0];\r\n                //console.log(v);\r\n                //setCortesOrdem(v);\r\n            }\r\n        }\r\n    }, [changedValues]);\r\n\r\n\r\n    const cortesOrdem = () => {\r\n        const id = form.getFieldValue(\"cortesordem_id\");\r\n        return ((id) ? cortesOrdemLookup.filter(v => v.id === id) : [])[0];\r\n    };\r\n\r\n    const isCortesTouched = () => {\r\n        return !(!form.getFieldValue(\"cortes_id\") || (changedValues && \"cortes\" in changedValues));\r\n    }\r\n\r\n    const calculateLarguraUtil = useCallback((cortes) => {\r\n        const v = cortes.reduce((accumulator, current) => accumulator + (current.item_ncortes * current.item_lar), 0);\r\n        return v;\r\n    });\r\n\r\n    const loadData = ({ agg_id, token }, type = \"init\") => {\r\n        switch (type) {\r\n            case \"lookup\":\r\n                (async () => {\r\n                    const _cortesOrdemLookup = await loadCortesOrdemLookup({ cortes_id: form.getFieldValue(\"cortes_id\"), token });\r\n                    setCortesOrdemLookup(_cortesOrdemLookup);\r\n                })();\r\n                break;\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    const _cortes = await loadArtigosAggLookup({ agg_id, token });\r\n                    if (_cortes.length > 0) {\r\n                        for (let [i, v] of _cortes.entries()) {\r\n                            const _larguras = JSON.parse(v.largura_json);\r\n                            if (_larguras !== undefined && _larguras !== null) {\r\n                                v[\"item_ncortes\"] = _larguras[v.item_lar];\r\n                                v[\"bcolor\"] = colors[i].bcolor;\r\n                                v[\"color\"] = colors[i].color;\r\n                            }\r\n                        }\r\n                    }\r\n                    const cortes_id = (_cortes.length > 0) ? _cortes[0][\"cortes_id\"] : null;\r\n                    const cortesordem_id = (_cortes.length > 0) ? _cortes[0][\"cortesordem_id\"] : null;\r\n                    const _cortesOrdemLookup = await loadCortesOrdemLookup({ cortes_id, token });\r\n                    form.setFieldsValue({ cortes: _cortes, ...(cortes_id ? { cortes_id } : { cortes_id: null }), ...(cortesordem_id ? { cortesordem_id } : { cortesordem_id: null }) });\r\n                    setLarguraUtil(calculateLarguraUtil(_cortes));\r\n                    setCortesOrdemLookup(_cortesOrdemLookup);\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    const onSubmit = useCallback(async () => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const response = await fetchPost({ url: `${API_URL}/newcortes/`, parameters: { ...form.getFieldsValue([\"cortes\"]), agg_id: ctx.agg_id } });\r\n        if (response.data.status == \"error\") {\r\n            status.error.push({ message: response.data.title });\r\n        } else {\r\n            status.success.push({ message: response.data.title });\r\n            loadData({ agg_id: ctx.agg_id });\r\n        }\r\n        setFormStatus(status);\r\n    }, []);\r\n\r\n    const clearCortes = async () => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const response = await fetchPost({ url: `${API_URL}/clearcortes/`, parameters: { agg_id: ctx.agg_id } });\r\n        if (response.data.status == \"error\") {\r\n            status.error.push({ message: response.data.title });\r\n        } else {\r\n            status.success.push({ message: response.data.title });\r\n            loadData({ agg_id: ctx.agg_id });\r\n        }\r\n        setFormStatus(status);\r\n    }\r\n\r\n\r\n\r\n    const onShowForm = (newForm = false) => {\r\n        if (newForm) {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue([\"cortes\", \"cortes_id\"]) } }));\r\n        } else {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue([\"cortes\", \"cortes_id\"]), cortesOrdem: cortesOrdem() } }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AlertMessages formStatus={formStatus} />\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <Drawer showWrapper={showForm} setShowWrapper={setShowForm} parentReload={loadData} />\r\n                <FormLayout\r\n                    id=\"LAY-CORTES\"\r\n                    guides={guides}\r\n                    layout=\"vertical\"\r\n                    style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{\r\n                        //wide: [3, 2, 1, '*'],\r\n                        margin: \"2px\", overflow: false, guides: guides,\r\n                        label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                        alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                        layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                        addons: {}, //top|right|center|bottom|left\r\n                        required: true,\r\n                        style: { alignSelf: \"center\" }\r\n                    }}\r\n                    fieldSet={{\r\n                        guides: guides,\r\n                        wide: 16, margin: false, layout: \"horizontal\", overflow: false\r\n                    }}\r\n                >\r\n\r\n                    <FieldSet>\r\n                        {form.getFieldValue(\"cortes_id\") && <Toolbar\r\n                            style={{ width: \"100%\" }}\r\n                            left={<div>{larguraUtil && <>Largura Útil [ <b>{larguraUtil}mm</b> ]</>}</div>}\r\n                            right={<Button onClick={clearCortes}>Refazer Cortes</Button>}\r\n                        />\r\n                        }\r\n                    </FieldSet>\r\n                    <FieldSet>\r\n\r\n\r\n                        <FieldSet layout=\"vertical\" style={{ minWidth: \"200px\", maxWidth: \"200px\" }}>\r\n                            <FieldSet style={{ fontWeight: 500 }} field={{ wide: [8, 8], noItemWrap: true, label: { enabled: false } }}>\r\n                                <Field>Largura</Field>\r\n                                <Field>Nº Cortes</Field>\r\n                            </FieldSet>\r\n\r\n\r\n                            <Form.List name=\"cortes\">\r\n\r\n                                {(fields, { add, remove, move }) => {\r\n                                    return (\r\n                                        <>\r\n                                            {fields.map((field, index) => (\r\n                                                <FieldSet key={field.key} field={{ wide: [8, 8] }}>\r\n                                                    <Field forInput={false} name={[field.name, `item_lar`]} label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                                    <Field name={[field.name, `item_ncortes`]} label={{ enabled: false }}><InputNumber size=\"small\" min={1} max={24} /></Field>\r\n                                                </FieldSet>\r\n                                            ))}\r\n                                        </>\r\n\r\n                                    )\r\n                                }}\r\n\r\n                            </Form.List>\r\n                            <VerticalSpace height=\"12px\" />\r\n                            <FieldSet><Button disabled={isCortesTouched()} type=\"dashed\" onClick={onSubmit} style={{ width: \"100%\" }}>Aplicar</Button></FieldSet>\r\n\r\n                        </FieldSet>\r\n                    </FieldSet>\r\n                    <VerticalSpace height=\"12px\" />\r\n                    <FieldSet>\r\n                        {form.getFieldValue(\"cortes_id\") && <Toolbar\r\n                            style={{ width: \"100%\" }}\r\n                            left={\r\n                                <FieldSet>\r\n                                    <Field name=\"cortesordem_id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Posição Cortes\", pos: \"left\" }} addons={{\r\n                                        ...(form.getFieldValue(\"cortesordem_id\") && { right: <Button onClick={() => onShowForm()} style={{ marginLeft: \"3px\" }} size=\"small\"><EditOutlined style={{ fontSize: \"16px\" }} /></Button> })\r\n                                    }}>\r\n                                        <SelectField allowClear size=\"small\" data={cortesOrdemLookup} keyField=\"id\" textField=\"designacao\"\r\n                                            optionsRender={(d, keyField, textField) => ({ label: <div><div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div><div style={{ color: \"#1890ff\" }}>{d[\"largura_ordem\"].replaceAll('\"', ' ')}</div></div>, value: d[keyField] })}\r\n                                        />\r\n                                    </Field>\r\n                                </FieldSet>\r\n                            }\r\n                            right={<Button onClick={() => onShowForm(true)}>Novo Posicionamento de Cortes</Button>}\r\n                        />\r\n                        }\r\n                    </FieldSet>\r\n                    <FieldSet field={{ wide: [16] }}>\r\n                        <FieldItem label={{ enabled: false }}>\r\n                            {((loading, cortesOrdem) => {\r\n                                if (!loading && cortesOrdem) {\r\n                                    return (<FormCortesUpsert record={{ ...form.getFieldsValue([\"cortes\", \"cortes_id\"]), cortesOrdem }} wrapForm={false} forInput={false} parentReload={loadData} />);\r\n                                }\r\n                            })(loading, cortesOrdem())}\r\n                        </FieldItem>\r\n                    </FieldSet>\r\n                </FormLayout>\r\n            </Spin>\r\n        </>\r\n    );\r\n}"],"names":["React","useEffect","useState","useCallback","useRef","createUseStyles","styled","dayjs","Joi","fetch","fetchPost","API_URL","getSchema","FormLayout","Field","FieldSet","FieldItem","AlertsContainer","Item","SelectField","CheckboxField","HorizontalRule","VerticalSpace","AlertMessages","IconButton","ResultMessage","Portal","Input","Space","Form","Button","InputNumber","DATE_FORMAT","DATETIME_FORMAT","useDrag","useDrop","DndProvider","HTML5Backend","useImmer","schema","keys","excludeKeys","unknown","useStyles","bobine","cursor","border","height","boxShadow","margin","borderRadius","width","props","backgroundColor","Bobine","id","value","index","moveBobine","forInput","cortes","classes","ref","color","find","v","item_lar","style","fontStyle","display","justifyContent","alignItems","accept","collect","monitor","handlerId","getHandlerId","drop","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","type","canDrag","isDragging","drag","opacity","background","bcolor","fontSize","textAlign","record","setFormTitle","parentRef","closeParent","parentReload","wrapForm","useForm","form","loading","setLoading","submitting","setSubmitting","error","warning","info","success","formStatus","setFormStatus","guides","setGuides","bobines","setBobines","larguraTotal","setLarguraTotal","init","cortesOrdem","title","largura_json","_bobines","_larguraTotal","Object","entries","JSON","parse","key","push","Array","fill","_cortesOrdem","largura_ordem","setFieldsValue","designacao","reduce","sum","Number","onFinish","values","status","ordem","cortes_id","touched","every","i","url","parameters","stringify","response","data","message","draft","tmp","onSubmit","submit","padding","wide","overflow","label","enabled","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","layout","right","center","left","required","alignSelf","flexDirection","map","useContext","cancelToken","WrapperForm","TitleForm","Label","LabelField","InputAddon","Toolbar","Spin","Skeleton","LoadingOutlined","EditOutlined","PlusOutlined","FormCortesUpsert","OFabricoContext","colors","Drawer","showWrapper","setShowWrapper","formTitle","iref","onVisible","prev","show","subTitle","loadArtigosAggLookup","agg_id","token","filter","sort","rows","loadCortesOrdemLookup","changedValues","showForm","setShowForm","cortesOrdemLookup","setCortesOrdemLookup","larguraUtil","setLarguraUtil","ctx","cancelFetch","loadData","cancel","calculateLarguraUtil","getFieldValue","isCortesTouched","accumulator","item_ncortes","_cortesOrdemLookup","_cortes","length","_larguras","undefined","cortesordem_id","getFieldsValue","clearCortes","onShowForm","newForm","addons","minWidth","maxWidth","fontWeight","noItemWrap","fields","add","remove","move","field","name","text","marginLeft","d","keyField","textField","replaceAll"],"sourceRoot":""}