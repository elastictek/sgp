{"version":3,"file":"chunks/src_pages_planeamento_ordemFabrico_FormAttachments_jsx.chunk.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAQgC,OAAR,GAAoBH,qDAApB;AACA;AACA;CAEA;;AACA;;AAEA,IAAMoB,eAAe;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,QAASA,KAAT,EAAgBC,KAAhB,QAAgBA,KAAhB;AAAA;AAAA,mBACaxC,uDAAS,CAAC;AAAEyC,cAAAA,GAAG,YAAKb,4CAAL,uBAAL;AAAuCc,cAAAA,MAAM,EAAE;AAAEH,gBAAAA,KAAK,EAALA;AAAF,eAA/C;AAA0DI,cAAAA,IAAI,EAAE,EAAhE;AAAoEzC,cAAAA,WAAW,EAAEsC;AAAjF,aAAD,CADtB;;AAAA;AAAA;AACJI,YAAAA,IADI,oBACZC,IADY,CACJD,IADI;AAAA,6CAEbA,IAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfN,eAAe;AAAA;AAAA;AAAA,GAArB;;AAKA,IAAMQ,UAAU,GAAGlD,8DAAH,0zBAAhB;AAwCA,IAAMoD,aAAa,GAAGpD,8DAAM,CAACyB,OAAD,CAAT,kgBAAnB;;AAsBA,IAAM4B,IAAI,GAAG,SAAPA,IAAO,QAAqF;AAAA,MAAlFC,UAAkF,SAAlFA,UAAkF;AAAA,MAAtEC,IAAsE,SAAtEA,IAAsE;AAAA,MAAhEC,YAAgE,SAAhEA,YAAgE;AAAA,MAAlDC,QAAkD,SAAlDA,QAAkD;AAAA,MAAxCC,cAAwC,SAAxCA,cAAwC;AAAA,MAAxBC,iBAAwB,SAAxBA,iBAAwB;;AAE9F,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACpCH,IAAAA,iBAAiB,CAAC,UAAAI,IAAI;AAAA,6CAAUA,IAAV,2BAAiBR,IAAI,CAACS,GAAtB,EAA4BH,KAA5B;AAAA,KAAL,CAAjB;AACH,GAFD;;AAIA,sBACI,kDAAC,UAAD,qBACI;AAAK,aAAS,EAAC;AAAf,kBAA0B,kDAAC,+DAAD;AAAa,YAAQ,EAAED,YAAvB;AAAqC,gBAAY,EAAErB,yDAAnD;AAAyE,SAAK,EAAE;AAAE2B,MAAAA,KAAK,EAAE;AAAT,KAAhF;AAAoG,QAAI,EAAC,OAAzG;AAAiH,QAAI,EAAE3B,kDAAvH;AAAsI,YAAQ,EAAC,OAA/I;AAAuJ,aAAS,EAAC,OAAjK;AACtB,iBAAa,EAAE,uBAAC4B,CAAD,EAAIC,QAAJ,EAAcC,SAAd;AAAA,aAA6B;AAAEC,QAAAA,KAAK,EAAEH,CAAC,CAACE,SAAD,CAAV;AAAuBR,QAAAA,KAAK,EAAEM,CAAC,CAACC,QAAD;AAA/B,OAA7B;AAAA;AADO,IAA1B,CADJ,eAII;AAAK,aAAS,EAAC;AAAf,KAA2Bb,IAAI,CAACgB,IAAhC,CAJJ,eAKI;AAAK,aAAS,EAAC,YAAf;AAA4B,WAAO,EAAE;AAAA,aAAMd,QAAQ,CAACF,IAAD,CAAd;AAAA;AAArC,kBAA2D,kDAAC,0DAAD,OAA3D,CALJ,CADJ;AASH,CAfD;;AAiBA,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,QAA2C;AAAA,MAAxCC,WAAwC,SAAxCA,WAAwC;AAAA,MAA3BC,UAA2B,SAA3BA,UAA2B;AAAA,MAAfC,QAAe,SAAfA,QAAe;;AAC/D,kBAAwChF,gDAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOiF,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMpB,QAAQ,GAAG,SAAXA,QAAW,CAACqB,EAAD,EAAQ;AACrBD,IAAAA,eAAe,CAAC,UAACd,IAAD,EAAU;AACtB,UAAMgB,UAAU,qBAAQhB,IAAR,CAAhB;;AACA,aAAOgB,UAAU,CAACD,EAAD,CAAjB;AACA,aAAOC,UAAP;AACH,KAJc,CAAf;AAKAL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACArE,IAAAA,wDAAU,CAAC;AAAEwC,MAAAA,GAAG,YAAKb,4CAAL,0BAAL;AAA0CgD,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBH,QAAAA,EAAE,EAAFA;AAAlB;AAAtD,KAAD,CAAV,CAA2FI,IAA3F,CAAgG,UAAUC,QAAV,EAAoB;AAChHR,MAAAA,QAAQ;AACRS,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAAQ,CAAClC,IAA7B;AACH,KAHD,WAGS,UAAUqC,KAAV,EAAiB;AACtB/D,MAAAA,mDAAA,CAAc,wBAAd;AACH,KALD,aAKW,YAAM;AACbmD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPD;AAQH,GAfD;;AAgBA,MAAMd,YAAY,GAAG,SAAfA,YAAe,CAACkB,EAAD,EAAKjB,KAAL,EAAe;AAChCgB,IAAAA,eAAe,CAAC,UAAAd,IAAI;AAAA,6CAAUA,IAAV,2BAAiBe,EAAjB,EAAsBjB,KAAtB;AAAA,KAAL,CAAf;AACH,GAFD;;AAGA,MAAM0B,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACArE,IAAAA,wDAAU,CAAC;AAAEwC,MAAAA,GAAG,YAAKb,4CAAL,0BAAL;AAA0CgD,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBL,QAAAA,YAAY,EAAZA;AAAxB;AAAtD,KAAD,CAAV,CAA2GM,IAA3G,CAAgH,UAAUC,QAAV,EAAoB;AAChIC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAAQ,CAAClC,IAA7B;AACH,KAFD,WAES,UAAUqC,KAAV,EAAiB;AACtB/D,MAAAA,mDAAA,CAAc,yBAAd;AACH,KAJD,aAIW,YAAM;AACbmD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAND;AAOH,GATD;;AAWA,MAAMc,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAK;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBI,CAArB,YAA0BxD,6CAA1B,SAAqCD,4CAArC,SAA+CE,iDAA/C,iBAAkEuD,CAAC,CAAC9C,KAApE,gBAA+E+C,SAAS,CAACD,CAAC,CAACE,QAAH,CAAxF,gBAA0GD,SAAS,CAACD,CAAC,CAACG,IAAF,CAAOC,KAAP,CAAa,GAAb,EAAkBC,KAAlB,CAAwB,CAAxB,EAA2BC,IAA3B,CAAgC,GAAhC,CAAD,CAAnH;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYrD,4CAAZ,EAAoB,MAApB,EAA4BQ,8CAA5B,EAAsC,OAAtC,EAA8CiD,CAAC,CAACG,IAAF,CAAOC,KAAP,CAAa,GAAb,EAAkBC,KAAlB,CAAwB,CAAxB,EAA2BC,IAA3B,CAAgC,GAAhC,CAA9C,EAFuB,CAGvB;;AACA,qBAAU9D,6CAAV,SAAqBD,4CAArB,SAA+BE,iDAA/B,iBAAkDuD,CAAC,CAAC9C,KAApD,gBAA+D+C,SAAS,CAACD,CAAC,CAACE,QAAH,CAAxE,gBAA0FD,SAAS,CAACD,CAAC,CAACG,IAAF,CAAOC,KAAP,CAAa,GAAb,EAAkBC,KAAlB,CAAwB,CAAxB,EAA2BC,IAA3B,CAAgC,GAAhC,CAAD,CAAnG;AACH,GALD;;AAOA,sBACI,mHACI,kDAAC,2DAAD;AACI,SAAK,EAAE;AAAE7B,MAAAA,KAAK,EAAE;AAAT,KADX;AAEI,SAAK,eAAE,kDAAC,6CAAD;AAAQ,UAAI,EAAC,SAAb;AAAuB,cAAQ,EAAE8B,MAAM,CAACC,IAAP,CAAYrB,YAAZ,EAA0BsB,MAA1B,IAAoC,CAApC,GAAwC,IAAxC,GAA+C,KAAhF;AAAuF,aAAO,EAAEX;AAAhG;AAFX,IADJ,EAKKd,WAAW,CAAC0B,GAAZ,CAAgB,UAAAC,CAAC;AAAA,wBAAI,kDAAC,UAAD;AAAY,SAAG,iBAAUA,CAAC,CAACtB,EAAZ;AAAf,oBAClB;AAAG,eAAS,EAAC,UAAb;AAAwB,UAAI,EAAEU,aAAa,CAACY,CAAD,CAA3C;AAAgD,YAAM,EAAC;AAAvD,oBAAgE,gEAAOA,CAAC,CAACR,IAAF,CAAOC,KAAP,CAAa,GAAb,EAAkBQ,GAAlB,EAAP,CAAhE,CADkB,eAElB;AAAK,eAAS,EAAC;AAAf,oBAA0B,kDAAC,+DAAD;AAAa,cAAQ,EAAE,kBAACC,GAAD,EAAMC,CAAN;AAAA,eAAY3C,YAAY,CAACwC,CAAC,CAACtB,EAAH,EAAOwB,GAAP,CAAxB;AAAA,OAAvB;AAA4D,kBAAY,EAAEF,CAAC,CAACT,QAA5E;AAAsF,WAAK,EAAE;AAAEzB,QAAAA,KAAK,EAAE;AAAT,OAA7F;AAAiH,UAAI,EAAC,OAAtH;AAA8H,UAAI,EAAE3B,kDAApI;AAAmJ,cAAQ,EAAC,OAA5J;AAAoK,eAAS,EAAC,OAA9K;AACtB,mBAAa,EAAE,uBAAC4B,CAAD,EAAIC,QAAJ,EAAcC,SAAd;AAAA,eAA6B;AAAEC,UAAAA,KAAK,EAAEH,CAAC,CAACE,SAAD,CAAV;AAAuBR,UAAAA,KAAK,EAAEM,CAAC,CAACC,QAAD;AAA/B,SAA7B;AAAA;AADO,MAA1B,CAFkB,eAKlB;AAAK,eAAS,EAAC,YAAf;AAA4B,aAAO,EAAE;AAAA,eAAMX,QAAQ,CAAC2C,CAAC,CAACtB,EAAH,CAAd;AAAA;AAArC,oBAA2D,kDAAC,0DAAD,OAA3D,CALkB,CAAJ;AAAA,GAAjB,CALL,CADJ;AAgBH,CAxDD;;AA2DA,iEAAe,iBAA8B;AAAA,MAA3B0B,MAA2B,SAA3BA,MAA2B;AAAA,MAAnBC,YAAmB,SAAnBA,YAAmB;;AACzC,oBAAsD3G,kDAAU,CAAC2C,kEAAD,CAAhE;AAAA,MAAQiE,IAAR,eAAQA,IAAR;AAAA,MAAcC,MAAd,eAAcA,MAAd;AAAA,MAAsBC,MAAtB,eAAsBA,MAAtB;AAAA,MAA8BC,WAA9B,eAA8BA,WAA9B;AAAA,MAA8CC,GAA9C;;AACA,mBAA8BnH,gDAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOoH,OAAP;AAAA,MAAgBrC,UAAhB;;AACA,mBAAgC/E,gDAAQ,CAAC;AAAEqH,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCvH,gDAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOwH,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4CzH,gDAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAO+D,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,oBAAkChE,gDAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAO0H,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAAsC3H,gDAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAO8E,WAAP;AAAA,MAAoB8C,cAApB,kBAPyC,CAQzC;;;AAEA7H,EAAAA,iDAAS,CAAC,YAAM;AACX+G,IAAAA,YAAD,IAAkBA,YAAY,CAAC;AAAEe,MAAAA,KAAK,mBAAYhB,MAAM,CAACiB,OAAP,CAAeC,YAA3B,CAAP;AAAkDC,MAAAA,QAAQ,YAAKnB,MAAM,CAACiB,OAAP,CAAe9E,KAApB,gBAA+B6D,MAAM,CAACiB,OAAP,CAAeG,QAA9C;AAA1D,KAAD,CAA9B;AACA,QAAMC,WAAW,GAAGvH,yDAAW,EAA/B;AACAqE,IAAAA,QAAQ,CAAC;AAAE/B,MAAAA,KAAK,EAAEiF;AAAT,KAAD,CAAR;AACA,WAAQ;AAAA,aAAMA,WAAW,CAACC,MAAZ,CAAmB,6BAAnB,CAAN;AAAA,KAAR;AACH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMnD,QAAQ,GAAG,SAAXA,QAAW,GAAmC;AAAA,oFAAtB,EAAsB;AAAA,QAAhC/B,KAAgC,SAAhCA,KAAgC;;AAAA,QAAlBqC,IAAkB,uEAAX,MAAW;AAChD,0BAA6BuB,MAAM,CAACiB,OAApC;AAAA,QAAQ9E,KAAR,mBAAQA,KAAR;AAAA,QAAeoF,SAAf,mBAAeA,SAAf;;AACA,YAAQ9C,IAAR;AACI;AACI,YAAI,CAAC8B,OAAL,EAAc;AACVrC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,gEAAC;AAAA;AAAA;AAAA;AAAA;AAAA,iCACG6C,cADH;AAAA;AAAA,yBACwB7E,eAAe,CAAC;AAAEC,oBAAAA,KAAK,EAAEoF,SAAT;AAAoBnF,oBAAAA,KAAK,EAALA;AAApB,mBAAD,CADvC;;AAAA;AAAA;AAAA;AAEGwE,kBAAAA,WAAW,CAAC,EAAD,CAAX;AACAzD,kBAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACA2D,kBAAAA,YAAY,CAAC,KAAD,CAAZ;AACA5C,kBAAAA,UAAU,CAAC,KAAD,CAAV;;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD;;AALR;AAaH,GAfD;;AAiBA,MAAMsD,UAAU,GAAG,SAAbA,UAAa,GAAuC;AAAA,QAAtCC,OAAsC,uEAA5B,KAA4B;AAAA,QAArBC,QAAqB,uEAAV,KAAU;;AACtD,QAAID,OAAJ,EAAa;AACTf,MAAAA,WAAW,CAAC,UAAAnD,IAAI;AAAA,+CAAUA,IAAV;AAAgBiD,UAAAA,IAAI,EAAE,CAACjD,IAAI,CAACiD,IAA5B;AAAkCR,UAAAA,MAAM,EAAE,EAA1C;AAA8C0B,UAAAA,QAAQ,EAARA;AAA9C;AAAA,OAAL,CAAX;AACH,KAFD,MAEO;AACHhB,MAAAA,WAAW,CAAC,UAAAnD,IAAI;AAAA,+CAAUA,IAAV;AAAgBiD,UAAAA,IAAI,EAAE,CAACjD,IAAI,CAACiD,IAA5B;AAAkCR,UAAAA,MAAM,oBAAOE,IAAI,CAACyB,cAAL,CAAoB,CAAC,gBAAD,EAAmB,aAAnB,EAAkC,kBAAlC,CAApB,CAAP,CAAxC;AAA6HD,UAAAA,QAAQ,EAARA;AAA7H;AAAA,OAAL,CAAX;AACH;AACJ,GAND;;AAQA,MAAME,QAAQ,GAAG,SAAXA,QAAW,QAAqB,CAClC;;AADkC,QAAlBC,WAAkB,SAAlBA,WAAkB;AAErC,GAFD;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAC/E,IAAD,EAAOgF,EAAP,EAAc;AAC/B,QAAMC,IAAI,GAAG,EAAb;AACA,QAAMC,SAAS,GAAG,EAAlB;;AAF+B,+CAGfF,EAHe;AAAA;;AAAA;AAG/B,0DAAoB;AAAA,YAATG,CAAS;AAChB,YAAMC,MAAM,GAAGD,CAAC,CAACE,IAAF,GAAS,IAAT,GAAgB,IAAhB,GAAuBtG,oDAAtC;;AACA,YAAI,CAACqG,MAAL,EAAa;AACTpH,UAAAA,mDAAA,4CAAkDe,oDAAlD;AACH,SAFD,MAEO;AACH,cAAIoG,CAAC,CAAC1E,GAAN,EAAW;AACPyE,YAAAA,SAAS,CAACC,CAAC,CAAC1E,GAAH,CAAT,GAAmBzB,yDAAnB;AACH;;AACDiG,UAAAA,IAAI,CAACK,IAAL,CAAUH,CAAV;AACH;AACJ;AAb8B;AAAA;AAAA;AAAA;AAAA;;AAc/B/E,IAAAA,iBAAiB,CAAC,UAAAI,IAAI;AAAA,6CAAUA,IAAV,GAAmB0E,SAAnB;AAAA,KAAL,CAAjB;AACArB,IAAAA,WAAW,8BAAKD,QAAL,GAAkBqB,IAAlB,EAAX;AACA,WAAO,KAAP;AACH,GAjBD;;AAmBA,MAAM/E,QAAQ,GAAG,SAAXA,QAAW,CAACF,IAAD,EAAU;AACvBI,IAAAA,iBAAiB,CAAC,UAACI,IAAD,EAAU;AACxB,UAAM+E,QAAQ,qBAAQ/E,IAAR,CAAd;;AACA,aAAO+E,QAAQ,CAACvF,IAAI,CAACS,GAAN,CAAf;AACA,aAAO8E,QAAP;AACH,KAJgB,CAAjB;AAKA1B,IAAAA,WAAW,CAAC,UAAArD,IAAI,EAAI;AAChB,UAAMgF,KAAK,GAAGhF,IAAI,CAACiF,OAAL,CAAazF,IAAb,CAAd;AACA,UAAM8E,WAAW,GAAGtE,IAAI,CAAC+B,KAAL,EAApB;AACAuC,MAAAA,WAAW,CAACY,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACA,aAAOV,WAAP;AACH,KALU,CAAX;AAMH,GAZD;;AAcA,MAAMa,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,2BAA6B1C,MAAM,CAACiB,OAApC;AAAA,QAAQ9E,KAAR,oBAAQA,KAAR;AAAA,QAAeoF,SAAf,oBAAeA,SAAf;AACA,QAAMoB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB1G,KAAzB;AACAwG,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BtB,SAA7B;AAEAZ,IAAAA,QAAQ,CAACmC,OAAT,CAAiB,UAAA/F,IAAI,EAAI;AACrB4F,MAAAA,QAAQ,CAACE,MAAT,CAAgB9F,IAAI,CAACS,GAArB,EAA0BT,IAA1B;AACA4F,MAAAA,QAAQ,CAACE,MAAT,WAAmB9F,IAAI,CAACS,GAAxB,YAAoCN,cAAc,CAACH,IAAI,CAACS,GAAN,CAAlD;AACH,KAHD;AAKAsD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAjH,IAAAA,wDAAU,CAAC;AAAEwC,MAAAA,GAAG,YAAKb,4CAAL,eAAL;AAA+BgD,MAAAA,UAAU,EAAEmE,QAA3C;AAAqDI,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAA9D,KAAD,CAAV,CAAsHrE,IAAtH,CAA2H,UAAUC,QAAV,EAAoB;AAC3I5D,MAAAA,qDAAA,CAAgB4D,QAAQ,CAAClC,IAAT,CAAcuE,KAA9B;AACH,KAFD,WAES,UAAUlC,KAAV,EAAiB;AACtB/D,MAAAA,mDAAA,CAAc,gCAAd;AACA6D,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,KALD,aAKW,YAAM;AACbX,MAAAA,QAAQ;AACX,KAPD;AAQH,GArBD;;AAwBA,sBACI,mHACI,kDAAC,6CAAD;AAAM,YAAQ,EAAEoC,OAAhB;AAAyB,aAAS,eAAE,kDAAC,0DAAD;AAAiB,WAAK,EAAE;AAAE0C,QAAAA,QAAQ,EAAE;AAAZ,OAAxB;AAA0C,UAAI;AAA9C,MAApC;AAAuF,OAAG,EAAC;AAA3F,kBACI,kDAAC,8DAAD;AACI,MAAE,EAAC,iBADP;AAEI,UAAM,EAAE9C,MAFZ;AAGI,UAAM,EAAC,UAHX;AAII,SAAK,EAAE;AAAEzC,MAAAA,KAAK,EAAE,MAAT;AAAiBwF,MAAAA,OAAO,EAAE;AAAK;;AAA/B,KAJX;AAKI,UAAM,EAAE9C,MALZ;AAMI,SAAK,EAAE;AACH;AACA+C,MAAAA,MAAM,EAAE,KAFL;AAEYC,MAAAA,QAAQ,EAAE,KAFtB;AAE6BjD,MAAAA,MAAM,EAAEA,MAFrC;AAGHrC,MAAAA,KAAK,EAAE;AAAEuF,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,GAAG,EAAE,KAAtB;AAA6BC,QAAAA,KAAK,EAAE,OAApC;AAA6CC,QAAAA,MAAM,EAAE,QAArD;AAA+D9F,QAAAA,KAAK,EAAE,OAAtE;AAA+E+F,QAAAA,IAAI,EAAE,KAArF;AAA4FL,QAAAA,QAAQ,EAAE,KAAtG;AAA6GM,QAAAA,KAAK,EAAE,IAApH;AAA0HC,QAAAA,QAAQ,EAAE;AAApI,OAHJ;AAIHC,MAAAA,KAAK,EAAE;AAAEN,QAAAA,GAAG,EAAE,OAAP;AAAgBO,QAAAA,OAAO,EAAE,IAAzB;AAA+BC,QAAAA,SAAS,EAAE;AAAK;;AAA/C,OAJJ;AAKHC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,MAAM,EAAE,EAA9B;AAAkCC,QAAAA,MAAM,EAAE,EAA1C;AAA8CC,QAAAA,IAAI,EAAE;AAApD,OALL;AAMHC,MAAAA,MAAM,EAAE,EANL;AAMS;AACZC,MAAAA,QAAQ,EAAE,IAPP;AAQHC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AARJ,KANX;AAgBI,YAAQ,EAAE;AACNrE,MAAAA,MAAM,EAAEA,MADF;AAENsE,MAAAA,IAAI,EAAE,EAFA;AAEItB,MAAAA,MAAM,EAAE,KAFZ;AAEmBY,MAAAA,MAAM,EAAE,YAF3B;AAEyCX,MAAAA,QAAQ,EAAE;AAFnD;AAhBd,kBAqBI,kDAAC,4DAAD;AAAU,QAAI,EAAE,EAAhB;AAAoB,UAAM,EAAE,KAA5B;AAAmC,UAAM,EAAC;AAA1C,kBACI,kDAAC,eAAD;AAAiB,eAAW,EAAEnF,WAA9B;AAA2C,cAAU,EAAEC,UAAvD;AAAmE,YAAQ,EAAEC;AAA7E,IADJ,CArBJ,eAwBI,kDAAC,iEAAD,OAxBJ,eAyBI,kDAAC,4DAAD;AAAU,QAAI,EAAE,EAAhB;AAAoB,UAAM,EAAE,KAA5B;AAAmC,UAAM,EAAC;AAA1C,kBACI,kDAAC,aAAD;AACI,UAAM,EAAC,MADX;AAEI,UAAM,YAAK3C,4CAAL,eAFV;AAGI,WAAO,EAAE;AAAE,qBAAeK,yCAAIA;AAArB,KAHb;AAII,mBAAe,EAAE,IAJrB;AAKI,YAAQ,EAAE8E,QALd;AAMI,YAAQ,EAAEiB,QANd;AAOI,YAAQ,EAAE,EAPd;AAQI,gBAAY,EAAEE,YARlB;AASI,YAAQ,MATZ;AAUI,YAAQ,EAAE7E,QAVd;AAWI,cAAU,EAAE,oBAACH,UAAD,EAAaC,IAAb,EAAmBC,YAAnB;AAAA,0BACR,kDAAC,IAAD;AAAM,kBAAU,EAAEF,UAAlB;AAA8B,YAAI,EAAEC,IAApC;AAA0C,oBAAY,EAAEC,YAAxD;AAAsE,gBAAQ,EAAEC,QAAhF;AAA0F,sBAAc,EAAEC,cAA1G;AAA0H,yBAAiB,EAAEC;AAA7I,QADQ;AAAA;AAXhB,kBAeI;AAAG,aAAS,EAAC;AAAb,kBACI,kDAAC,0DAAD;AAAe,SAAK,EAAE;AAAEuH,MAAAA,KAAK,EAAE;AAAT;AAAtB,IADJ,CAfJ,eAkBI;AAAG,aAAS,EAAC;AAAb,4BAlBJ,CADJ,eAuCI,kDAAC,6CAAD;AACI,QAAI,EAAC,SADT;AAEI,WAAO,EAAEhC,YAFb;AAGI,YAAQ,EAAE/B,QAAQ,CAACjB,MAAT,KAAoB,CAHlC;AAII,WAAO,EAAEmB,SAJb;AAKI,SAAK,EAAE;AAAE8D,MAAAA,SAAS,EAAE;AAAb;AALX,KAOK9D,SAAS,GAAG,eAAH,GAAqB,UAPnC,CAvCJ,CAzBJ,CADJ,CADJ,CADJ;AAqGH,CA7MD","sources":["webpack://sgp/./src/pages/planeamento/ordemFabrico/FormAttachments.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, serverPost, cancelToken } from \"utils/fetch\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon, VerticalSpace } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport { Button, Upload, message, Spin } from \"antd\";\r\nconst { Dragger } = Upload;\r\nimport { LoadingOutlined, EditOutlined, UploadOutlined, DeleteOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport Icon from '@ant-design/icons';\r\nimport { API_URL, ROOT_URL, DOWNLOAD_URL, DATE_FORMAT, DATETIME_FORMAT, CSRF, MAX_UPLOAD_SIZE, TIPOANEXOS_OF, MEDIA_URL } from 'config';\r\n//import FormAttachementsUpsert from '../attachments/FormAttachementsUpsert';\r\nimport { OFabricoContext } from './FormOFabricoValidar';\r\n\r\nconst loadAttachments = async ({ of_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/ofattachmentsget/`, filter: { of_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nconst StyledFile = styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n    margin:2px;\r\n    font-size:11px;\r\n    padding-bottom:2px;\r\n    border-bottom:solid 1px #f5f5f5;\r\n    align-items: center;\r\n\r\n    &:hover,\r\n    &:focus {\r\n        background-color: #f5f5f5;\r\n    }\r\n    .itemtype{\r\n        flex-basis: 180px;\r\n\t    flex-grow: 0;\r\n\t    flex-shrink: 0;\r\n    }\r\n    .itemfile{\r\n        flex:1;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n    .itemfile span{\r\n        color:#2f54eb;\r\n        cursor:pointer;\r\n        font-weight:700;\r\n    }\r\n    .itemremove{\r\n        flex-basis: 30px;\r\n        flex-grow: 0;\r\n        flex-shrink: 0;\r\n        cursor:pointer;\r\n    }\r\n    .itemremove span:hover{\r\n        color:red;\r\n    }\r\n`;\r\n\r\nconst StyledDragger = styled(Dragger)`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    border-top: 1px solid gray;\r\n\r\n    .ant-upload.ant-upload-drag{\r\n        width: 80%;\r\n        margin: 20px;\r\n    }\r\n    .ant-upload-list.ant-upload-list-picture{\r\n        width: 100%;\r\n        margin: 20px;\r\n    }\r\n    .ant-upload-list{\r\n        border-radius: 2px;\r\n        padding: 10px;\r\n        border:solid 1px red;\r\n    }\r\n`;\r\n\r\nconst File = ({ originNode, file, currFileList, onRemove, attachmentType, setAttachmentType }) => {\r\n\r\n    const onTypeChange = (value, option) => {\r\n        setAttachmentType(prev => ({ ...prev, [file.uid]: value }));\r\n    }\r\n\r\n    return (\r\n        <StyledFile>\r\n            <div className=\"itemtype\"><SelectField onChange={onTypeChange} defaultValue={TIPOANEXOS_OF[0].key} style={{ width: \"170px\" }} size=\"small\" data={TIPOANEXOS_OF} keyField=\"value\" textField=\"value\"\r\n                optionsRender={(d, keyField, textField) => ({ label: d[textField], value: d[keyField] })}\r\n            /></div>\r\n            <div className=\"itemfile\">{file.name}</div>\r\n            <div className=\"itemremove\" onClick={() => onRemove(file)}><DeleteOutlined /></div>\r\n        </StyledFile>\r\n    );\r\n}\r\n\r\nconst AttachmentsList = ({ attachments, setLoading, loadData }) => {\r\n    const [changedTypes, setChangedTypes] = useState({});\r\n\r\n    const onRemove = (id) => {\r\n        setChangedTypes((prev) => {\r\n            const newchanges = { ...prev }\r\n            delete newchanges[id];\r\n            return newchanges;\r\n        });\r\n        setLoading(true);\r\n        serverPost({ url: `${API_URL}/ofattachmentschange/`, parameters: { type: \"remove\", id } }).then(function (response) {\r\n            loadData();\r\n            console.log(\"data\", response.data);\r\n        }).catch(function (error) {\r\n            message.error(\"Erro ao Remover Anexo!\");\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const onTypeChange = (id, value) => {\r\n        setChangedTypes(prev => ({ ...prev, [id]: value }));\r\n    }\r\n    const saveChanges = () => {\r\n        setLoading(true);\r\n        serverPost({ url: `${API_URL}/ofattachmentschange/`, parameters: { type: \"changedtypes\", changedTypes } }).then(function (response) {\r\n            console.log(\"data\", response.data);\r\n        }).catch(function (error) {\r\n            message.error(\"Erro ao Alterar Anexos!\");\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const urlAttachemnt = (p)=>{\r\n        console.log(\" ---- \",p,`${ROOT_URL}${API_URL}${DOWNLOAD_URL}/?i=${p.of_id}&t=${encodeURI(p.tipo_doc)}&f=${encodeURI(p.path.split(\"/\").slice(1).join('/'))}`);\r\n        console.log(API_URL,\" -- \", MEDIA_URL,\" --- \",p.path.split(\"/\").slice(1).join('/'))\r\n        //${MEDIA_URL}/${v.path.split(\"/\").slice(1).join('/')}\r\n        return `${ROOT_URL}${API_URL}${DOWNLOAD_URL}/?i=${p.of_id}&t=${encodeURI(p.tipo_doc)}&f=${encodeURI(p.path.split(\"/\").slice(1).join('/'))}`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toolbar\r\n                style={{ width: \"100%\" }}\r\n                right={<Button type=\"primary\" disabled={Object.keys(changedTypes).length == 0 ? true : false} onClick={saveChanges}>Guardar Alterações</Button>}\r\n            />\r\n            {attachments.map(v => <StyledFile key={`attf-${v.id}`}>\r\n                <a className=\"itemfile\" href={urlAttachemnt(v)} target=\"_blank\"><span>{v.path.split(\"/\").pop()}</span></a>\r\n                <div className=\"itemtype\"><SelectField onChange={(val, o) => onTypeChange(v.id, val)} defaultValue={v.tipo_doc} style={{ width: \"170px\" }} size=\"small\" data={TIPOANEXOS_OF} keyField=\"value\" textField=\"value\"\r\n                    optionsRender={(d, keyField, textField) => ({ label: d[textField], value: d[keyField] })}\r\n                /></div>\r\n                <div className=\"itemremove\" onClick={() => onRemove(v.id)}><DeleteOutlined /></div>\r\n            </StyledFile>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ({ record, setFormTitle }) => {\r\n    const { form, guides, schema, fieldStatus, ...ctx } = useContext(OFabricoContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [showForm, setShowForm] = useState({ show: false });\r\n    const [fileList, setFileList] = useState([]);\r\n    const [attachmentType, setAttachmentType] = useState({});\r\n    const [uploading, setUploading] = useState(false);\r\n    const [attachments, setAttachments] = useState([]);\r\n    //const [artigosSpecs, setArtigosSpecs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (setFormTitle) && setFormTitle({ title: `Anexos ${record.aggItem.cliente_nome}`, subTitle: `${record.aggItem.of_id} - ${record.aggItem.item_cod}` });\r\n        const cancelFetch = cancelToken();\r\n        loadData({ token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Attachements Cancelled\"));\r\n    }, []);\r\n\r\n    const loadData = ({ token } = {}, type = \"init\") => {\r\n        const { of_id, tempof_id } = record.aggItem;\r\n        switch (type) {\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    setAttachments(await loadAttachments({ of_id: tempof_id, token }));\r\n                    setFileList([]);\r\n                    setAttachmentType({});\r\n                    setUploading(false);\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    const onShowForm = (newForm = false, forInput = false) => {\r\n        if (newForm) {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: {}, forInput }));\r\n        } else {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue([\"artigospecs_id\", \"artigoSpecs\", \"artigoSpecsItems\"]) }, forInput }));\r\n        }\r\n    }\r\n\r\n    const onChange = ({ newFileList }) => {\r\n        //setFileList(newFileList);\r\n    };\r\n\r\n\r\n    const beforeUpload = (file, fl) => {\r\n        const flst = [];\r\n        const filesType = {};\r\n        for (const f of fl) {\r\n            const isSize = f.size / 1024 / 1024 < MAX_UPLOAD_SIZE;\r\n            if (!isSize) {\r\n                message.error(`O ficheiro tem de ser inferior a ${MAX_UPLOAD_SIZE}MB!`);\r\n            } else {\r\n                if (f.uid) {\r\n                    filesType[f.uid] = TIPOANEXOS_OF[0].key;\r\n                }\r\n                flst.push(f);\r\n            }\r\n        }\r\n        setAttachmentType(prev => ({ ...prev, ...filesType }));\r\n        setFileList([...fileList, ...flst]);\r\n        return false;\r\n    }\r\n\r\n    const onRemove = (file) => {\r\n        setAttachmentType((prev) => {\r\n            const newtypes = { ...prev }\r\n            delete newtypes[file.uid];\r\n            return newtypes;\r\n        });\r\n        setFileList(prev => {\r\n            const index = prev.indexOf(file);\r\n            const newFileList = prev.slice();\r\n            newFileList.splice(index, 1);\r\n            return newFileList;\r\n        });\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        const { of_id, tempof_id } = record.aggItem;\r\n        const formData = new FormData();\r\n        formData.append(\"of_id\", of_id);\r\n        formData.append(\"tempof_id\", tempof_id);\r\n\r\n        fileList.forEach(file => {\r\n            formData.append(file.uid, file);\r\n            formData.append(`${file.uid}_type`, attachmentType[file.uid]);\r\n        });\r\n\r\n        setUploading(true);\r\n\r\n        serverPost({ url: `${API_URL}/ofupload/`, parameters: formData, headers: { \"Content-type\": \"multipart/form-data\" } }).then(function (response) {\r\n            message.success(response.data.title);\r\n        }).catch(function (error) {\r\n            message.error(\"Erro ao submeter os Ficheiros!\");\r\n            console.log(error);\r\n        }).finally(() => {\r\n            loadData();\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <FormLayout\r\n                    id=\"LAY-ARTIGOSPECS\"\r\n                    guides={guides}\r\n                    layout=\"vertical\"\r\n                    style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{\r\n                        //wide: [3, 2, 1, '*'],\r\n                        margin: \"2px\", overflow: false, guides: guides,\r\n                        label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", width: \"120px\", wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                        alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                        layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                        addons: {}, //top|right|center|bottom|left\r\n                        required: true,\r\n                        style: { alignSelf: \"top\" }\r\n                    }}\r\n                    fieldSet={{\r\n                        guides: guides,\r\n                        wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                    }}\r\n                >\r\n                    <FieldSet wide={16} margin={false} layout=\"vertical\">\r\n                        <AttachmentsList attachments={attachments} setLoading={setLoading} loadData={loadData}/>\r\n                    </FieldSet>\r\n                    <VerticalSpace />\r\n                    <FieldSet wide={16} margin={false} layout=\"vertical\">\r\n                        <StyledDragger\r\n                            method='post'\r\n                            action={`${API_URL}/ofupload/`}\r\n                            headers={{ \"X-CSRFToken\": CSRF }}\r\n                            withCredentials={true}\r\n                            fileList={fileList}\r\n                            onChange={onChange}\r\n                            maxCount={10}\r\n                            beforeUpload={beforeUpload}\r\n                            multiple\r\n                            onRemove={onRemove}\r\n                            itemRender={(originNode, file, currFileList) => (\r\n                                <File originNode={originNode} file={file} currFileList={currFileList} onRemove={onRemove} attachmentType={attachmentType} setAttachmentType={setAttachmentType} />\r\n                            )}\r\n                            >\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined style={{ color: \"green\" }} />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Drag files to upload</p>\r\n                        </StyledDragger>\r\n\r\n                        {/* <Upload\r\n                            method='post'\r\n                            action={`${API_URL}/ofupload/`}\r\n                            headers={{ \"X-CSRFToken\": CSRF }}\r\n                            withCredentials={true}\r\n                            fileList={fileList}\r\n                            onChange={onChange}\r\n                            maxCount={10}\r\n                            beforeUpload={beforeUpload}\r\n                            multiple\r\n                            onRemove={onRemove}\r\n                            itemRender={(originNode, file, currFileList) => (\r\n                                <File originNode={originNode} file={file} currFileList={currFileList} onRemove={onRemove} attachmentType={attachmentType} setAttachmentType={setAttachmentType} />\r\n                            )}\r\n                        >\r\n                            <Button icon={<UploadOutlined />}>Selecionar Ficheiro(s)</Button>\r\n                        </Upload> */}\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={handleUpload}\r\n                            disabled={fileList.length === 0}\r\n                            loading={uploading}\r\n                            style={{ marginTop: 16 }}\r\n                        >\r\n                            {uploading ? 'A submeter...' : 'Submeter'}\r\n                        </Button>\r\n                    </FieldSet>\r\n                    {/* <FieldSet>\r\n                        <Toolbar\r\n                            style={{ width: \"100%\" }}\r\n                            left={\r\n                                <FieldSet>\r\n                                    <Field name=\"artigospecs_id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Especificações\", pos: \"left\" }} addons={{\r\n                                        ...(form.getFieldValue(\"artigospecs_id\") && { right: <Button onClick={() => onShowForm(false,true)} style={{ marginLeft: \"3px\" }} size=\"small\"><EditOutlined style={{ fontSize: \"16px\" }} /></Button> })\r\n                                    }}>\r\n                                        <SelectField size=\"small\" data={artigosSpecs} keyField=\"id\" textField=\"designacao\"\r\n                                            optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                                        />\r\n                                    </Field>\r\n                                </FieldSet>\r\n                            }\r\n                            right={<Button onClick={() => onShowForm(true,true)}>Novas Especificações</Button>}\r\n                        />\r\n                    </FieldSet>\r\n                    <FieldSet>\r\n                        {(!loading && form.getFieldValue(\"artigospecs_id\")) && <FormSpecsUpsert record={form.getFieldsValue(true)} wrapForm={false} forInput={false} parentReload={loadData} />}\r\n                    </FieldSet> */}\r\n                </FormLayout>\r\n            </Spin>\r\n        </>\r\n    );\r\n}"],"names":["React","useEffect","useState","useCallback","useRef","useContext","createUseStyles","styled","dayjs","Joi","fetch","fetchPost","serverPost","cancelToken","WrapperForm","TitleForm","FormLayout","Field","FieldSet","Label","LabelField","FieldItem","AlertsContainer","Item","SelectField","InputAddon","VerticalSpace","Toolbar","Button","Upload","message","Spin","Dragger","LoadingOutlined","EditOutlined","UploadOutlined","DeleteOutlined","InboxOutlined","Icon","API_URL","ROOT_URL","DOWNLOAD_URL","DATE_FORMAT","DATETIME_FORMAT","CSRF","MAX_UPLOAD_SIZE","TIPOANEXOS_OF","MEDIA_URL","OFabricoContext","loadAttachments","of_id","token","url","filter","sort","rows","data","StyledFile","div","StyledDragger","File","originNode","file","currFileList","onRemove","attachmentType","setAttachmentType","onTypeChange","value","option","prev","uid","key","width","d","keyField","textField","label","name","AttachmentsList","attachments","setLoading","loadData","changedTypes","setChangedTypes","id","newchanges","parameters","type","then","response","console","log","error","saveChanges","urlAttachemnt","p","encodeURI","tipo_doc","path","split","slice","join","Object","keys","length","map","v","pop","val","o","record","setFormTitle","form","guides","schema","fieldStatus","ctx","loading","show","showForm","setShowForm","fileList","setFileList","uploading","setUploading","setAttachments","title","aggItem","cliente_nome","subTitle","item_cod","cancelFetch","cancel","tempof_id","onShowForm","newForm","forInput","getFieldsValue","onChange","newFileList","beforeUpload","fl","flst","filesType","f","isSize","size","push","newtypes","index","indexOf","splice","handleUpload","formData","FormData","append","forEach","headers","success","fontSize","padding","margin","overflow","enabled","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","layout","top","right","center","bottom","left","addons","required","style","alignSelf","wide","color","marginTop"],"sourceRoot":""}