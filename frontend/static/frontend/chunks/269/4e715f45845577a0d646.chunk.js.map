{"version":3,"file":"chunks/269/4e715f45845577a0d646.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/planeamento/ordemFabrico/FormAttachments.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, serverPost, cancelToken } from \"utils/fetch\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon, VerticalSpace } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport { Button, Upload, message, Spin } from \"antd\";\r\nconst { Dragger } = Upload;\r\nimport { LoadingOutlined, EditOutlined, UploadOutlined, DeleteOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport Icon from '@ant-design/icons';\r\nimport { API_URL, ROOT_URL, DOWNLOAD_URL, DATE_FORMAT, DATETIME_FORMAT, CSRF, MAX_UPLOAD_SIZE, TIPOANEXOS_OF, MEDIA_URL } from 'config';\r\n//import FormAttachementsUpsert from '../attachments/FormAttachementsUpsert';\r\nimport { OFabricoContext } from './FormOFabricoValidar';\r\n\r\nconst loadAttachments = async ({ of_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/ofattachmentsget/`, filter: { of_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nconst StyledFile = styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n    margin:2px;\r\n    font-size:11px;\r\n    padding-bottom:2px;\r\n    border-bottom:solid 1px #f5f5f5;\r\n    align-items: center;\r\n\r\n    &:hover,\r\n    &:focus {\r\n        background-color: #f5f5f5;\r\n    }\r\n    .itemtype{\r\n        flex-basis: 180px;\r\n\t    flex-grow: 0;\r\n\t    flex-shrink: 0;\r\n    }\r\n    .itemfile{\r\n        flex:1;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n    .itemfile span{\r\n        color:#2f54eb;\r\n        cursor:pointer;\r\n        font-weight:700;\r\n    }\r\n    .itemremove{\r\n        flex-basis: 30px;\r\n        flex-grow: 0;\r\n        flex-shrink: 0;\r\n        cursor:pointer;\r\n    }\r\n    .itemremove span:hover{\r\n        color:red;\r\n    }\r\n`;\r\n\r\nconst StyledDragger = styled(Dragger)`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    border-top: 1px solid gray;\r\n\r\n    .ant-upload.ant-upload-drag{\r\n        width: 80%;\r\n        margin: 20px;\r\n    }\r\n    .ant-upload-list.ant-upload-list-picture{\r\n        width: 100%;\r\n        margin: 20px;\r\n    }\r\n    .ant-upload-list{\r\n        border-radius: 2px;\r\n        padding: 10px;\r\n        border:solid 1px red;\r\n    }\r\n`;\r\n\r\nconst File = ({ originNode, file, currFileList, onRemove, attachmentType, setAttachmentType }) => {\r\n\r\n    const onTypeChange = (value, option) => {\r\n        setAttachmentType(prev => ({ ...prev, [file.uid]: value }));\r\n    }\r\n\r\n    return (\r\n        <StyledFile>\r\n            <div className=\"itemtype\"><SelectField onChange={onTypeChange} defaultValue={TIPOANEXOS_OF[0].key} style={{ width: \"170px\" }} size=\"small\" data={TIPOANEXOS_OF} keyField=\"value\" textField=\"value\"\r\n                optionsRender={(d, keyField, textField) => ({ label: d[textField], value: d[keyField] })}\r\n            /></div>\r\n            <div className=\"itemfile\">{file.name}</div>\r\n            <div className=\"itemremove\" onClick={() => onRemove(file)}><DeleteOutlined /></div>\r\n        </StyledFile>\r\n    );\r\n}\r\n\r\nconst AttachmentsList = ({ attachments, setLoading, loadData }) => {\r\n    const [changedTypes, setChangedTypes] = useState({});\r\n\r\n    const onRemove = (id) => {\r\n        setChangedTypes((prev) => {\r\n            const newchanges = { ...prev }\r\n            delete newchanges[id];\r\n            return newchanges;\r\n        });\r\n        setLoading(true);\r\n        serverPost({ url: `${API_URL}/ofattachmentschange/`, parameters: { type: \"remove\", id } }).then(function (response) {\r\n            loadData();\r\n            console.log(\"data\", response.data);\r\n        }).catch(function (error) {\r\n            message.error(\"Erro ao Remover Anexo!\");\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const onTypeChange = (id, value) => {\r\n        setChangedTypes(prev => ({ ...prev, [id]: value }));\r\n    }\r\n    const saveChanges = () => {\r\n        setLoading(true);\r\n        serverPost({ url: `${API_URL}/ofattachmentschange/`, parameters: { type: \"changedtypes\", changedTypes } }).then(function (response) {\r\n            console.log(\"data\", response.data);\r\n        }).catch(function (error) {\r\n            message.error(\"Erro ao Alterar Anexos!\");\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const urlAttachemnt = (p)=>{\r\n        console.log(\" ---- \",p,`${ROOT_URL}${API_URL}${DOWNLOAD_URL}/?i=${p.of_id}&t=${encodeURI(p.tipo_doc)}&f=${encodeURI(p.path.split(\"/\").slice(1).join('/'))}`);\r\n        console.log(API_URL,\" -- \", MEDIA_URL,\" --- \",p.path.split(\"/\").slice(1).join('/'))\r\n        //${MEDIA_URL}/${v.path.split(\"/\").slice(1).join('/')}\r\n        return `${ROOT_URL}${API_URL}${DOWNLOAD_URL}/?i=${p.of_id}&t=${encodeURI(p.tipo_doc)}&f=${encodeURI(p.path.split(\"/\").slice(1).join('/'))}`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toolbar\r\n                style={{ width: \"100%\" }}\r\n                right={<Button type=\"primary\" disabled={Object.keys(changedTypes).length == 0 ? true : false} onClick={saveChanges}>Guardar Alterações</Button>}\r\n            />\r\n            {attachments.map(v => <StyledFile key={`attf-${v.id}`}>\r\n                <a className=\"itemfile\" href={urlAttachemnt(v)} target=\"_blank\"><span>{v.path.split(\"/\").pop()}</span></a>\r\n                <div className=\"itemtype\"><SelectField onChange={(val, o) => onTypeChange(v.id, val)} defaultValue={v.tipo_doc} style={{ width: \"170px\" }} size=\"small\" data={TIPOANEXOS_OF} keyField=\"value\" textField=\"value\"\r\n                    optionsRender={(d, keyField, textField) => ({ label: d[textField], value: d[keyField] })}\r\n                /></div>\r\n                <div className=\"itemremove\" onClick={() => onRemove(v.id)}><DeleteOutlined /></div>\r\n            </StyledFile>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ({ record, setFormTitle }) => {\r\n    const { form, guides, schema, fieldStatus, ...ctx } = useContext(OFabricoContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [showForm, setShowForm] = useState({ show: false });\r\n    const [fileList, setFileList] = useState([]);\r\n    const [attachmentType, setAttachmentType] = useState({});\r\n    const [uploading, setUploading] = useState(false);\r\n    const [attachments, setAttachments] = useState([]);\r\n    //const [artigosSpecs, setArtigosSpecs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (setFormTitle) && setFormTitle({ title: `Anexos ${record.aggItem.cliente_nome}`, subTitle: `${record.aggItem.of_id} - ${record.aggItem.item_cod}` });\r\n        const cancelFetch = cancelToken();\r\n        loadData({ token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Attachements Cancelled\"));\r\n    }, []);\r\n\r\n    const loadData = ({ token } = {}, type = \"init\") => {\r\n        const { of_id, tempof_id } = record.aggItem;\r\n        switch (type) {\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    setAttachments(await loadAttachments({ of_id: tempof_id, token }));\r\n                    setFileList([]);\r\n                    setAttachmentType({});\r\n                    setUploading(false);\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    const onShowForm = (newForm = false, forInput = false) => {\r\n        if (newForm) {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: {}, forInput }));\r\n        } else {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue([\"artigospecs_id\", \"artigoSpecs\", \"artigoSpecsItems\"]) }, forInput }));\r\n        }\r\n    }\r\n\r\n    const onChange = ({ newFileList }) => {\r\n        //setFileList(newFileList);\r\n    };\r\n\r\n\r\n    const beforeUpload = (file, fl) => {\r\n        const flst = [];\r\n        const filesType = {};\r\n        for (const f of fl) {\r\n            const isSize = f.size / 1024 / 1024 < MAX_UPLOAD_SIZE;\r\n            if (!isSize) {\r\n                message.error(`O ficheiro tem de ser inferior a ${MAX_UPLOAD_SIZE}MB!`);\r\n            } else {\r\n                if (f.uid) {\r\n                    filesType[f.uid] = TIPOANEXOS_OF[0].key;\r\n                }\r\n                flst.push(f);\r\n            }\r\n        }\r\n        setAttachmentType(prev => ({ ...prev, ...filesType }));\r\n        setFileList([...fileList, ...flst]);\r\n        return false;\r\n    }\r\n\r\n    const onRemove = (file) => {\r\n        setAttachmentType((prev) => {\r\n            const newtypes = { ...prev }\r\n            delete newtypes[file.uid];\r\n            return newtypes;\r\n        });\r\n        setFileList(prev => {\r\n            const index = prev.indexOf(file);\r\n            const newFileList = prev.slice();\r\n            newFileList.splice(index, 1);\r\n            return newFileList;\r\n        });\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        const { of_id, tempof_id } = record.aggItem;\r\n        const formData = new FormData();\r\n        formData.append(\"of_id\", of_id);\r\n        formData.append(\"tempof_id\", tempof_id);\r\n\r\n        fileList.forEach(file => {\r\n            formData.append(file.uid, file);\r\n            formData.append(`${file.uid}_type`, attachmentType[file.uid]);\r\n        });\r\n\r\n        setUploading(true);\r\n\r\n        serverPost({ url: `${API_URL}/ofupload/`, parameters: formData, headers: { \"Content-type\": \"multipart/form-data\" } }).then(function (response) {\r\n            message.success(response.data.title);\r\n        }).catch(function (error) {\r\n            message.error(\"Erro ao submeter os Ficheiros!\");\r\n            console.log(error);\r\n        }).finally(() => {\r\n            loadData();\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <FormLayout\r\n                    id=\"LAY-ARTIGOSPECS\"\r\n                    guides={guides}\r\n                    layout=\"vertical\"\r\n                    style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{\r\n                        //wide: [3, 2, 1, '*'],\r\n                        margin: \"2px\", overflow: false, guides: guides,\r\n                        label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", width: \"120px\", wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                        alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                        layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                        addons: {}, //top|right|center|bottom|left\r\n                        required: true,\r\n                        style: { alignSelf: \"top\" }\r\n                    }}\r\n                    fieldSet={{\r\n                        guides: guides,\r\n                        wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                    }}\r\n                >\r\n                    <FieldSet wide={16} margin={false} layout=\"vertical\">\r\n                        <AttachmentsList attachments={attachments} setLoading={setLoading} loadData={loadData}/>\r\n                    </FieldSet>\r\n                    <VerticalSpace />\r\n                    <FieldSet wide={16} margin={false} layout=\"vertical\">\r\n                        <StyledDragger\r\n                            method='post'\r\n                            action={`${API_URL}/ofupload/`}\r\n                            headers={{ \"X-CSRFToken\": CSRF }}\r\n                            withCredentials={true}\r\n                            fileList={fileList}\r\n                            onChange={onChange}\r\n                            maxCount={10}\r\n                            beforeUpload={beforeUpload}\r\n                            multiple\r\n                            onRemove={onRemove}\r\n                            itemRender={(originNode, file, currFileList) => (\r\n                                <File originNode={originNode} file={file} currFileList={currFileList} onRemove={onRemove} attachmentType={attachmentType} setAttachmentType={setAttachmentType} />\r\n                            )}\r\n                            >\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined style={{ color: \"green\" }} />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Drag files to upload</p>\r\n                        </StyledDragger>\r\n\r\n                        {/* <Upload\r\n                            method='post'\r\n                            action={`${API_URL}/ofupload/`}\r\n                            headers={{ \"X-CSRFToken\": CSRF }}\r\n                            withCredentials={true}\r\n                            fileList={fileList}\r\n                            onChange={onChange}\r\n                            maxCount={10}\r\n                            beforeUpload={beforeUpload}\r\n                            multiple\r\n                            onRemove={onRemove}\r\n                            itemRender={(originNode, file, currFileList) => (\r\n                                <File originNode={originNode} file={file} currFileList={currFileList} onRemove={onRemove} attachmentType={attachmentType} setAttachmentType={setAttachmentType} />\r\n                            )}\r\n                        >\r\n                            <Button icon={<UploadOutlined />}>Selecionar Ficheiro(s)</Button>\r\n                        </Upload> */}\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={handleUpload}\r\n                            disabled={fileList.length === 0}\r\n                            loading={uploading}\r\n                            style={{ marginTop: 16 }}\r\n                        >\r\n                            {uploading ? 'A submeter...' : 'Submeter'}\r\n                        </Button>\r\n                    </FieldSet>\r\n                    {/* <FieldSet>\r\n                        <Toolbar\r\n                            style={{ width: \"100%\" }}\r\n                            left={\r\n                                <FieldSet>\r\n                                    <Field name=\"artigospecs_id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Especificações\", pos: \"left\" }} addons={{\r\n                                        ...(form.getFieldValue(\"artigospecs_id\") && { right: <Button onClick={() => onShowForm(false,true)} style={{ marginLeft: \"3px\" }} size=\"small\"><EditOutlined style={{ fontSize: \"16px\" }} /></Button> })\r\n                                    }}>\r\n                                        <SelectField size=\"small\" data={artigosSpecs} keyField=\"id\" textField=\"designacao\"\r\n                                            optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                                        />\r\n                                    </Field>\r\n                                </FieldSet>\r\n                            }\r\n                            right={<Button onClick={() => onShowForm(true,true)}>Novas Especificações</Button>}\r\n                        />\r\n                    </FieldSet>\r\n                    <FieldSet>\r\n                        {(!loading && form.getFieldValue(\"artigospecs_id\")) && <FormSpecsUpsert record={form.getFieldsValue(true)} wrapForm={false} forInput={false} parentReload={loadData} />}\r\n                    </FieldSet> */}\r\n                </FormLayout>\r\n            </Spin>\r\n        </>\r\n    );\r\n}"],"names":["Dragger","Upload","loadAttachments","of_id","token","fetchPost","url","API_URL","filter","sort","cancelToken","rows","data","StyledFile","styled","StyledDragger","File","originNode","file","onRemove","currFileList","setAttachmentType","attachmentType","className","onChange","value","option","prev","uid","defaultValue","TIPOANEXOS_OF","style","width","size","keyField","textField","optionsRender","d","label","name","onClick","AttachmentsList","attachments","setLoading","loadData","useState","changedTypes","setChangedTypes","right","type","disabled","Object","keys","length","serverPost","parameters","then","response","error","message","map","v","key","id","href","p","ROOT_URL","DOWNLOAD_URL","encodeURI","tipo_doc","path","split","slice","join","target","pop","val","o","newchanges","record","setFormTitle","useContext","OFabricoContext","guides","form","schema","fieldStatus","loading","show","fileList","setFileList","uploading","setUploading","setAttachments","useEffect","title","aggItem","cliente_nome","subTitle","item_cod","cancelFetch","cancel","tempof_id","newtypes","index","indexOf","newFileList","splice","spinning","indicator","fontSize","spin","tip","layout","padding","field","margin","overflow","enabled","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","top","center","bottom","left","addons","required","alignSelf","fieldSet","wide","method","action","headers","CSRF","withCredentials","maxCount","beforeUpload","fl","flst","filesType","f","MAX_UPLOAD_SIZE","push","multiple","itemRender","color","formData","FormData","append","forEach","marginTop"],"sourceRoot":""}