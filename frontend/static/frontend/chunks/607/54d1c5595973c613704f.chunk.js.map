{"version":3,"file":"chunks/607/54d1c5595973c613704f.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/currentline/FormFormulacaoUpsert.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace, InputAddon, SelectDebounceField } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport YScroll from \"components/YScroll\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport { Input, Space, Form, Button, InputNumber, DatePicker } from \"antd\";\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { MdAdjust, MdAssignmentReturned } from 'react-icons/md';\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, FORMULACAO_EXTRUSORAS_COD, FORMULACAO_EXTRUSORAS_VAL, FORMULACAO_TOLERANCIA, FORMULACAO_PONDERACAO_EXTR, FORMULACAO_MANGUEIRAS } from 'config';\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        formu_materiasprimas_A: Joi.array().label(\"Matérias Primas da Extrusora A\").min(1).required(),\r\n        formu_materiasprimas_BC: Joi.array().label(\"Matérias Primas das Extrusoras B & C\").min(1).required(),\r\n        matprima_cod_A: Joi.string().label(\"Matéria Prima\").required(),\r\n        densidade_A: Joi.number().label(\"Densidade\").required(),\r\n        /* mangueira_A: Joi.string().label(\"Mangueira Extrusora A\").required(), */\r\n        arranque_A: Joi.number().label(\"Arranque\").required(),\r\n        matprima_cod_BC: Joi.string().label(\"Matéria Prima\").required(),\r\n        densidade_BC: Joi.number().label(\"Densidade\").required(),\r\n        arranque_BC: Joi.number().label(\"Arranque\").required()\r\n        /*  mangueira_BC: Joi.string().label(\"Mangueira Extrusora BC\").required() */\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nconst append = (value, suffix = '', prefix = '', onUndefined = '') => {\r\n    if (value) {\r\n        return `${prefix}${value}${suffix}`;\r\n    }\r\n    return onUndefined;\r\n}\r\n\r\nconst HeaderA = ({ backgroundColor = \"#f5f5f5\", color = \"#000\", border = \"solid 1px #d9d9d9\" }) => {\r\n    return (\r\n        <FieldSet wide={16} layout=\"horizontal\" margin={false}\r\n            style={{ backgroundColor: `${backgroundColor}`, color: `${color}`, fontWeight: 500, textAlign: \"center\" }}\r\n            field={{ noItemWrap: true, label: { enabled: false } }}\r\n        >\r\n            <FieldSet wide={7} margin={false}\r\n                field={{\r\n                    wide: [13, 3],\r\n                    style: { border, borderLeft: \"none\", alignSelf: \"stretch\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }\r\n                }}\r\n            >\r\n                <Field style={{ border, alignSelf: \"stretch\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }} >Matérias Primas</Field>\r\n                <Field >Densidade</Field>\r\n            </FieldSet>\r\n            <FieldSet margin={false} wide={9} margin={false} layout=\"vertical\"\r\n                field={{ style: { border, borderLeft: \"none\" } }}\r\n            >\r\n                <FieldSet field={{ wide: [16] }} margin={false}>\r\n                    <Field>Distribuição por Extrusora</Field>\r\n                </FieldSet>\r\n                <FieldSet margin={false}\r\n                    field={{\r\n                        wide: [/* 3,  */4, 4, 4, 3, 1/* , 2, 3 */],\r\n                        style: { fontSize: \"10px\", border, borderLeft: \"none\", borderTop: \"none\", fontWeight: 400 }\r\n                    }}\r\n                >\r\n                    {/* <Field>Doseador</Field> */}\r\n                    <Field>%A</Field>\r\n                    <Field>Arranque</Field>\r\n                    <Field>Tolerância</Field>\r\n                    <Field>% Global</Field>\r\n                    <Field></Field>\r\n                    {/* <Field>Checklist</Field>\r\n                    <Field>Data/Hora</Field> */}\r\n                </FieldSet>\r\n            </FieldSet>\r\n        </FieldSet>\r\n    );\r\n}\r\n\r\nconst HeaderBC = ({ backgroundColor = \"#f5f5f5\", color = \"#000\", border = \"solid 1px #d9d9d9\" }) => {\r\n    return (\r\n        <FieldSet wide={16} layout=\"horizontal\" margin={false}\r\n            field={{ noItemWrap: true, label: { enabled: false } }}\r\n            style={{ fontSize: \"10px\", backgroundColor: `${backgroundColor}`, color: `${color}`, textAlign: \"center\" }}\r\n        >\r\n            <FieldSet wide={7} margin={false}\r\n                field={{\r\n                    wide: [13, 3],\r\n                    style: { border, borderLeft: \"none\" }\r\n                }}\r\n            >\r\n                <Field style={{ border }}></Field>\r\n                <Field></Field>\r\n            </FieldSet>\r\n            <FieldSet margin={false} wide={9} margin={false}>\r\n                <FieldSet margin={false}\r\n                    field={{\r\n                        wide: [/* 3,  */4, 4, 4, 3, 1/*  2, 3 */],\r\n                        label: { enabled: false },\r\n                        style: { border, borderLeft: \"none\" }\r\n                    }}\r\n                >\r\n                    {/* <Field>Doseador</Field> */}\r\n                    <Field>%B e C</Field>\r\n                    <Field>Arranque</Field>\r\n                    <Field>Tolerância</Field>\r\n                    <Field>% Global</Field>\r\n                    <Field></Field>\r\n                    {/* <Field>Checklist</Field>\r\n                    <Field>Data/Hora</Field> */}\r\n                </FieldSet>\r\n            </FieldSet>\r\n        </FieldSet>\r\n    );\r\n}\r\n\r\nconst updateGlobals = ({ values = {}, adjust = { extrusora: null, index: null }, action = \"adjust\" }) => {\r\n    const { formu_materiasprimas_A: listA = [], formu_materiasprimas_BC: listBC = [], ...rest } = values;\r\n    let ponderacaoA = FORMULACAO_PONDERACAO_EXTR[0];\r\n    let ponderacaoBC = FORMULACAO_PONDERACAO_EXTR[1];\r\n    let globalA = 0;\r\n    let globalBC = 0;\r\n    let sumArranqueA = 0;\r\n    let sumArranqueBC = 0;\r\n\r\n    for (let [i, v] of listA.entries()) {\r\n        let arranque = (v.arranque_A ? v.arranque_A : 0);\r\n        let global = (ponderacaoA * arranque) / 100;\r\n        if ((action === \"adjust\" && adjust.extrusora !== 'A') || (action !== 'adjust') || (action === \"adjust\" && adjust.index !== i && adjust.extrusora === 'A')) {\r\n            globalA += global;\r\n            sumArranqueA += arranque;\r\n        }\r\n        v.global = global;\r\n    }\r\n    for (let [i, v] of listBC.entries()) {\r\n        let arranque = (v.arranque_BC ? v.arranque_BC : 0);\r\n        let global = (ponderacaoBC * arranque) / 100;\r\n        if ((action === \"adjust\" && adjust.extrusora !== 'BC') || (action !== 'adjust') || (action === \"adjust\" && adjust.index !== i && adjust.extrusora === 'BC')) {\r\n            globalBC += global;\r\n            sumArranqueBC += arranque;\r\n        }\r\n        v.global = global;\r\n    }\r\n\r\n    if (action === \"adjust\") {\r\n        if (adjust.extrusora === 'A') {\r\n            listA[adjust.index].arranque_A = (100 - sumArranqueA) < 0 ? 0 : (100 - sumArranqueA);\r\n            listA[adjust.index].global = (ponderacaoA * (listA[adjust.index].arranque_A)) / 100;\r\n            globalA += listA[adjust.index].global;\r\n        } else {\r\n            listBC[adjust.index].arranque_BC = (100 - sumArranqueBC) < 0 ? 0 : (100 - sumArranqueBC);\r\n            listBC[adjust.index].global = (ponderacaoBC * (listBC[adjust.index].arranque_BC)) / 100;\r\n            globalBC += listBC[adjust.index].global;\r\n        }\r\n    }\r\n\r\n    return { ...rest, formu_materiasprimas_A: listA, formu_materiasprimas_BC: listBC, totalGlobal: (globalA + globalBC) };\r\n}\r\n\r\nconst SubFormMateriasPrimas = ({ form, forInput, name, matPrimasLookup, sum = false, border = \"solid 1px #d9d9d9\", id }) => {\r\n\r\n    const adjust = (idx, extrusora) => {\r\n        const fieldValues = updateGlobals({ values: form.getFieldsValue(true), adjust: { extrusora, index: idx }, action: \"adjust\" });\r\n        form.setFieldsValue(fieldValues);\r\n    }\r\n\r\n    return (\r\n        <Form.List name={name}>\r\n            {(fields, { add, remove, move }) => {\r\n\r\n                const addRow = (fields) => {\r\n                    add({ [`tolerancia_${id}`]: FORMULACAO_TOLERANCIA, removeCtrl: true });\r\n                    /* add({ item_id: 1, item_paletesize: '970x970', item_numbobines: 10 }, 0); */\r\n                }\r\n                const removeRow = (fieldName, field) => {\r\n                    remove(fieldName);\r\n                }\r\n                const moveRow = (from, to) => {\r\n                    move(from, to);\r\n                }\r\n\r\n                return (\r\n                    <>\r\n\r\n                        {fields.map((field, index) => (\r\n\r\n                            <FieldSet key={field.key} wide={16} layout=\"horizontal\" margin={false} field={{ label: { enabled: false } }}>\r\n                                <FieldSet wide={7} margin={false}\r\n                                    field={{\r\n                                        wide: [13, 3],\r\n                                        style: { border: \"solid 1px #fff\", borderLeft: \"none\", fontWeight: \"10px\" }\r\n                                    }}\r\n                                >\r\n                                    {/*                                     <Field name={[field.name, `mangueira_${id}`]}>\r\n                                        <SelectField size=\"small\" data={FORMULACAO_MANGUEIRAS[id]} keyField=\"key\" textField=\"key\"\r\n                                            optionsRender={(d, keyField, textField) => ({ label: `${d[textField]}`, value: d[keyField] })}\r\n                                        />\r\n                                    </Field> */}\r\n                                    <Field name={[field.name, `matprima_cod_${id}`]}>\r\n                                        <SelectField size=\"small\" data={matPrimasLookup} keyField=\"ITMREF_0\" textField=\"ITMDES1_0\"\r\n                                            optionsRender={(d, keyField, textField) => ({ label: `${d[textField]}`, value: d[keyField] })}\r\n                                            showSearch\r\n                                            filterOption={(input, option) => option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        />\r\n                                    </Field>\r\n                                    <Field name={[field.name, `densidade_${id}`]}><InputNumber controls={false} size=\"small\" min={0} max={50} precision={3} step={.025} /></Field>\r\n                                </FieldSet>\r\n                                <FieldSet margin={false} wide={9} margin={false}>\r\n                                    <FieldSet margin={false}\r\n                                        field={{\r\n                                            wide: [/* 3,  */4, 4, 4, 3, 1/* , 2, 3 */],\r\n                                            label: { enabled: false },\r\n                                            style: { border: \"solid 1px #fff\", borderLeft: \"none\", borderTop: \"none\" }\r\n                                        }}\r\n                                    >\r\n                                        {/* <Field name={[field.name, \"doseador\"]}><Input size=\"small\" /></Field> */}\r\n                                        <Field></Field>\r\n                                        <Field name={[field.name, `arranque_${id}`]}><InputNumber size=\"small\" controls={false} {...(forInput && { addonBefore: <IconButton onClick={() => adjust(index, id)}><MdAdjust /></IconButton> })} addonAfter={<b>%</b>} precision={2} min={0} max={100} /></Field>\r\n                                        <Field name={[field.name, `tolerancia_${id}`]}><InputNumber size=\"small\" controls={false} addonBefore=\"&plusmn;\" addonAfter={<b>%</b>} maxLength={4} precision={1} min={0} max={100} /></Field>\r\n                                        <Field style={{ textAlign: \"center\", border: \"solid 1px #fff\", borderLeft: \"none\", borderTop: \"none\" }}>{append(form.getFieldValue([name, field.name, \"global\"])?.toFixed(2), '%')}{/* <InputNumber size=\"small\" addonAfter={<b>%</b>} maxLength={4} min={0} max={100} /> */}</Field>\r\n                                        <FieldItem label={{ enabled: false }}>{forInput && <IconButton onClick={() => removeRow(field.name, field)} style={{ alignSelf: \"center\" }}><CgCloseO /></IconButton>}</FieldItem>\r\n                                        {/*<Field name={[field.name, \"checklist\"]}><CheckboxField /></Field>\r\n                                        <Field name={[field.name, \"check_datetime\"]}><DatePicker /></Field> */}\r\n                                    </FieldSet>\r\n                                </FieldSet>\r\n                            </FieldSet>\r\n\r\n                        ))}\r\n                        {(sum && form.getFieldValue(\"totalGlobal\") > 0) &&\r\n                            <FieldSet wide={16} layout=\"horizontal\" margin={false} field={{ label: { enabled: false } }}>\r\n                                <FieldSet wide={7} margin={false} />\r\n                                <FieldSet margin={false} wide={9} margin={false}>\r\n                                    <FieldSet margin={false}\r\n                                        field={{\r\n                                            wide: [12, 4],\r\n                                            label: { enabled: false },\r\n                                            style: { border: \"solid 1px #fff\", borderLeft: \"none\", borderTop: \"none\" }\r\n                                        }}\r\n                                    >\r\n                                        <Field></Field>\r\n                                        <Field style={{ marginTop: \"4px\", textAlign: \"center\", fontWeight: 500, border }}>{append(form.getFieldValue(\"totalGlobal\").toFixed(2), '%')}</Field>\r\n                                    </FieldSet>\r\n                                </FieldSet>\r\n                            </FieldSet>\r\n                        }\r\n                        <FieldSet>\r\n                            {forInput && <Button type=\"dashed\" onClick={() => addRow(fields)} style={{ width: \"100%\" }}><PlusOutlined />Adicionar</Button>}\r\n                        </FieldSet>\r\n                    </>\r\n                );\r\n            }}\r\n        </Form.List>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst LoadMateriasPrimasLookup = async (record) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/materiasprimaslookup/`, filter: {} });\r\n    return rows;\r\n}\r\nconst loadCustomersLookup = async (value) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/sellcustomerslookup/`, pagination: { limit: 10 }, filter: { [\"fmulti_customer\"]: `%${value.replaceAll(' ', '%%')}%` } });\r\n    return rows;\r\n}\r\n\r\nconst loadFormulacaoesLookup = async ({ produto_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/formulacoeslookup/`, filter: { produto_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\nconst getFormulacaoMateriasPrimas = async ({ formulacao_id, token }) => {\r\n    if (!formulacao_id) {\r\n        return [];\r\n    }\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/formulacaomateriasprimasget/`, filter: { formulacao_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [isTouched, setIsTouched] = useState(false);\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.formulacao.id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n    const [matPrimasLookup, setMatPrimasLookup] = useState([]);\r\n    const [formulacoes, setFormulacoes] = useState([]);\r\n\r\n    const transformData = ({ items, formulacao }) => {\r\n        let formu_materiasprimas_A = items?.filter(v => (v.extrusora === 'A')).map(v => ({ global: v.vglobal, matprima_cod_A: v.matprima_cod, densidade_A: v.densidade, arranque_A: v.arranque, tolerancia_A: v.tolerancia, removeCtrl: true }));\r\n        let formu_materiasprimas_BC = items?.filter(v => (v.extrusora === 'BC')).map(v => ({ global: v.vglobal, matprima_cod_BC: v.matprima_cod, densidade_BC: v.densidade, arranque_BC: v.arranque, tolerancia_BC: v.tolerancia, removeCtrl: true }));\r\n        const cliente_cod = { key: record.formulacao?.cliente_cod, value: formulacao?.cliente_cod, label: formulacao?.cliente_nome };\r\n        return { ...formulacao, cliente_cod, formu_materiasprimas_A, formu_materiasprimas_BC, totalGlobal: 100 };\r\n    }\r\n\r\n    const init = (lookup = false, token) => {\r\n        (async () => {\r\n            if (lookup) {\r\n                setMatPrimasLookup(await LoadMateriasPrimasLookup(record));\r\n            }\r\n            if (operation.key === \"update\") {\r\n                const { items, produto_id } = record.formulacao;\r\n                (setFormTitle) && setFormTitle({ title: `Formulação` });\r\n                setFormulacoes(await loadFormulacaoesLookup({ produto_id, token }));\r\n                form.setFieldsValue(transformData({ items, formulacao: record?.formulacao }));\r\n            }\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        init(true, cancelFetch);\r\n        return (() => cancelFetch.cancel(\"Form Formulação Cancelled\"));\r\n    }, []);\r\n\r\n    const onValuesChange = async (changedValues, { formu_materiasprimas_A: allA = [], formu_materiasprimas_BC: allBC = [], ...allValues }) => {\r\n        if ('id' in changedValues) {\r\n            const formulacao = formulacoes.find(v => v.id === changedValues.id);\r\n            const items = await getFormulacaoMateriasPrimas({ formulacao_id: changedValues.id });\r\n            form.setFieldsValue(transformData({ items, formulacao: formulacao }));\r\n        } else {\r\n            const formu_materiasprimas_A = allA.filter(v => v.removeCtrl === true);\r\n            const formu_materiasprimas_BC = allBC.filter(v => v.removeCtrl === true);\r\n            const fieldValues = updateGlobals({ values: { ...allValues, formu_materiasprimas_A, formu_materiasprimas_BC }, action: \"valueschange\" });\r\n            form.setFieldsValue(fieldValues);\r\n        }\r\n        setIsTouched(true);\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        if (!isTouched) {\r\n            return;\r\n        }\r\n        const items = [];\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const msgKeys = [\"formu_materiasprimas_A\", \"formu_materiasprimas_BC\"];\r\n        const v = schema(false, ['matprima_cod_A', 'densidade_A', 'arranque_A', 'matprima_cod_BC', 'densidade_BC', 'arranque_BC']).validate(values, { abortEarly: false });\r\n        status.error = [...status.error, ...(v.error ? v.error?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        status.warning = [...status.warning, ...(v.warning ? v.warning?.details.filter((v) => msgKeys.includes(v.context.key)) : [])];\r\n        let fieldValues;\r\n        if (!v.error) {\r\n            fieldValues = updateGlobals({ values, action: \"finish\" });\r\n\r\n            let sumA = fieldValues.formu_materiasprimas_A.reduce((a, b) => a + (b[\"arranque_A\"] || 0), 0);\r\n            let sumBC = fieldValues.formu_materiasprimas_BC.reduce((a, b) => a + (b[\"arranque_BC\"] || 0), 0);\r\n\r\n            if (Math.round(fieldValues.totalGlobal) !== 100) {\r\n                status.error.push({ message: \"O Total Global das Matérias Primas tem de ser 100%!\" });\r\n            } else if (sumA !== 100) {\r\n                status.error.push({ message: \"O Total das Matérias Primas da Extrusora A tem de ser 100%!\" });\r\n            }\r\n            else if (sumBC !== 100) {\r\n                status.error.push({ message: \"O Total das Matérias Primas das Extrusoras B&C tem de ser 100%!\" });\r\n            }\r\n        }\r\n\r\n        if (status.error.length === 0 && fieldValues) {\r\n            for (let v of fieldValues?.formu_materiasprimas_A) {\r\n                let matprima_des = matPrimasLookup.find(val => val.ITMREF_0 === v.matprima_cod_A)?.ITMDES1_0;\r\n                items.push({\r\n                    tolerancia: v.tolerancia_A, arranque: v.arranque_A, vglobal: v.global,\r\n                    densidade: v.densidade_A, extrusora: 'A', matprima_cod: v.matprima_cod_A,\r\n                    matprima_des\r\n                });\r\n            }\r\n            for (let v of fieldValues?.formu_materiasprimas_BC) {\r\n                let matprima_des = matPrimasLookup.find(val => val.ITMREF_0 === v.matprima_cod_BC)?.ITMDES1_0;\r\n                items.push({\r\n                    tolerancia: v.tolerancia_BC, arranque: v.arranque_BC, vglobal: v.global,\r\n                    densidade: v.densidade_BC, extrusora: 'BC', matprima_cod: v.matprima_cod_BC,\r\n                    matprima_des\r\n                });\r\n            }\r\n            const { cliente_cod: { value: cliente_cod, label: cliente_nome } = {} } = values;\r\n            const response = await fetchPost({ url: `${API_URL}/updatecurrentsettings/`, filter: { csid: record.id }, parameters: { type: 'formulacao', formulacao: { ...values, items, produto_id: record.formulacao.produto_id, cliente_cod, cliente_nome } } });\r\n            setResultMessage(response.data);\r\n            if (response.data.status !== \"error\") {\r\n                throw 'TODO RELOAD PARENT'\r\n                //parentReload({ formulacao_id: record.formulacao.id }, \"init\");\r\n            }\r\n        }\r\n        setFormStatus(status);\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Criar Nova Formulação</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`fps`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-FORMULACAO-UPSERT\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\", height: \"65vh\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        {forInput && <>\r\n                            <FieldSet>\r\n                                <Toolbar\r\n                                    style={{ width: \"100%\" }}\r\n                                    left={\r\n                                        <FieldSet>\r\n                                            <Field name=\"id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: false, text: \"Formulacao\", pos: \"left\" }}>\r\n                                                <SelectField size=\"small\" data={formulacoes} keyField=\"id\" textField=\"designacao\"\r\n                                                    optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                                                />\r\n                                            </Field>\r\n                                        </FieldSet>\r\n                                    }\r\n                                    right={<div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                        <FieldSet style={{ minWidth: \"300px\" }} margin={false} field={{ wide: [16] }}>\r\n                                            <Field name=\"cliente_cod\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: false, text: \"Cliente\", pos: \"left\" }}>\r\n                                                <SelectDebounceField\r\n                                                    placeholder=\"Cliente\"\r\n                                                    size=\"small\"\r\n                                                    keyField=\"BPCNUM_0\"\r\n                                                    textField=\"BPCNAM_0\"\r\n                                                    showSearch\r\n                                                    showArrow\r\n                                                    allowClear\r\n                                                    fetchOptions={loadCustomersLookup}\r\n                                                />\r\n                                            </Field>\r\n                                        </FieldSet>\r\n                                    </div>}\r\n                                />\r\n                            </FieldSet>\r\n                        </>\r\n                        }\r\n                        {!forInput && <>\r\n                            <FieldSet margin={false} field={{ wide: [16] }}>\r\n                                <Field name=\"cliente_cod\" required={false} layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: false, text: \"Cliente\", pos: \"left\" }}>\r\n                                    <SelectDebounceField\r\n                                        placeholder=\"Cliente\"\r\n                                        size=\"small\"\r\n                                        keyField=\"BPCNUM_0\"\r\n                                        textField=\"BPCNAM_0\"\r\n                                        showSearch\r\n                                        showArrow\r\n                                        allowClear\r\n                                        fetchOptions={loadCustomersLookup}\r\n                                    />\r\n                                </Field>\r\n                            </FieldSet>\r\n                            <VerticalSpace height=\"6px\" />\r\n                        </>\r\n                        }\r\n\r\n                        {forInput && <><FieldSet wide={16} margin={false}>\r\n                            <FieldSet wide={3} />\r\n                            <FieldSet wide={10} margin={false} layout=\"vertical\" field={{ split: 5, wide: undefined }}>\r\n                                <FieldSet margin={false}>\r\n                                    <Field name=\"extr0\" label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                    <Field name=\"extr1\" label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                    <Field name=\"extr2\" label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                    <Field name=\"extr3\" label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                    <Field name=\"extr4\" label={{ enabled: false }}><Input disabled={true} size=\"small\" /></Field>\r\n                                </FieldSet>\r\n                                <FieldSet margin={false}>\r\n                                    <Field name=\"extr0_val\" label={{ enabled: false }}><InputNumber disabled={true} size=\"small\" addonAfter={<b>%</b>} maxLength={4} /></Field>\r\n                                    <Field name=\"extr1_val\" label={{ enabled: false }}><InputNumber disabled={true} size=\"small\" addonAfter={<b>%</b>} maxLength={4} /></Field>\r\n                                    <Field name=\"extr2_val\" label={{ enabled: false }}><InputNumber disabled={true} size=\"small\" addonAfter={<b>%</b>} maxLength={4} /></Field>\r\n                                    <Field name=\"extr3_val\" label={{ enabled: false }}><InputNumber disabled={true} size=\"small\" addonAfter={<b>%</b>} maxLength={4} /></Field>\r\n                                    <Field name=\"extr4_val\" label={{ enabled: false }}><InputNumber disabled={true} size=\"small\" addonAfter={<b>%</b>} maxLength={4} /></Field>\r\n                                </FieldSet>\r\n                            </FieldSet>\r\n                            <FieldSet wide={3} />\r\n                        </FieldSet>\r\n                            <VerticalSpace height=\"12px\" />\r\n                        </>}\r\n\r\n                        <HeaderA />\r\n                        <SubFormMateriasPrimas form={form} name=\"formu_materiasprimas_A\" forInput={forInput} matPrimasLookup={matPrimasLookup} id=\"A\" />\r\n                        <HeaderBC />\r\n                        <SubFormMateriasPrimas form={form} name=\"formu_materiasprimas_BC\" forInput={forInput} matPrimasLookup={matPrimasLookup} sum={true} id=\"BC\" />\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        {isTouched && <Button type=\"primary\" onClick={() => onFinish(form.getFieldsValue(true))}>Guardar</Button>}\r\n                        <Button onClick={onClose}>Fechar</Button>\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}"],"names":["schema","keys","excludeKeys","getSchema","formu_materiasprimas_A","Joi","label","min","required","formu_materiasprimas_BC","matprima_cod_A","densidade_A","arranque_A","matprima_cod_BC","densidade_BC","arranque_BC","unknown","append","value","suffix","prefix","onUndefined","HeaderA","backgroundColor","color","border","wide","layout","margin","style","fontWeight","textAlign","field","noItemWrap","enabled","borderLeft","alignSelf","display","flexDirection","justifyContent","fontSize","borderTop","HeaderBC","updateGlobals","values","adjust","extrusora","index","action","listA","listBC","rest","ponderacaoA","FORMULACAO_PONDERACAO_EXTR","ponderacaoBC","globalA","globalBC","sumArranqueA","sumArranqueBC","entries","i","v","arranque","global","totalGlobal","SubFormMateriasPrimas","form","forInput","name","matPrimasLookup","sum","id","fields","add","remove","move","map","key","size","data","keyField","textField","optionsRender","d","showSearch","filterOption","input","option","toLowerCase","indexOf","controls","max","precision","step","addonBefore","onClick","idx","fieldValues","getFieldsValue","setFieldsValue","addonAfter","maxLength","getFieldValue","toFixed","fieldName","marginTop","type","FORMULACAO_TOLERANCIA","width","LoadMateriasPrimasLookup","record","fetchPost","url","API_URL","filter","rows","loadCustomersLookup","pagination","limit","replaceAll","loadFormulacaoesLookup","produto_id","token","sort","cancelToken","getFormulacaoMateriasPrimas","formulacao_id","setFormTitle","parentRef","closeParent","parentReload","wrapForm","Form","useState","setLoading","setChangedValues","isTouched","setIsTouched","error","warning","info","success","formStatus","setFormStatus","guides","formulacao","operation","status","resultMessage","setResultMessage","setMatPrimasLookup","formulacoes","setFormulacoes","transformData","items","vglobal","matprima_cod","densidade","tolerancia_A","tolerancia","removeCtrl","tolerancia_BC","cliente_cod","cliente_nome","init","lookup","title","useEffect","cancelFetch","cancel","onValuesChange","changedValues","allA","allBC","allValues","find","onFinish","msgKeys","validate","abortEarly","details","includes","context","sumA","reduce","a","b","sumBC","Math","round","push","message","length","matprima_des","val","ITMREF_0","ITMDES1_0","csid","parameters","response","onClose","result","successButtonOK","resetFields","successButtonClose","errorButtonOK","errorButtonClose","component","padding","height","overflow","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","top","right","center","bottom","left","fieldSet","text","minWidth","placeholder","showArrow","allowClear","fetchOptions","split","undefined","disabled","elId","current"],"sourceRoot":""}