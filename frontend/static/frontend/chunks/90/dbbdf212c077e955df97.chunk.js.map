{"version":3,"file":"chunks/90/dbbdf212c077e955df97.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/currentline/FormGamaOperatoriaUpsert.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace, InputAddon } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Toolbar from \"components/toolbar\";\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber, DatePicker } from \"antd\";\r\nimport { PlusOutlined, VerticalAlignBottomOutlined } from '@ant-design/icons';\r\nimport { MdAdjust } from 'react-icons/md';\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, GAMAOPERATORIA } from 'config';\r\nconst gamaOperatoriaItems = GAMAOPERATORIA.filter(v => !v?.disabled);\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        //designacao: Joi.string().label(\"Designação\").required()\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nconst loadGamasOperatoriasLookup = async ({ produto_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/gamasoperatoriaslookup/`, filter: { produto_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\nconst getGamaOperatoriaItems = async ({ gamaoperatoria_id, token }) => {\r\n    if (!gamaoperatoria_id) {\r\n        return [];\r\n    }\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/gamaoperatoriaitemsget/`, filter: { gamaoperatoria_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [isTouched, setIsTouched] = useState(false);\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.gamaoperatoria.id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n    const [gamasOperatorias, setGamasOperatorias] = useState([]);\r\n\r\n\r\n    const transformData = ({ items, gamaoperatoria }) => {\r\n        const fieldsValue = { nitems: items.length };\r\n        for (let [i, v] of items.entries()) {\r\n            fieldsValue[`key-${i}`] = v.item_key;\r\n            fieldsValue[`des-${i}`] = v.item_des;\r\n            fieldsValue[`tolerancia-${i}`] = v.tolerancia;\r\n            const vals = (typeof v.item_values === \"string\") ? JSON.parse(v.item_values) : v.item_values;\r\n            for (let [iV, vV] of vals.entries()) {\r\n                fieldsValue[`v${v.item_key}-${iV}`] = vV;\r\n            }\r\n        }\r\n        return { ...gamaoperatoria, ...fieldsValue };\r\n    }\r\n\r\n    const init = (lookup = false, token) => {\r\n        (async () => {\r\n            if (lookup) {\r\n\r\n            }\r\n            if (operation.key === \"update\") {\r\n                (setFormTitle) && setFormTitle({ title: `Gama Operatória` });\r\n                const { items, ...gamaoperatoria } = record.gamaoperatoria;\r\n                setGamasOperatorias(await loadGamasOperatoriasLookup({ produto_id: gamaoperatoria.produto_id, token }));\r\n                form.setFieldsValue(transformData({ items, gamaoperatoria }));\r\n            }\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        init(true, cancelFetch);\r\n        return (() => cancelFetch.cancel(\"Form Gama Operatória Cancelled\"));\r\n    }, []);\r\n\r\n    const onValuesChange = async (changedValues) => {\r\n        setIsTouched(true);\r\n        if ('id' in changedValues) {\r\n            const gamaoperatoria = gamasOperatorias.find(v=>v.id===changedValues.id);\r\n            const items = await getGamaOperatoriaItems({ gamaoperatoria_id: changedValues.id });\r\n            form.setFieldsValue(transformData({ items, gamaoperatoria }));\r\n        }\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        if (!isTouched) {\r\n            return;\r\n        }\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const v = schema().validate(values, { abortEarly: false });\r\n        if (!v.error) {\r\n            let error = false;\r\n            for (let k in values) {\r\n                if (k !== 'designacao' && values[k] === undefined) {\r\n                    error = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (error) {\r\n                status.error.push({ message: \"Os items da Gama Operatória têm de estar preenchidos!\" });\r\n            }\r\n            if (status.error.length === 0) {\r\n                const response = await fetchPost({ url: `${API_URL}/updatecurrentsettings/`, filter: { csid: record.id }, parameters: { type: 'gamaoperatoria', gamaoperatoria: { ...form.getFieldsValue(true), produto_id: record.gamaoperatoria.produto_id } } });\r\n                setResultMessage(response.data);\r\n                if (response.data.status !== \"error\") {\r\n                    throw 'TODO RELOAD PARENT'\r\n                    //parentReload({ formulacao_id: record.formulacao.id }, \"init\");\r\n                }\r\n                // //const response = await fetchPost({ url: `${API_URL}/newgamaoperatoria/`, parameters: { ...form.getFieldsValue(true), produto_id: record.gamaoperatoria.produto_id } });\r\n                // if (response.data.status !== \"error\") {\r\n                //     parentReload({ gamaoperatoria_id: record.gamaoperatoria_id }, \"init\");\r\n                // }\r\n                // setResultMessage(response.data);\r\n            }\r\n        }\r\n\r\n        setFormStatus(status);\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Criar Nova Gama Operatória</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`fps`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-GAMAOPERATORIA-UPSERT\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        {forInput && <FieldSet wide={16}>\r\n                            <Toolbar\r\n                                style={{ width: \"100%\" }}\r\n                                left={\r\n                                    <FieldSet>\r\n                                        <Field name=\"id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: false, text: \"Gama Operatória\", pos: \"left\" }}>\r\n                                            <SelectField size=\"small\" data={gamasOperatorias} keyField=\"id\" textField=\"designacao\"\r\n                                                optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                                            />\r\n                                        </Field>\r\n                                    </FieldSet>\r\n                                }\r\n                            />\r\n                        </FieldSet>\r\n                        }\r\n                        <FieldSet wide={16} margin={false} layout=\"vertical\">\r\n                            {gamaOperatoriaItems.map((v, idx) =>\r\n                                <FieldSet key={`gop-${idx}`} wide={16} field={{ wide: [5, 9, 2] }} margin={false}>\r\n                                    <FieldItem label={{ enabled: false }} style={{ fontSize: \"11px\" }}>\r\n                                        <b>{v.designacao}</b> ({v.unidade})\r\n                                    </FieldItem>\r\n                                    <FieldSet wide={9} margin={false}>\r\n                                        {[...Array(v.nvalues)].map((x, i) =>\r\n                                            <Field split={9} key={`${v.key}-${i}`} name={`v${v.key}-${i}`} label={{ enabled: false }}>\r\n                                                <InputNumber min={v.min} max={v.max} controls={false} size=\"small\" precision={v?.precision} />\r\n                                            </Field>\r\n                                        )}\r\n                                    </FieldSet>\r\n                                    <Field name={`tolerancia-${idx}`} label={{ enabled: false }}><InputNumber style={{ maxWidth: \"70px\" }} addonBefore=\"&plusmn;\" min={0} max={100} controls={false} size=\"small\" /></Field>\r\n                                </FieldSet>\r\n                            )}\r\n                        </FieldSet>\r\n\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        {isTouched && <Button type=\"primary\" onClick={() => onFinish(form.getFieldsValue(true))}>Guardar</Button>}\r\n                        <Button onClick={onClose}>Fechar</Button>\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}"],"names":["gamaOperatoriaItems","GAMAOPERATORIA","v","disabled","schema","keys","excludeKeys","getSchema","unknown","loadGamasOperatoriasLookup","produto_id","token","fetchPost","url","API_URL","filter","sort","cancelToken","rows","data","getGamaOperatoriaItems","gamaoperatoria_id","id","record","setFormTitle","parentRef","closeParent","parentReload","wrapForm","forInput","form","Form","useState","setLoading","setChangedValues","isTouched","setIsTouched","error","warning","info","success","formStatus","setFormStatus","guides","gamaoperatoria","key","values","operation","status","resultMessage","setResultMessage","gamasOperatorias","setGamasOperatorias","transformData","items","fieldsValue","nitems","length","entries","i","item_key","item_des","tolerancia","item_values","JSON","parse","iV","vV","init","title","setFieldsValue","useEffect","cancelFetch","cancel","onValuesChange","changedValues","find","onFinish","validate","abortEarly","k","undefined","push","message","csid","parameters","type","getFieldsValue","response","onClose","result","successButtonOK","onClick","resetFields","successButtonClose","errorButtonOK","errorButtonClose","name","component","layout","style","width","padding","field","wide","margin","overflow","label","enabled","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","top","right","center","bottom","left","required","alignSelf","fieldSet","text","size","keyField","textField","optionsRender","d","display","minWidth","value","map","idx","fontSize","designacao","unidade","Array","nvalues","x","split","min","max","controls","precision","maxWidth","addonBefore","elId","current"],"sourceRoot":""}