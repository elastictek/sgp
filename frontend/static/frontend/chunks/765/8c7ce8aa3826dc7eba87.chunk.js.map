{"version":3,"file":"chunks/765/8c7ce8aa3826dc7eba87.chunk.js","mappings":"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","sources":["webpack://sgp/./src/pages/planeamento/gamaOperatoria/FormGamaOperatoriaUpsert.jsx","webpack://sgp/./src/pages/planeamento/ordemFabrico/FormGamaOperatoria.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { getSchema } from \"utils/schemaValidator\";\r\nimport { FormLayout, Field, FieldSet, FieldItem, AlertsContainer, Item, SelectField, CheckboxField, HorizontalRule, VerticalSpace, InputAddon } from \"components/formLayout\";\r\nimport AlertMessages from \"components/alertMessages\";\r\nimport IconButton from \"components/iconButton\";\r\nimport ResultMessage from 'components/resultMessage';\r\nimport Portal from \"components/portal\";\r\nimport { Input, Space, Form, Button, InputNumber, DatePicker } from \"antd\";\r\nimport { PlusOutlined, VerticalAlignBottomOutlined } from '@ant-design/icons';\r\nimport { MdAdjust } from 'react-icons/md';\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport { DATE_FORMAT, DATETIME_FORMAT, GAMAOPERATORIA } from 'config';\r\nimport { OFabricoContext } from '../ordemFabrico/FormOFabricoValidar';\r\nconst gamaOperatoriaItems = GAMAOPERATORIA.filter(v => !v?.disabled);\r\n\r\nconst schema = (keys, excludeKeys) => {\r\n    return getSchema({\r\n        //designacao: Joi.string().label(\"Designação\").required()\r\n    }, keys, excludeKeys).unknown(true);\r\n}\r\n\r\nconst setId = (id) => {\r\n    if (id) {\r\n        return { key: \"update\", values: { id } };\r\n    }\r\n    return { key: \"insert\", values: {} };\r\n}\r\n\r\nexport default ({ record, setFormTitle, parentRef, closeParent, parentReload, wrapForm = \"form\", forInput = true }) => {\r\n    const ctx = useContext(OFabricoContext);\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [changedValues, setChangedValues] = useState({});\r\n    const [formStatus, setFormStatus] = useState({ error: [], warning: [], info: [], success: [] });\r\n    const [guides, setGuides] = useState(false);\r\n    const [operation, setOperation] = useState(setId(record.gamaoperatoria_id));\r\n    const [resultMessage, setResultMessage] = useState({ status: \"none\" });\r\n\r\n    const init = (lookup = false) => {\r\n        (async () => {\r\n            if (lookup) {\r\n\r\n            }\r\n            if (operation.key === \"update\") {\r\n                (setFormTitle) && setFormTitle({ title: `Editar Gama Operatória` });\r\n                form.setFieldsValue({ ...record.gamaOperatoria, ...record.gamaOperatoriaItems });\r\n            } else {\r\n                (setFormTitle) && setFormTitle({ title: `Nova Gama Operatória ${ctx.item_cod}`, subTitle: `${ctx.item_nome}` });\r\n                const initValues = {};\r\n                initValues[`nitems`] = gamaOperatoriaItems.length;\r\n                for (let [idx, v] of gamaOperatoriaItems.entries()) {\r\n                    initValues[`key-${idx}`] = v.key;\r\n                    initValues[`des-${idx}`] = v.designacao;\r\n                    initValues[`tolerancia-${idx}`] = v.tolerancia;\r\n                }\r\n                form.setFieldsValue(initValues);\r\n            }\r\n            setLoading(false);\r\n        })();\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(true);\r\n    }, []);\r\n\r\n    const onValuesChange = (changedValues) => {\r\n        setChangedValues(changedValues);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        const status = { error: [], warning: [], info: [], success: [] };\r\n        const v = schema().validate(values, { abortEarly: false });\r\n\r\n        if (!v.error) {\r\n            let error = false;\r\n            for (let k in values) {\r\n                if (k !== 'designacao' && (values[k] === undefined || values[k] === null)) {\r\n                    error = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (error) {\r\n                status.error.push({ message: \"Os items da Gama Operatória têm de estar preenchidos!\" });\r\n            }\r\n            if (status.error.length === 0) {\r\n                const response = await fetchPost({ url: `${API_URL}/newgamaoperatoria/`, parameters: { ...form.getFieldsValue(true), produto_id: ctx.produto_id } });\r\n                if (response.data.status !== \"error\") {\r\n                    parentReload({ gamaoperatoria_id: record.gamaoperatoria_id }, \"init\");\r\n                }\r\n                setResultMessage(response.data);\r\n            }\r\n        }\r\n        setSubmitting(false);\r\n        setFormStatus(status);\r\n    }\r\n\r\n    const onSuccessOK = () => {\r\n        if (operation.key === \"insert\") {\r\n            form.resetFields();\r\n            init();\r\n            setResultMessage({ status: \"none\" });\r\n        }\r\n        setSubmitting(false);\r\n    }\r\n\r\n    const onErrorOK = () => {\r\n        setSubmitting(false);\r\n        setResultMessage({ status: \"none\" });\r\n    }\r\n\r\n    const onClose = (reload = false) => {\r\n        closeParent();\r\n    }\r\n\r\n    const onSubmit = useCallback(async () => {\r\n        setSubmitting(true);\r\n        onFinish(form.getFieldsValue(true));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ResultMessage\r\n                result={resultMessage}\r\n                successButtonOK={operation.key === \"insert\" && <Button type=\"primary\" key=\"goto-of\" onClick={onSuccessOK}>Criar Nova Gama Operatória</Button>}\r\n                successButtonClose={<Button key=\"goto-close\" onClick={() => onClose(true)}>Fechar</Button>}\r\n                errorButtonOK={<Button type=\"primary\" key=\"goto-ok\" onClick={onErrorOK}>OK</Button>}\r\n                errorButtonClose={<Button key=\"goto-close\" onClick={onClose}>Fechar</Button>}\r\n            >\r\n                <AlertsContainer id=\"el-external\" />\r\n                <AlertMessages formStatus={formStatus} />\r\n                <Form form={form} name={`fps`} onFinish={onFinish} onValuesChange={onValuesChange} component={wrapForm}>\r\n                    <FormLayout\r\n                        id=\"LAY-GAMAOPERATORIA-UPSERT\"\r\n                        guides={guides}\r\n                        layout=\"vertical\"\r\n                        style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                        schema={schema}\r\n                        field={{\r\n                            forInput,\r\n                            wide: [16],\r\n                            margin: \"2px\", overflow: false, guides: guides,\r\n                            label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", /* width: \"80px\", */ wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                            alert: { pos: \"right\", tooltip: true, container: false /* container: \"el-external\" */ },\r\n                            layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                            required: true,\r\n                            style: { alignSelf: \"top\" }\r\n                        }}\r\n                        fieldSet={{\r\n                            guides: guides,\r\n                            wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                        }}\r\n                    >\r\n                        {forInput && <>\r\n                            <FieldSet margin={false} field={{ wide: [6, 4] }}>\r\n                                <Field name=\"designacao\" label={{ enabled: false }}><Input placeholder=\"Designação\" size=\"small\" /></Field>\r\n                            </FieldSet>\r\n                            <VerticalSpace height=\"24px\" />\r\n                        </>\r\n                        }\r\n\r\n                        <FieldSet wide={16} margin={false} layout=\"vertical\">\r\n                            {gamaOperatoriaItems.map((v, idx) =>\r\n                                <FieldSet key={`gop-${idx}`} wide={16} field={{ wide: [5, 9, 2] }} margin={false}>\r\n                                    <FieldItem label={{ enabled: false }} style={{ fontSize: \"11px\" }}>\r\n                                        <b>{v.designacao}</b> ({v.unidade})\r\n                                    </FieldItem>\r\n                                    <FieldSet wide={9} margin={false}>\r\n                                        {[...Array(v.nvalues)].map((x, i) =>\r\n                                            <Field split={9} key={`${v.key}-${i}`} name={`v${v.key}-${i}`} label={{ enabled: false }}>\r\n                                                <InputNumber min={v.min} max={v.max} controls={false} size=\"small\" precision={v?.precision} />\r\n                                            </Field>\r\n                                        )}\r\n                                    </FieldSet>\r\n                                    <Field name={`tolerancia-${idx}`} label={{ enabled: false }}><InputNumber style={{ maxWidth: \"70px\" }} addonBefore=\"&plusmn;\" min={0} max={100} controls={false} size=\"small\" /></Field>\r\n                                </FieldSet>\r\n                            )}\r\n                        </FieldSet>\r\n\r\n                    </FormLayout>\r\n                </Form>\r\n                {parentRef && <Portal elId={parentRef.current}>\r\n                    <Space>\r\n                        <Button disabled={submitting} onClick={onSubmit} type=\"primary\">Guardar</Button>\r\n                        {/* <Button onClick={() => setGuides(!guides)}>{guides ? \"No Guides\" : \"Guides\"}</Button> */}\r\n                    </Space>\r\n                </Portal>\r\n                }\r\n            </ResultMessage>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\nimport Joi from 'joi';\r\nimport { fetch, fetchPost, cancelToken } from \"utils/fetch\";\r\nimport { API_URL } from \"config\";\r\nimport { WrapperForm, TitleForm, FormLayout, Field, FieldSet, Label, LabelField, FieldItem, AlertsContainer, Item, SelectField, InputAddon } from \"components/formLayout\";\r\nimport Toolbar from \"components/toolbar\";\r\nimport { Button, Spin } from \"antd\";\r\nimport { LoadingOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { DATE_FORMAT, DATETIME_FORMAT } from 'config';\r\nimport FormGamaOperatoriaUpsert from '../gamaOperatoria/FormGamaOperatoriaUpsert';\r\nimport { OFabricoContext } from './FormOFabricoValidar';\r\n\r\nconst Drawer = ({ showWrapper, setShowWrapper, parentReload }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n    const { record = {} } = showWrapper;\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type=\"drawer\"\r\n            destroyOnClose={true}\r\n            //width={width}\r\n            mask={true}\r\n            /* style={{ maginTop: \"48px\" }} */\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            width={800}\r\n            bodyStyle={{ height: \"450px\" /*  paddingBottom: 80 *//* , overflowY: \"auto\", minHeight: \"350px\", maxHeight: \"calc(100vh - 50px)\" */ }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n        >\r\n            <FormGamaOperatoriaUpsert setFormTitle={setFormTitle} record={record} parentRef={iref} closeParent={onVisible} parentReload={parentReload} />\r\n        </WrapperForm>\r\n    );\r\n}\r\n\r\nconst loadGamasOperatoriasLookup = async ({ produto_id, token }) => {\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/gamasoperatoriaslookup/`, filter: { produto_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\nconst getGamaOperatoriaItems = async ({ gamaoperatoria_id, token }) => {\r\n    if (!gamaoperatoria_id) {\r\n        return [];\r\n    }\r\n    const { data: { rows } } = await fetchPost({ url: `${API_URL}/gamaoperatoriaitemsget/`, filter: { gamaoperatoria_id }, sort: [], cancelToken: token });\r\n    return rows;\r\n}\r\n\r\nexport default ({ changedValues }) => {\r\n    const { form, guides, schema, fieldStatus, ...ctx } = useContext(OFabricoContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [showForm, setShowForm] = useState({ show: false });\r\n    const [gamasOperatorias, setGamasOperatorias] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        loadData({ gamaoperatoria_id: form.getFieldValue(\"gamaoperatoria_id\"), token: cancelFetch });\r\n        return (() => cancelFetch.cancel(\"Form Gama Operatória Cancelled\"));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const cancelFetch = cancelToken();\r\n        if (changedValues) {\r\n            if (\"gamaoperatoria_id\" in changedValues) {\r\n                setLoading(true);\r\n                loadData({ gamaoperatoria_id: changedValues.gamaoperatoria_id, token: cancelFetch });\r\n            }\r\n        }\r\n        return (() => cancelFetch.cancel(\"Form Gama Operatória Cancelled\"));\r\n    }, [changedValues]);\r\n\r\n    const loadData = (data = {}, type = \"init\") => {\r\n        const { gamaoperatoria_id, token } = data;\r\n        switch (type) {\r\n            case \"lookup\":\r\n                setLoading(true);\r\n                (async () => {\r\n                    setGamasOperatorias(await loadGamasOperatoriasLookup({ produto_id: ctx.produto_id, token }));\r\n                    setLoading(false);\r\n                })();\r\n                break;\r\n            default:\r\n                if (!loading) {\r\n                    setLoading(true);\r\n                }\r\n                (async () => {\r\n                    let _gamasoperatorias = gamasOperatorias;\r\n                    if (ctx.produto_id) {\r\n                        _gamasoperatorias = await loadGamasOperatoriasLookup({ produto_id: ctx.produto_id, token });\r\n                        setGamasOperatorias(_gamasoperatorias);\r\n                    }\r\n                    if (gamaoperatoria_id) {\r\n                        const [gamaOperatoria] = _gamasoperatorias.filter(v => v.id === gamaoperatoria_id);\r\n                        const gamaOperatoriaItems = await getGamaOperatoriaItems({ gamaoperatoria_id, token });\r\n\r\n                        const fieldsValue = { nitems: gamaOperatoriaItems.length };\r\n                        for (let [i, v] of gamaOperatoriaItems.entries()) {\r\n                            fieldsValue[`key-${i}`] = v.item_key;\r\n                            fieldsValue[`des-${i}`] = v.item_des;\r\n                            fieldsValue[`tolerancia-${i}`] = v.tolerancia;\r\n                            const vals = (typeof v.item_values === \"string\") ? JSON.parse(v.item_values) : v.item_values;\r\n                            for (let [iV, vV] of vals.entries()) {\r\n                                fieldsValue[`v${v.item_key}-${iV}`] = vV;\r\n                            }\r\n                        }\r\n                        form.setFieldsValue({ gamaOperatoria, gamaOperatoriaItems: fieldsValue });\r\n                    }\r\n                    setLoading(false);\r\n                })();\r\n        }\r\n    }\r\n\r\n    const onShowForm = (newForm = false, forInput = false) => {\r\n        if (newForm) {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: {}, forInput }));\r\n        } else {\r\n            setShowForm(prev => ({ ...prev, show: !prev.show, record: { ...form.getFieldsValue([\"gamaoperatoria_id\", \"gamaOperatoria\", \"gamaOperatoriaItems\"]), forInput } }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} tip=\"A carregar...\">\r\n                <Drawer showWrapper={showForm} setShowWrapper={setShowForm} parentReload={loadData} />\r\n                <FormLayout\r\n                    id=\"LAY-GAMAOPERATORIA\"\r\n                    guides={guides}\r\n                    layout=\"vertical\"\r\n                    style={{ width: \"100%\", padding: \"0px\"/* , minWidth: \"700px\" */ }}\r\n                    schema={schema}\r\n                    field={{\r\n                        //wide: [3, 2, 1, '*'],\r\n                        margin: \"2px\", overflow: false, guides: guides,\r\n                        label: { enabled: true, pos: \"top\", align: \"start\", vAlign: \"center\", width: \"120px\", wrap: false, overflow: false, colon: true, ellipsis: true },\r\n                        alert: { pos: \"right\", tooltip: true, container: true /* container: \"el-external\" */ },\r\n                        layout: { top: \"\", right: \"\", center: \"\", bottom: \"\", left: \"\" },\r\n                        addons: {}, //top|right|center|bottom|left\r\n                        required: true,\r\n                        style: { alignSelf: \"top\" }\r\n                    }}\r\n                    fieldSet={{\r\n                        guides: guides,\r\n                        wide: 16, margin: \"2px\", layout: \"horizontal\", overflow: false\r\n                    }}\r\n                >\r\n                    <FieldSet>\r\n                        <Toolbar\r\n                            style={{ width: \"100%\" }}\r\n                            left={\r\n                                <FieldSet>\r\n                                    <Field name=\"gamaoperatoria_id\" layout={{ center: \"align-self:center;\", right: \"align-self:center;\" }} label={{ enabled: true, text: \"Gama Operatória\", pos: \"left\" }} addons={{\r\n                                        ...(form.getFieldValue(\"gamaoperatoria_id\") && { right: <Button onClick={() => onShowForm(false, true)} style={{ marginLeft: \"3px\" }} size=\"small\"><EditOutlined style={{ fontSize: \"16px\" }} /></Button> })\r\n                                    }}>\r\n                                        <SelectField allowClear size=\"small\" data={gamasOperatorias} keyField=\"id\" textField=\"designacao\"\r\n                                            optionsRender={(d, keyField, textField) => ({ label: <div style={{ display: \"flex\" }}><div style={{ minWidth: \"150px\" }}><b>{d[textField]}</b></div><div>v.{d[\"versao\"]}</div></div>, value: d[keyField] })}\r\n                                        />\r\n                                    </Field>\r\n                                </FieldSet>\r\n                            }\r\n                            right={<Button onClick={() => onShowForm(true, true)}>Nova Gama Operatória</Button>}\r\n                        />\r\n                    </FieldSet>\r\n                    <FieldSet>\r\n                        {(!loading && form.getFieldValue(\"gamaoperatoria_id\")) && <FormGamaOperatoriaUpsert record={form.getFieldsValue(true)} wrapForm={false} forInput={false} parentReload={loadData} />}\r\n                    </FieldSet>\r\n                </FormLayout>\r\n            </Spin>\r\n        </>\r\n    );\r\n}"],"names":["gamaOperatoriaItems","GAMAOPERATORIA","v","disabled","schema","keys","excludeKeys","getSchema","unknown","id","record","setFormTitle","parentRef","closeParent","parentReload","wrapForm","forInput","ctx","useContext","OFabricoContext","form","Form","useState","setLoading","submitting","setSubmitting","setChangedValues","error","warning","info","success","formStatus","setFormStatus","guides","gamaoperatoria_id","key","values","operation","status","resultMessage","setResultMessage","init","title","setFieldsValue","gamaOperatoria","item_cod","subTitle","item_nome","initValues","length","entries","idx","designacao","tolerancia","useEffect","onFinish","validate","abortEarly","k","undefined","push","message","fetchPost","url","API_URL","parameters","getFieldsValue","produto_id","response","data","onClose","onSubmit","useCallback","result","successButtonOK","type","onClick","resetFields","successButtonClose","errorButtonOK","errorButtonClose","name","onValuesChange","changedValues","component","layout","style","width","padding","field","wide","margin","overflow","label","enabled","pos","align","vAlign","wrap","colon","ellipsis","alert","tooltip","container","top","right","center","bottom","left","required","alignSelf","fieldSet","placeholder","size","height","map","fontSize","unidade","Array","nvalues","x","i","split","min","max","controls","precision","maxWidth","addonBefore","elId","current","Drawer","showWrapper","setShowWrapper","formTitle","iref","useRef","onVisible","prev","show","destroyOnClose","mask","setVisible","visible","bodyStyle","footer","ref","textAlign","FormGamaOperatoriaUpsert","loadGamasOperatoriasLookup","token","filter","sort","cancelToken","rows","getGamaOperatoriaItems","fieldStatus","loading","showForm","setShowForm","gamasOperatorias","setGamasOperatorias","cancelFetch","loadData","getFieldValue","cancel","_gamasoperatorias","fieldsValue","nitems","item_key","item_des","vals","item_values","JSON","parse","iV","vV","onShowForm","newForm","spinning","indicator","LoadingOutlined","spin","tip","addons","text","marginLeft","EditOutlined","allowClear","keyField","textField","optionsRender","d","display","minWidth","value"],"sourceRoot":""}