{"version":3,"file":"chunks/800/2634382cd42b65130560.chunk.js","mappings":"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","sources":["webpack://sgp/./src/components/Drawer.jsx","webpack://sgp/./src/components/YScroll.jsx","webpack://sgp/./src/components/poitingLabel.jsx","webpack://sgp/./src/components/RangeTime.jsx","webpack://sgp/./src/components/formLayout.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useContext } from 'react';\r\nimport { TitleForm, WrapperForm } from \"components/formLayout\";\r\n\r\n\r\nexport default ({ showWrapper, setShowWrapper, parentReload, children, width, ...rest }) => {\r\n    const [formTitle, setFormTitle] = useState({});\r\n    const iref = useRef();\r\n    const { record = {} } = showWrapper;\r\n    const onVisible = () => {\r\n        setShowWrapper(prev => ({ ...prev, show: !prev.show }));\r\n    }\r\n    return (\r\n        <WrapperForm\r\n            title={<TitleForm title={formTitle.title} subTitle={formTitle.subTitle} />}\r\n            type=\"drawer\"\r\n            destroyOnClose={true}\r\n            //width={width}\r\n            mask={true}\r\n            /* style={{ maginTop: \"48px\" }} */\r\n            setVisible={onVisible}\r\n            visible={showWrapper.show}\r\n            width={width}\r\n            bodyStyle={{ height: \"450px\" /*  paddingBottom: 80 *//* , overflowY: \"auto\", minHeight: \"350px\", maxHeight: \"calc(100vh - 50px)\" */ }}\r\n            footer={<div ref={iref} id=\"form-wrapper\" style={{ textAlign: 'right' }}></div>}\r\n            {...rest}\r\n        >\r\n            {React.cloneElement(children, { ...children.props, setFormTitle, record, parentRef: iref, closeParent: onVisible, parentReload })}\r\n        </WrapperForm>\r\n    );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    scrollbar-color:rgba(105,112,125,.5) transparent;\r\n    scrollbar-width:thin;\r\n    height:100%;\r\n    overflow-y:auto;\r\n    overflow-x:hidden;\r\n    -webkit-mask-image:linear-gradient(180deg,rgba(255,0,0,.1) 0 7.5px calc(100%-7.5px),rgba(255,0,0,.1));\r\n    mask-image:linear-gradient(180deg,rgba(255,0,0,.1) 0 7.5px calc(100%-7.5px),rgba(255,0,0,.1));\r\n    &::-webkit-scrollbar {\r\n      width:16px;\r\n      height:16px;\r\n    }\r\n    &::-webkit-scrollbar-thumb{\r\n      background-color:rgba(105,112,125,.5);\r\n      background-clip:content-box;\r\n      border-radius:16px;\r\n      border:6px solid transparent;\r\n    }\r\n    &::-webkit-scrollbar-corner{\r\n      background-color:transparent;\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    &:focus:focus-visible{\r\n      outline-style:auto;\r\n    }    \r\n`;","import React, { useState, useEffect, useContext, createContext, useRef } from 'react';\r\nimport styled from \"styled-components\";\r\nimport classNames from \"classnames\";\r\nimport { createUseStyles } from 'react-jss';\r\nimport * as R from \"ramda\";\r\nimport { ConditionalWrapper } from './conditionalWrapper';\r\nimport Portal from \"./portal\";\r\nimport { Alert } from 'antd';\r\nimport \"./css/label.css\"\r\n\r\nconst pointer = (pos) => {\r\n    switch (pos) {\r\n        case \"left\": return \"right\";\r\n        case \"right\": return \"left\";\r\n        case \"top\": return \"bottom\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\nconst StyledAlert = styled(Alert)`\r\n    padding: 0px 0px;\r\n    background-color: transparent;\r\n    &.ant-alert-warning > .ant-alert-content > .ant-alert-message{\r\n        color: #d46b08;\r\n    }\r\n    &.ant-alert-error > .ant-alert-content > .ant-alert-message{\r\n        color: #cf1322;\r\n    }\r\n`;\r\n\r\n\r\nexport default ({ alert = true, status = \"error\", position = \"bottom\", text }) => {\r\n    const css = classNames(\"ui\", \"mini\", `${pointer(position)}`, \"pointing\", { \"red\": status == \"error\" }, { \"orange\": status == \"warning\" }, \"basic\", \"label\");\r\n    return (\r\n        <>\r\n            {!alert && <div className={css}>\r\n                {text}\r\n            </div>\r\n            }\r\n             {alert && <StyledAlert banner message={text} type={status} />\r\n            }\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport { TimePicker } from 'antd';\r\nimport { ClockCircleOutlined } from '@ant-design/icons'\r\nimport { TIME_FORMAT } from 'config';\r\n\r\nconst TimeRange = ({ value = {}, onChange, startProps, endProps, format = TIME_FORMAT, ...rest }) => {\r\n    const [endOpen, setEndOpen] = useState(false);\r\n\r\n    const disabledStartTime = startValue => {\r\n        const { endValue } = value;\r\n        if (!startValue || !endValue) {\r\n            return false;\r\n        }\r\n        return startValue.valueOf() > endValue.valueOf();\r\n    };\r\n\r\n    const disabledEndTime = endValue => {\r\n        const { startValue } = value;\r\n        if (!endValue || !startValue) {\r\n            return false;\r\n        }\r\n        return endValue.valueOf() <= startValue.valueOf();\r\n    };\r\n\r\n    const onStartChange = val => {\r\n        onChange('startValue', val);\r\n    };\r\n\r\n    const onEndChange = val => {\r\n        onChange('endValue', val);\r\n    };\r\n\r\n    const handleStartOpenChange = open => {\r\n        if (!open) {\r\n            setEndOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleEndOpenChange = open => {\r\n        setEndOpen(open);\r\n    };\r\n\r\n    return (<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n        <TimePicker\r\n            disabledTime={disabledStartTime}\r\n            format={format}\r\n            value={value?.startValue}\r\n            placeholder=\"Início\"\r\n            onChange={onStartChange}\r\n            onOpenChange={handleStartOpenChange}\r\n            style={{ marginRight: \"1px\" }}\r\n            suffixIcon={<></>}\r\n            {...rest}\r\n            {...startProps}\r\n        />\r\n        <TimePicker\r\n            disabledTime={disabledEndTime}\r\n            format={format}\r\n            value={value?.endValue}\r\n            placeholder=\"Fim\"\r\n            onChange={onEndChange}\r\n            open={endOpen}\r\n            onOpenChange={handleEndOpenChange}\r\n            suffixIcon={<></>}\r\n            {...rest}\r\n            {...endProps}\r\n        />\r\n        <ClockCircleOutlined style={{ marginLeft: \"1px\", color: 'rgba(0,0,0,.25)' }} />\r\n    </div>);\r\n}\r\n\r\nexport default TimeRange;","import React, { useState, useEffect, useContext, createContext, useRef } from 'react';\r\nimport { Form, Tooltip, Drawer, Modal, Button, Row, Col, Input, Tag, AutoComplete, Select, Switch, Alert, Checkbox, Spin, DatePicker, InputNumber } from \"antd\";\r\nimport styled, { css } from \"styled-components\";\r\nimport classNames from \"classnames\";\r\nimport { createUseStyles } from 'react-jss';\r\nimport { ConditionalWrapper } from './conditionalWrapper';\r\nimport Portal from \"./portal\";\r\nimport PointingLabel from \"./poitingLabel\";\r\nimport { debounce } from \"utils\";\r\nimport { validate } from \"utils/schemaValidator\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { BiWindow } from \"react-icons/bi\";\r\nimport { BsBoxArrowInDownRight } from \"react-icons/bs\";\r\nimport { AiOutlineFullscreen } from \"react-icons/ai\";\r\nimport RangeDate from \"./RangeDate\";\r\nimport RangeTime from \"./RangeTime\";\r\nimport { DATE_FORMAT, DATETIME_FORMAT, TIME_FORMAT } from 'config';\r\n\r\nimport { MediaContext } from '../pages/App';\r\n\r\n\r\nconst ParentContext = createContext({});\r\n\r\nconst Title = styled.div`\r\n    h4{\r\n        color: rgba(0, 0, 0, 0.85);\r\n        font-weight: 700;\r\n        font-size: 18px;\r\n        line-height: 1.4;\r\n        margin-bottom:0;\r\n    }\r\n    h5{\r\n\r\n    }\r\n`;\r\nexport const TitleForm = ({ title, subTitle, toogleMaximize, toogleFullScreen, setNormal }) => {\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n            <Title>\r\n                <h4>{title}</h4>\r\n                {subTitle && <h5>{subTitle}</h5>}\r\n            </Title>\r\n            <div><div onClick={toogleMaximize}><BiWindow /></div><div onClick={toogleFullScreen}><AiOutlineFullscreen /></div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const WrapperForm = props => {\r\n    const ctx = useContext(MediaContext);\r\n    // // setWidth({ width: 100, unit: \"%\", maxWidth: 100, maxUnit: \"%\", device: \"mobile\", orientation });\r\n    // console.log(\"drawer-----\",ctx);\r\n    const { type = 'modal', visible = false, setVisible, children, title, mode = \"normal\", width, height = '70vh', ...rest } = props;\r\n    const [widthMode, setWidthMode] = useState();\r\n\r\n    useEffect(() => {\r\n        if (widthMode && !width) {\r\n            setWidthMode({ width: computeWitdth(mode), mode, prevMode: mode });\r\n        } else {\r\n            setWidthMode({ width: computeWitdth(mode, width), mode, prevMode: mode });\r\n        }\r\n    }, [ctx]);\r\n\r\n    useEffect(() => {\r\n        if (width) {\r\n            setWidthMode({ width: computeWitdth(props.mode, width), mode, prevMode: mode });\r\n        } else if (widthMode) {\r\n            setWidthMode({ width: computeWitdth(props.mode), mode, prevMode: mode });\r\n        } else {\r\n            setWidthMode({ width: computeWitdth(props.mode), mode, prevMode: mode });\r\n        }\r\n\r\n    }, [props.mode]);\r\n\r\n    useEffect(() => {\r\n        if (width) {\r\n            setWidthMode({ width: computeWitdth(props.mode, width), mode, prevMode: mode });\r\n        }\r\n    }, [width, height]);\r\n\r\n    const computeWitdth = (mode, width) => {\r\n        if (width)\r\n            return width;\r\n        if (mode === \"normal\") {\r\n            return `${ctx.width}${ctx.unit}`;\r\n        } else if (mode === \"maximized\") {\r\n            return `${ctx.maxWidth}${ctx.maxUnit}`;\r\n        } else if (mode === \"fullscreen\") {\r\n            return \"100%\";\r\n        } else {\r\n            return `${ctx.width}${ctx.unit}`;\r\n        }\r\n    }\r\n\r\n    const toogleMaximize = () => {\r\n        const newMode = widthMode.mode === \"maximized\" ? widthMode.prevMode : \"maximized\";\r\n        const newWidth = computeWitdth(newMode === \"fullscreen\" ? \"normal\" : newMode);\r\n        setWidthMode({ width: newWidth, mode: (newMode === \"fullscreen\" ? \"normal\" : newMode), prevMode: widthMode.mode });\r\n    }\r\n    const toogleFullScreen = () => {\r\n        const newMode = widthMode.mode === \"fullscreen\" ? widthMode.prevMode : \"fullscreen\";\r\n        setWidthMode({ width: computeWitdth(newMode), mode: newMode, prevMode: widthMode.mode });\r\n    }\r\n\r\n    const setNormal = () => {\r\n        setWidthMode({ width: computeWitdth(\"normal\"), mode: \"normal\", prevMode: \"normal\" });\r\n    }\r\n    const titleForm = React.cloneElement(title, { ...title.props, toogleMaximize, toogleFullScreen, setNormal });\r\n\r\n    return (\r\n        <>\r\n            {widthMode && <>\r\n                {type == 'modal' ? (\r\n                    <Modal\r\n                        {...rest}\r\n                        bodyStyle={{ height: !height ? '70vh' : height }}\r\n                        style={{ width: widthMode.width, minWidth: widthMode.width }}\r\n                        width={widthMode.width}\r\n                        title={titleForm}\r\n                        centered\r\n                        visible={visible}\r\n                        onCancel={() => setVisible(false)}\r\n                    >\r\n                        {children}\r\n                    </Modal>\r\n                ) : (\r\n                    <Drawer {...rest} width={widthMode.width} title={titleForm} visible={visible} onClose={() => setVisible(false)}>\r\n                        {children}\r\n                    </Drawer>\r\n                )}\r\n            </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nNumber.prototype.pad = function (size) {\r\n    var sign = Math.sign(this) === -1 ? '-' : '';\r\n    return sign + new Array(size).concat([Math.abs(this)]).join('0').slice(-size);\r\n}\r\n\r\nconst inheritSelf = (props = {}, parentProps = {}) => {\r\n\r\n    /**\r\n     * Calcula \"width\" de acordo com o valor de \"wide\" or \"split\"\r\n     */\r\n    const widthValue = (props) => {\r\n        if (props.wide) {\r\n            return `${props.wide * 6.25}%`;\r\n        } else if (props.split) {\r\n            return `${100 / props.split}%`;\r\n        }\r\n        return '100%';\r\n    }\r\n\r\n    const wideValue = (wide, idx) => {\r\n        if (Number.isInteger(wide)) {\r\n            return wide;\r\n        } else if (Array.isArray(wide)) {\r\n            if (wide[idx] === \"*\") {\r\n                let sum = wide.reduce((sum, x) => (x === '*') ? sum : sum + x);\r\n                return 16 - sum;\r\n            } else {\r\n                return wide[idx];\r\n            }\r\n        }\r\n    }\r\n    const wideOrSplit = (self = {}, parent = {}) => {\r\n        let ret = {};\r\n\r\n        if (!self?.wide && self?.split) {\r\n            const { wide: w, ...data } = parent;\r\n            ret = { ...data, ...self };\r\n        } else if (self?.wide && !self?.split) {\r\n            const { split: s, ...data } = parent;\r\n            ret = { ...data, ...self };\r\n        } else {\r\n            ret = { ...parent, ...self };\r\n        }\r\n        if (ret?.wide && ret?.split) {\r\n            const { split: s, ...data } = ret;\r\n            ret = { ...data };\r\n        }\r\n\r\n        if (ret?.wide) {\r\n            ret.wide = wideValue(ret.wide, self.index);\r\n        }\r\n\r\n\r\n\r\n        /*         let ctrl = '0';\r\n                if (!(\"wide\" in self) && (\"split\" in self)) {\r\n                    const { wide: w, ...data } = parent;\r\n                    ret = { ...data, ...self };\r\n                    ctrl='1';\r\n                } else if ((\"wide\" in self) && !(\"split\" in self)) {\r\n                    const { split: s, ...data } = parent;\r\n                    ret = { ...data, ...self };\r\n                    ctrl='2';\r\n                } else {\r\n                    ret = { ...parent, ...self };\r\n                    ctrl='3';\r\n                }\r\n                if ((\"wide\" in ret) && (\"split\" in ret)) {\r\n                    const { split: s, ...data } = ret;\r\n                    ret = { ...data };\r\n                    ctrl=`${ctrl}-1`;\r\n                }\r\n        \r\n                if (\"wide\" in ret) {\r\n                    ret.wide = wideValue(ret.wide, self.index);\r\n                    ctrl=`${ctrl}-2`;\r\n                } */\r\n\r\n        //        if (self.name===\"extr4_val\"){\r\n        //console.log(\"splittttt\", \" ret-wide -->\", ret?.wide, \" ret-split -->\", ret?.split, \" self-wide -->\", self?.wide, \" self-split -->\", self?.split, \" --- \", ctrl, \" --- \" , self.name);\r\n        //console.log(\"splittttt\", \" ret-wide -->\", ret?.wide?.pad(2), \" ret-split -->\", ret?.split?.pad(2), \" self-wide -->\", self?.wide?.pad(2), \" self-split -->\", self?.split?.pad(2), \" --- \", ctrl, \" --- \" , self.name);\r\n        //           }\r\n\r\n\r\n        if (!(\"forInput\" in ret)) {\r\n            ret.forInput = true;\r\n        }\r\n\r\n        ret.width = widthValue(ret);\r\n\r\n        return ret;\r\n    }\r\n    const obj = wideOrSplit(props, parentProps)\r\n\r\n    const layout = (self = {}, parent = {}) => {\r\n\r\n        const ret = {\r\n            layout: {\r\n                top: { ...parent?.layout?.top, ...self?.layout?.top },\r\n                right: { ...parent?.layout?.right, ...self?.layout?.right },\r\n                center: { ...parent?.layout?.center, ...self?.layout?.center },\r\n                left: { ...parent?.layout?.left, ...self?.layout?.left },\r\n                bottom: { ...parent?.layout?.bottom, ...self?.layout?.bottom },\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        ...obj,\r\n        label: { ...parentProps?.label, ...props?.label },\r\n        alert: { ...parentProps?.alert, ...props?.alert },\r\n        ...layout(props, parentProps)\r\n    };\r\n}\r\n\r\n/**\r\n * O FieldSet pode ter \"filhos\", (Field, FieldSet,...), sendo necessário repassar o que vem do \"pai\" e sobrepor \r\n * eventuais parametros que estejam definidos no próprio FieldSet\r\n*/\r\nconst propsToChildren = (props = {}, parentProps = {}, refMainAlertContainer) => {\r\n    const { field: pField = {}, fieldSet: pFieldSet = {}, schema, layoutId, fieldStatus, updateFieldStatus, clearFieldStatus } = parentProps;\r\n    const { field = {}, fieldSet = {} } = props;\r\n    return { field: { ...pField, ...field }, fieldSet: { ...pFieldSet, ...fieldSet }, schema, layoutId, refMainAlertContainer, fieldStatus, updateFieldStatus, clearFieldStatus };\r\n}\r\n\r\n\r\nconst StyledHorizontalRule = styled('hr').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children'].includes(prop)\r\n})`\r\n    border: none;\r\n    height: 1px;\r\n    background-color: #dcdddf;\r\n    flex-shrink: 0;\r\n    flex-grow: 0;\r\n    width: 100%;\r\n    margin: 0px;\r\n`;\r\n\r\nconst StyledHRuleTitle = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children'].includes(prop)\r\n})`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    background:#f3f3f3;\r\n\r\n    .title{\r\n        font-weight: 700;\r\n        font-size:14px;\r\n        margin: 0px;\r\n        margin-right:5px;\r\n    }\r\n\r\n    .description{\r\n        align-self: center;\r\n        color:#595959;\r\n    }\r\n\r\n    \r\n`;\r\n\r\nexport const FilterDrawer = ({ schema, filterRules, width = 400, showFilter, setShowFilter, form, mask = false }) => {\r\n    return (\r\n        <>\r\n            <Drawer\r\n                title=\"Filtros\"\r\n                width={width}\r\n                mask={false}\r\n                /* style={{ top: \"48px\" }} */\r\n                onClose={() => setShowFilter(false)}\r\n                visible={showFilter}\r\n                bodyStyle={{ paddingBottom: 80 }}\r\n                footer={\r\n                    <div style={{ textAlign: 'right' }}>\r\n                        <Button onClick={() => form.resetFields()} style={{ marginRight: 8 }}>Limpar</Button>\r\n                        <Button onClick={() => form.submit()} type=\"primary\">Aplicar</Button>\r\n                    </div>\r\n                }\r\n            >\r\n                <Form form={form} name=\"search-form\" layout=\"vertical\" hideRequiredMark>\r\n                    {schema.map((line, ridx) => (\r\n                        <Row key={`rf-${ridx}`} gutter={16}>\r\n                            {Object.keys(line).map((col, cidx) => {\r\n                                const span = (\"span\" in line[col]) ? line[col].span : 24;\r\n                                const itemWidth = (\"itemWidth\" in line[col]) ? { width: line[col].itemWidth } : {};\r\n                                const label = (\"label\" in line[col]) ? line[col].label : filterRules.$_mapLabels([col]);\r\n                                const labelChk = (\"labelChk\" in line[col]) ? line[col].labelChk : filterRules.$_mapLabels([col]);\r\n                                const field = (\"field\" in line[col]) ? line[col].field : { type: \"input\" };\r\n                                const initialValue = (\"initialValue\" in line[col]) ? line[col].initialValue : undefined;\r\n                                return (\r\n                                    <Col key={`cf-${cidx}`} span={span} style={{paddingLeft:\"1px\",paddingRight:\"1px\"}}>\r\n                                        <Form.Item style={{ marginBottom: \"0px\" }} key={`fd-${col}`} name={`${col}`} label={label} {...(initialValue !== undefined && { initialValue: initialValue })} labelCol={{ style: { padding: \"0px\" } }}>\r\n                                            {(typeof field === 'function') ? field() :\r\n                                                {\r\n                                                    autocomplete: <AutoCompleteField allowClear {...field} />,\r\n                                                    rangedate: <RangeDateField allowClear {...field} />,\r\n                                                    rangetime: <RangeTimeField allowClear {...field} />,\r\n                                                    selectmulti: <SelectMultiField allowClear {...field} />,\r\n                                                    checkbox: <CheckboxField {...field}>{labelChk}</CheckboxField>\r\n                                                }[field?.type] || <Input style={{ ...itemWidth }} allowClear {...field} />\r\n                                            }\r\n\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                );\r\n                            })}\r\n                        </Row>\r\n                    ))}\r\n                </Form>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const AddOn = styled.div`\r\nmargin: 2px;\r\nbackground-color: #fafafa; \r\nborder: 1px solid #d9d9d9;\r\nborder-radius: 2px;\r\nalign-self: center;\r\ntext-align: center; \r\nwidth: 45px; \r\nfont-weight: 500;\r\nfont-size: 10px;\r\n`;\r\n\r\nexport const HorizontalRule = ({ margin = false, title, description, props }) => {\r\n    const parentProps = useContext(ParentContext);\r\n    const myProps = inheritSelf({ ...props, margin }, parentProps?.field);\r\n    /* const classes = useFieldStyles(myProps); */\r\n    const { refMainAlertContainer } = parentProps;\r\n    return (\r\n        <StyledField className={classNames(\"field\", { \"padding\": !myProps?.margin })} {...myProps}>\r\n            <ConditionalWrapper\r\n                condition={myProps?.margin}\r\n                wrapper={children => <div className={classNames(\"margin\", \"padding\", myProps?.className)}>{children}</div>}\r\n            >\r\n                {title && <StyledHRuleTitle><div className=\"title\">{title}</div><div className=\"description\">{description}</div></StyledHRuleTitle>}\r\n                <StyledHorizontalRule />\r\n            </ConditionalWrapper>\r\n        </StyledField>\r\n    );\r\n}\r\n\r\nconst StyledVerticalSpace = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children'].includes(prop)\r\n})`\r\n    ${({ height }) => `height: ${height ? height : \"12px\"};`}\r\n    width: 100%;\r\n`;\r\n\r\nexport const VerticalSpace = ({ margin = \"0px\", height = \"12px\", props }) => {\r\n    const parentProps = useContext(ParentContext);\r\n    const myProps = inheritSelf({ ...props, margin }, parentProps?.field);\r\n    /* const classes = useFieldStyles(myProps); */\r\n    const { refMainAlertContainer } = parentProps;\r\n    return (\r\n        <StyledField className={classNames(\"field\", { \"padding\": !myProps?.margin })} {...myProps}>\r\n            <ConditionalWrapper\r\n                condition={myProps?.margin}\r\n                wrapper={children => <div className={classNames(\"margin\", \"padding\", myProps?.className)}>{children}</div>}\r\n            >\r\n                <StyledVerticalSpace height={height} />\r\n            </ConditionalWrapper>\r\n        </StyledField>\r\n    );\r\n}\r\n\r\n\r\nexport const SwitchField = ({ onChange, value, checkedValue = 1, uncheckedValue = 0, ...rest }) => {\r\n    const parseToBool = (v) => {\r\n        return (v === checkedValue) ? true : false;\r\n    }\r\n    const parseFromBool = (v) => {\r\n        return (v === true) ? checkedValue : uncheckedValue;\r\n    }\r\n\r\n    const onSwitch = (checked) => {\r\n        onChange?.(parseFromBool(checked));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Switch\r\n                checked={parseToBool(value)}\r\n                onChange={onSwitch}\r\n                {...rest}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const RangeTimeField = ({ onChange, value, format = TIME_FORMAT, ...rest }) => {\r\n    const onRangeTimeChange = (field, v) => {\r\n        const { formatted = {} } = (value === undefined) ? {} : value;\r\n        onChange?.({\r\n            ...value,\r\n            [field]: v,\r\n            formatted: {\r\n                ...formatted,\r\n                [field]: v?.format(format)\r\n            }\r\n        });\r\n    }\r\n\r\n    return (<RangeTime value={value} onChange={onRangeTimeChange} {...rest} />);\r\n};\r\n\r\nexport const RangeDateField = ({ onChange, value, format = DATE_FORMAT, ...rest }) => {\r\n    const onRangeDateChange = (field, v) => {\r\n        const { formatted = {} } = (value === undefined) ? {} : value;\r\n        onChange?.({\r\n            ...value,\r\n            [field]: v,\r\n            formatted: {\r\n                ...formatted,\r\n                [field]: v?.format(format)\r\n            }\r\n        });\r\n    }\r\n\r\n    return (<RangeDate value={value} onChange={onRangeDateChange} {...rest} />);\r\n};\r\n\r\n\r\nexport const CheckboxField = ({ onChange, value, checkedValue = 1, uncheckedValue = 0, ...rest }) => {\r\n    const parseToBool = (v) => {\r\n        return (v === checkedValue) ? true : false;\r\n    }\r\n    const parseFromBool = (v) => {\r\n        return (v === true) ? checkedValue : uncheckedValue;\r\n    }\r\n\r\n    const onSwitch = (v) => {\r\n        onChange?.(parseFromBool(v.target.checked));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Checkbox\r\n                checked={parseToBool(value)}\r\n                onChange={onSwitch}\r\n                {...rest}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const AutoCompleteField = ({ fetchOptions, debounceTimeout = 800, onChange, value, keyField, valueField, textField, optionsRender = false, size = \"small\", onPressEnter, ...rest }) => {\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const fetchRef = useRef(0);\r\n    keyField = (keyField) ? keyField : valueField;\r\n    valueField = (valueField) ? valueField : keyField;\r\n    const _optionsRender = (optionsRender) ? optionsRender : d => ({ label: d[textField], key: d[keyField], value: d[valueField] });\r\n\r\n    const debounceFetcher = React.useMemo(() => {\r\n        const loadOptions = (v) => {\r\n            fetchRef.current += 1;\r\n            const fetchId = fetchRef.current;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            fetchOptions(v).then((newOptions) => {\r\n                if (fetchId !== fetchRef.current) {\r\n                    // for fetch callback order\r\n                    return;\r\n                }\r\n                const opts = newOptions.map(d => _optionsRender(d));\r\n                setOptions(opts);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [fetchOptions, debounceTimeout]);\r\n\r\n    const onSelectChange = (v) => {\r\n        onChange?.(v);\r\n    }\r\n\r\n    return (\r\n        <AutoComplete\r\n            value={value}\r\n            onSearch={debounceFetcher}\r\n            onChange={onSelectChange}\r\n            options={options}\r\n            {...rest}\r\n        >\r\n            <Input size={size} />\r\n        </AutoComplete>\r\n    );\r\n}\r\n\r\nexport const SelectDebounceField = ({ fetchOptions, debounceTimeout = 800, onChange, value, keyField, valueField, textField, optionsRender = false, ...rest }) => {\r\n    const [fetching, setFetching] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const fetchRef = useRef(0);\r\n    keyField = (keyField) ? keyField : valueField;\r\n    valueField = (valueField) ? valueField : keyField;\r\n    const _optionsRender = (optionsRender) ? optionsRender : d => ({ label: d[textField], key: d[keyField], value: d[valueField] });\r\n\r\n    const debounceFetcher = React.useMemo(() => {\r\n        const loadOptions = (v) => {\r\n            fetchRef.current += 1;\r\n            const fetchId = fetchRef.current;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            fetchOptions(v).then((newOptions) => {\r\n                if (fetchId !== fetchRef.current) {\r\n                    // for fetch callback order\r\n                    return;\r\n                }\r\n                const opts = newOptions.map(d => _optionsRender(d));\r\n                setOptions(opts);\r\n                setFetching(false);\r\n            });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTimeout);\r\n    }, [fetchOptions, debounceTimeout]);\r\n\r\n    const onSelectChange = (v) => {\r\n        onChange?.(v);\r\n    }\r\n\r\n    return (\r\n        <Select\r\n            labelInValue\r\n            filterOption={false}\r\n            onSearch={debounceFetcher}\r\n            value={value}\r\n            onChange={onSelectChange}\r\n            notFoundContent={fetching ? <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"small\" /> : null}\r\n            {...rest}\r\n            options={options}\r\n        />\r\n    );\r\n}\r\n\r\nexport const SelectField = ({ data, keyField, valueField, textField, showSearch = false, optionsRender, ...rest }) => {\r\n    //const options = data.map((d,i) => <Option disabled={(i<5) ? true :false} key={d[keyField]} value={valueField ? d[valueField] : d[keyField]}>111{d[textField]}</Option>);\r\n    const _optionsRender = (optionsRender) ? optionsRender : d => ({ label: d[textField], value: d[keyField] });\r\n    const options = data ? data.map((d) => _optionsRender(d, keyField, textField)) : [];\r\n\r\n\r\n\r\n    const onChange = (v, option) => {\r\n        /*  if (v !== undefined) {\r\n             onChange?.((\"key\" in option) ? option.key : option[keyField]);\r\n         } */\r\n    }\r\n\r\n    return (\r\n        <Select showSearch={showSearch} options={options} {...rest}>\r\n            {/* {optionsRender({ data, keyField, valueField })} */}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst _filterOptions = (arr1, arr2) => {\r\n    let res = [];\r\n    res = arr1.filter(el => {\r\n        return !arr2.find(element => {\r\n            return element.value === el.value;\r\n        });\r\n    });\r\n    return res;\r\n}\r\n\r\nexport const SelectMultiField = ({ value, options, onChange, ...rest }) => {\r\n    const [selectedItems, setSelectedItems] = useState(value || []);\r\n\r\n    const onItemsChange = (v) => {\r\n        setSelectedItems(v);\r\n        onChange?.(v.length == 0 ? undefined : v);\r\n    }\r\n\r\n    return (\r\n        <Select labelInValue mode=\"multiple\" value={value} {...rest} onChange={onItemsChange}>\r\n\r\n            {_filterOptions(options, selectedItems).map(item => (\r\n                <Select.Option key={item.value} value={item.value}>\r\n                    {item.label}\r\n                </Select.Option>\r\n            ))}\r\n\r\n\r\n            {/* {options.filter(o => !selectedItems.includes(Object.keys(o)[0])).map(item => (\r\n                <Select.Option key={Object.keys(item)[0]} value={Object.keys(item)[0]}>\r\n                    {item[Object.keys(item)[0]]}\r\n                </Select.Option>\r\n            ))} */}\r\n\r\n        </Select>\r\n    );\r\n}\r\n\r\n/* export const ViewField = ({ value, ...rest }) => {\r\n    console.log(\"VIEWFIELD-->\",value, rest);\r\n    return (<div>{value}</div>);\r\n} */\r\n\r\n\r\n/* const useFieldStyles = createUseStyles({\r\n    field: ({ grow = false, width, overflow, guides = false }) => ({\r\n        ...(grow ?\r\n            {\r\n                \"minWidth\": width\r\n            }\r\n            : {\r\n                \"minWidth\": width,\r\n                \"maxWidth\": width\r\n            }),\r\n        \"overflow\": overflow ? \"visible\" : \"hidden\",\r\n        ...(guides && { \"border\": \"1px dashed blue\" })\r\n    }),\r\n    padding: ({ padding }) => ({ ...(padding && { \"padding\": padding }) }),\r\n    margin: ({ margin, guides }) => ({ ...(margin && { \"margin\": margin }), ...(guides && { \"border\": \"1px solid red\" }) }),\r\n    rowTop: ({ guides, layout = {} }) => ({\r\n        ...{ ...layout.top },\r\n        ...(guides && { \"margin\": \"2px\", \"border\": \"1px solid green\" }),\r\n    }),\r\n    rowBottom: ({ guides, layout = {} }) => ({\r\n        ...{ ...layout.bottom },\r\n        ...(guides && { \"margin\": \"2px\", \"border\": \"1px solid green\" }),\r\n    }),\r\n    rowMiddle: ({ guides }) => ({\r\n        \"display\": \"flex\",\r\n        \"flexDirection\": 'row',\r\n        \"flexGrow\": 0,\r\n        \"flexShrink\": 0,\r\n        \"flexWrap\": \"nowrap\",\r\n        \"alignItems\": \"stretch\",\r\n        ...(guides && { \"margin\": \"2px\", \"border\": \"1px solid green\" })\r\n    }),\r\n    left: ({ guides, layout = {} }) => ({\r\n        ...{ ...layout.left },\r\n        ...(guides && { \"margin\": \"2px\", \"border\": \"1px solid blue\" })\r\n    }),\r\n    right: ({ guides, layout = {} }) => ({\r\n        ...{ ...layout.right },\r\n        ...(guides && { \"margin\": \"2px\", \"border\": \"1px solid blue\" })\r\n    }),\r\n    center: ({ guides, layout = {} }) => ({\r\n        ...{ flex: 1, ...layout.center },\r\n        ...(guides && { \"margin\": \"2px\", \"border\": \"1px solid blue\" })\r\n    }),\r\n    error: () => ({\r\n        \"& input\": {\r\n            \"color\": \"#9f3a38\",\r\n            \"background\": \"#fff6f6\",\r\n            \"borderColor\": \"#e0b4b4\"\r\n        }\r\n    }),\r\n    warning: () => ({\r\n        \"& input\": {\r\n            \"borderColor\": \"#c9ba9b\",\r\n            \"background\": \"#fffaf3\",\r\n            \"color\": \"#573a08\"\r\n        }\r\n    })\r\n});\r\n */\r\n\r\n\r\n\r\nconst StyledField = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children'].includes(prop)\r\n})`\r\n    \r\n    ${({ grow = false, width }) => grow ? css`\r\n        min-width: ${width};\r\n    ` : css`\r\n        min-width: ${width};\r\n        max-width: ${width};\r\n    `\r\n    }\r\n    ${({ guides }) => guides && css`border: 1px dashed blue;`}\r\n    ${({ overflow }) => `overflow: ${overflow ? \"visible\" : \"hidden\"};`}\r\n\r\n    &.padding, .padding{\r\n        ${({ padding }) => padding && { \"padding\": padding }}\r\n    }\r\n\r\n    .margin{\r\n        ${({ margin }) => margin && css`margin: ${margin};`}\r\n        ${({ guides }) => guides && css`border: 1px solid red;`}\r\n    }\r\n\r\n    .error input{\r\n        color: #9f3a38;\r\n        background: #fff6f6;\r\n        border-color: #e0b4b4;\r\n    }\r\n    .warning input{\r\n        border-color: #c9ba9b;\r\n        background: #fffaf3;\r\n        color: #573a08;\r\n    }\r\n    .error .ant-input-number{\r\n        color: #9f3a38;\r\n        background: #fff6f6;\r\n        border-color: #e0b4b4;\r\n    }\r\n    .error .ant-select-selector{\r\n        color: #9f3a38!important;\r\n        background: #fff6f6!important;\r\n        border-color: #e0b4b4!important;\r\n    }\r\n    .warning .ant-input-number{\r\n        border-color: #c9ba9b;\r\n        background: #fffaf3;\r\n        color: #573a08;\r\n    }\r\n    .ant-picker{\r\n        width: 100%;\r\n    }\r\n    .ant-input-number{\r\n        width: 100%;\r\n    }\r\n    .ant-select{\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst FieldRowTop = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children', 'ref'].includes(prop)\r\n})`\r\n    ${({ guides }) => guides && css`\r\n        margin: 2px;\r\n        border: 1px solid green;\r\n    `}\r\n    ${({ layout = {} }) => css`${layout?.top}`} \r\n`;\r\n\r\nconst FieldRowMiddle = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children', 'ref'].includes(prop)\r\n})`\r\n    ${({ guides }) => guides && css`\r\n    margin: 2px;\r\n    border: 1px solid green;\r\n    `}\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n`;\r\n\r\nconst FieldLeft = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children', 'ref'].includes(prop)\r\n})`\r\n    ${({ guides }) => guides && css`\r\n    margin: 2px;\r\n    border: 1px solid blue;\r\n    `}\r\n    ${({ layout = {} }) => css`${layout?.left}`} \r\n`;\r\n\r\nconst FieldCenter = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children', 'ref'].includes(prop)\r\n})`\r\n    ${({ guides }) => guides && css`\r\n    margin: 2px;\r\n    border: 1px solid blue;\r\n    `}\r\n    flex: 1; \r\n    ${({ layout = {} }) => css`${layout?.center}`} \r\n`;\r\n\r\nconst FieldRight = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children', 'ref'].includes(prop)\r\n})`\r\n    ${({ guides }) => guides && css`\r\n    margin: 2px;\r\n    border: 1px solid blue;\r\n    `}\r\n    ${({ layout = {} }) => css`${layout?.right}`} \r\n`;\r\n\r\nconst FieldBottom = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children', 'ref'].includes(prop)\r\n})`\r\n    ${({ guides }) => guides && css`\r\n    margin: 2px;\r\n    border: 1px solid green;\r\n    `}\r\n    ${({ layout = {} }) => css`${layout?.bottom}`} \r\n`;\r\n\r\n/**\r\n * \r\n * @param {*} name Nome do campo\r\n * @param {*} wide Tamanho do Field, tipo de dados: {int entre 1 e 16 | array no formato [int,int,'*'] }  (Atenção! wide(default) e split são mutuamente exclusivos)\r\n * @param {*} split Tamanho do Field, divide o espaço (16) pelo número de vezes indicada (Atenção! wide(default) e split são mutuamente exclusivos)\r\n * \r\n * @returns \r\n */\r\nexport const Field = ({ children, ...props }) => {\r\n    /* const [localStatus, setLocalStatus] = useState({ status: \"none\", messages: [] }); */\r\n    const parentProps = useContext(ParentContext);\r\n    const myProps = inheritSelf(props, parentProps?.field);\r\n    /* const classes = useFieldStyles(myProps); */\r\n    const { refMainAlertContainer } = parentProps;\r\n\r\n    return (\r\n        <StyledField className={classNames(\"field\", { \"padding\": !myProps?.margin })} {...myProps}>\r\n\r\n            {/* <div className={classNames(classes.field, { [classes.padding]: !myProps?.margin })} style={{ ...myProps?.style }}> */}\r\n            <ConditionalWrapper\r\n                condition={myProps?.margin}\r\n                wrapper={children => <div className={classNames(\"margin\", \"padding\", myProps?.className)}>{children}</div>}\r\n            >\r\n                <InnerField {...myProps} /* localStatus={localStatus} setLocalStatus={setLocalStatus} */ refMainAlertContainer={refMainAlertContainer}>\r\n                    {(() => {\r\n                        if (!children) {\r\n                            return <>{children}</>\r\n                        } else if (myProps.forInput) {\r\n                            return children;\r\n                        } else if (children) {\r\n                            return <ForView {...children?.props} forViewBorder={myProps?.forViewBorder}>{children}</ForView>;\r\n                        }\r\n                    })()}\r\n                </InnerField>\r\n            </ConditionalWrapper>\r\n        </StyledField>\r\n    );\r\n}\r\n\r\n\r\n// export const Field = ({ children, ...props }) => {\r\n//     const [localStatus, setLocalStatus] = useState({ status: \"none\", messages: [] });\r\n//     const parentProps = useContext(ParentContext);\r\n//     const myProps = inheritSelf(props, parentProps?.field);\r\n//     /* const classes = useFieldStyles(myProps); */\r\n//     const { refMainAlertContainer } = parentProps;\r\n\r\n//     return (\r\n//         <StyledField className={classNames(\"field\", { \"padding\": !myProps?.margin })} {...myProps}>\r\n\r\n//         </StyledField>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\nexport const FieldItem = ({ children, ...props }) => {\r\n    return (\r\n        <Field noItemWrap={true} {...props}>{children}</Field>\r\n    );\r\n}\r\n\r\nexport const Item = ({ children = <></>, ...props }) => {\r\n    return (\r\n        <Form.Item noStyle {...props}>\r\n            {children}\r\n        </Form.Item>\r\n    );\r\n}\r\n\r\nconst ForView = ({ children, data, keyField, textField, optionsRender, labelInValue, forViewBorder = true, ...rest }) => {\r\n    let type = null; //'any' //children.props.tpy;\r\n    //console.log(\"zzzzzzz->\",children.type === DatePicker, children.type === InputAddon, children.type === Input,children.props)\r\n    if (!type || type === 'C') {\r\n        if (children.type === DatePicker) {\r\n            console.log(\"FIELD-> PICKER\");\r\n            type = 'Picker';\r\n        } else if (children.type === Input) {\r\n            console.log(\"FIELD-> INPUT\");\r\n            type = 'Input';\r\n        } else if (children.type === InputNumber) {\r\n            console.log(\"FIELD-> INPUTNUMBER\");\r\n            type = 'any';\r\n        } else if (children.type === InputAddon) {\r\n            console.log(\"FIELD-> INPUTADDON\");\r\n            type = 'any';\r\n        } else if (children.type === CheckboxField) {\r\n            console.log(\"FIELD-> CHECKBOXFIELD\");\r\n            type = 'CheckboxField';\r\n        } else if (children.type === SwitchField) {\r\n            console.log(\"FIELD-> SWITCHFIELD\");\r\n            type = 'SwitchField';\r\n        } else if (children.type === SelectDebounceField) {\r\n            console.log(\"FIELD-> SELECTDEBOUNCEFIELD\");\r\n            type = 'SelectDebounceField';\r\n        } else if (children.type === SelectField) {\r\n            console.log(\"FIELD-> SELECTFIELD\");\r\n            type = 'SelectField';\r\n        } else {\r\n            console.log(\"FIELD-> OTHER\", children.props);\r\n            type = 'any';\r\n        }\r\n    }\r\n    //console.log(\"zzzzzzz->\",type)\r\n\r\n    return (\r\n        <>\r\n            {\"value\" in rest ? <>\r\n                {(() => {\r\n                    const value = rest.value;\r\n                    switch (type) {\r\n                        case 'Input':\r\n                            return (<div style={{ padding: \"2px\", ...forViewBorder && { border: \"dashed 1px #d9d9d9\" }, minHeight: \"25px\" }}>{value}</div>);\r\n                        case 'CheckboxField':\r\n                            return (\r\n                                <CheckboxField {...children.props} value={value} disabled={true} />\r\n                            )\r\n                        case 'SwitchField':\r\n                            return (\r\n                                <SwitchField {...children.props} value={value} disabled={true} />\r\n                            )\r\n                        case 'SelectDebounceField':\r\n                            /* const r = data.find(v => v[keyField] === value);\r\n                            let text = \"\";\r\n                            if (r !== undefined) {\r\n                                text = (typeof optionsRender === 'function') ? optionsRender(r, keyField, textField).label : r[textField];\r\n                            }\r\n                            return (\r\n                                <div style={{ padding: \"2px\", border: \"dashed 1px #d9d9d9\" }}>{text}</div>\r\n                            ) */\r\n                            return (\r\n                                <div style={{ padding: \"2px\", ...forViewBorder && { border: \"dashed 1px #d9d9d9\" }, minHeight: \"25px\" }}>{value?.label}</div>\r\n                            )\r\n                        case 'Picker':\r\n                            const format = (children.props?.format) ? children.props.format : DATETIME_FORMAT;\r\n                            return (<div style={{ padding: \"2px\", ...forViewBorder && { border: \"dashed 1px #d9d9d9\" }, minHeight: \"25px\" }}>{value ? value.format(format) : ''}</div>)\r\n                        case 'SelectField':\r\n                            let text = \"\";\r\n                            if (labelInValue) {\r\n                                text = value?.label;\r\n                            } else {\r\n                                const r = data.find(v => v[keyField] === value);\r\n                                if (r !== undefined) {\r\n                                    text = (typeof optionsRender === 'function') ? optionsRender(r, keyField, textField).label : r[textField];\r\n                                }\r\n                            }\r\n                            return (\r\n                                <div style={{ padding: \"2px\", ...forViewBorder && { border: \"dashed 1px #d9d9d9\" }, minHeight: \"25px\", whiteSpace: \"nowrap\" }}>{text}</div>\r\n                            )\r\n                        default:\r\n\r\n                            if (\"addonAfter\" in children.props || \"addonAfter\" in children.props) {\r\n                                return (<div style={{ padding: \"2px\", ...forViewBorder && { border: \"dashed 1px #d9d9d9\" }, display: \"flex\", flexDirection: \"row\" }}>\r\n                                    {(\"addonBefore\" in children.props) && <div style={{ marginRight: \"2px\" }}>{children.props.addonBefore}</div>}\r\n                                    <div style={{ flex: 1 }}>{value}</div>\r\n                                    {(\"addonAfter\" in children.props) && <div style={{ marginLeft: \"2px\" }}>{children.props.addonAfter}</div>}\r\n                                </div>)\r\n                            }\r\n\r\n                            return (<div style={{ padding: \"2px\", ...forViewBorder && { border: \"dashed 1px #d9d9d9\" }, minHeight: \"25px\" }}>{value}</div>);\r\n                    }\r\n\r\n                })()}\r\n\r\n            </> : children}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst FormItemWrapper = ({ children, forInput = true, noItemWrap = false /* , localStatus, setLocalStatus */, name, nameId, shouldUpdate, rule, allValues = {} }) => {\r\n    const { schema, fieldStatus, updateFieldStatus } = useContext(ParentContext);\r\n    const validator = async (r, v) => {\r\n        const _rule = (rule) ? rule : ((Array.isArray(name)) ? schema([name[name.length - 1]]) : schema([name]));\r\n        (async () => {\r\n            try {\r\n                const { value, warning } = await _rule.validateAsync({ ...allValues, [(Array.isArray(name)) ? name[name.length - 1] : name]: v }, { abortEarly: false, warnings: true });\r\n                updateFieldStatus(nameId, (warning === undefined) ? { status: \"none\", messages: [] } : { status: \"warning\", messages: [...warning.details] });\r\n            } catch (e) {\r\n                updateFieldStatus(nameId, { status: \"error\", messages: [...e.details] });\r\n            }\r\n        })();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ConditionalWrapper\r\n                condition={!noItemWrap}\r\n                wrapper={children => <Form.Item rules={[{ validator: validator }]} validateTrigger={[\"onBlur\"]} shouldUpdate={shouldUpdate} noStyle {...(nameId && { name: nameId })}>\r\n                    {children}\r\n                </Form.Item>}\r\n            >\r\n                {children}\r\n            </ConditionalWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst AddOns = ({ refs, addons = {} }) => {\r\n    const { top, right, left, bottom, center } = addons;\r\n    const [domReady, setDomReady] = useState(false);\r\n    React.useEffect(() => { setDomReady(true); }, []);\r\n    return (\r\n        <>\r\n            {top && <Portal elId={refs[\"top\"].current}>\r\n                {top}\r\n            </Portal>}\r\n            {right && <Portal elId={refs[\"right\"].current}>\r\n                {right}\r\n            </Portal>}\r\n            {left && <Portal elId={refs[\"left\"].current}>\r\n                {left}\r\n            </Portal>}\r\n            {bottom && <Portal elId={refs[\"bottom\"].current}>\r\n                {bottom}\r\n            </Portal>}\r\n            {center && <Portal elId={refs[\"center\"].current}>\r\n                {center}\r\n            </Portal>}\r\n        </>\r\n    );\r\n}\r\n\r\nconst InnerField = ({ children, ...props }) => {\r\n    /* const classes = useFieldStyles(props); */\r\n    const { fieldStatus, updateFieldStatus, clearFieldStatus } = useContext(ParentContext);\r\n    const { name, alias, label, alert, required, guides, forInput = true, noItemWrap = false, rule, allValues, /* localStatus, setLocalStatus, */ refMainAlertContainer, shouldUpdate, layout, addons } = props;\r\n    const refs = {\r\n        top: useRef(),\r\n        left: useRef(),\r\n        right: useRef(),\r\n        bottom: useRef(),\r\n        center: useRef(),\r\n        container: refMainAlertContainer\r\n    };\r\n    /* const cssCenter = classNames(\"center\", {\"error\": localStatus.status == \"error\" }, {\"warning\": localStatus.status == \"warning\" });\r\n            const tooltipColor = (localStatus?.status == \"warning\" ? \"orange\" : \"red\"); */\r\n    const nameId = (!alias) ? name : alias;\r\n    const localStatus = fieldStatus[nameId];\r\n    const cssCenter = classNames({ \"error\": localStatus?.status === \"error\" }, { \"warning\": localStatus?.status === \"warning\" });\r\n    const tooltipColor = (localStatus?.status === \"warning\" ? \"orange\" : \"red\");\r\n\r\n    return (\r\n        <>\r\n            <FieldRowTop ref={refs.top} guides={guides} layout={layout} />\r\n            <FieldRowMiddle guides={guides} layout={layout}>\r\n                <FieldLeft ref={refs.left} guides={guides} layout={layout} />\r\n                <FieldCenter className={cssCenter} ref={refs.center} guides={guides} layout={layout}>\r\n\r\n\r\n\r\n                    <Tooltip\r\n                        title={(alert?.tooltip && (localStatus?.status === \"error\" || localStatus?.status === \"warning\")) && <InnerAlertFieldMessages nameId={nameId} messages={localStatus?.messages} />}\r\n                        color={tooltipColor}\r\n                    >\r\n                        <div>\r\n                            <FormItemWrapper nameId={nameId} name={name} shouldUpdate={shouldUpdate} forInput={forInput} rule={rule} allValues={allValues} noItemWrap={noItemWrap}>{children}</FormItemWrapper>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n\r\n\r\n                </FieldCenter>\r\n                <FieldRight ref={refs.right} guides={guides} layout={layout} />\r\n            </FieldRowMiddle>\r\n            <FieldBottom ref={refs.bottom} guides={guides} layout={layout} />\r\n            <LabelRef refs={refs} {...label} nameId={nameId} required={required} guides={guides} />\r\n            <AddOns refs={refs} addons={addons} />\r\n            {alert?.container &&\r\n                <AlertField refs={refs} fieldStatus={localStatus} /* fieldStatus={localStatus} */ nameId={nameId} {...alert} />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n// const useAlertFieldStyles = createUseStyles({\r\n//     alert: () => ({\r\n//         \"display\": \"flex\",\r\n//         \"width\": \"100%\",\r\n//         /* \"height\": \"100%\", */\r\n//         \"alignItems\": \"center\"\r\n//     })\r\n// });\r\n\r\nconst StyledAlertField = styled.div`\r\n            display: flex;\r\n            width: 100%;\r\n            align-items: center;\r\n            `;\r\n\r\nconst InnerAlertFieldMessages = ({ nameId, messages }) => {\r\n    return (\r\n        <div>\r\n            {messages.map((v, i) => <div key={`fmsg-${nameId}-${i}`}>\r\n                {v.message}\r\n            </div>)\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n/* const ContainerAlert = ({status, name})=>{\r\n    const [errors,setErrors] = useState([]);\r\n            const [warnings,setWarnings] = useState([]);\r\n            const [infos,setInfos] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n                console.log(\"CONTAINER-ALERT-LIST->\", name, \"--\", status);\r\n    },[])\r\n\r\n\r\n            return(<></>);\r\n\r\n} */\r\n\r\n/* const useAlerts = ({name, status}) => {\r\n    const [errors, setErrors] = useState([]);\r\n            const [warnings, setWarnings] = useState([]);\r\n            const [infos, setInfos] = useState([]);\r\n\r\n    useEffect(() => {\r\n                console.log(\"USE - CONTAINER-ALERT-LIST->\", name, \"--\", status);\r\n    }, [])\r\n\r\n            return {errors, warnings, infos};\r\n\r\n} */\r\n\r\nconst AlertField = ({ fieldStatus, nameId, pos = \"bottom\", refs, container, ...props }) => {\r\n    /*     const classes = useAlertFieldStyles(props); */\r\n    const [domReady, setDomReady] = useState(false);\r\n    React.useEffect(() => { setDomReady(true); }, []);\r\n    const ref = (container === true) ? refs[\"container\"].current : (container in refs) ? refs[pos].current : container;\r\n    return (\r\n        <Portal elId={ref}>\r\n            {(fieldStatus?.status === \"error\" || fieldStatus?.status === \"warning\") &&\r\n                <>\r\n                    {pos !== \"none\" &&\r\n                        <StyledAlertField>\r\n                            <PointingLabel status={fieldStatus?.status} text={<InnerAlertFieldMessages name={nameId} messages={fieldStatus?.messages} />} position={pos} />\r\n                        </StyledAlertField>\r\n                    }\r\n                    {/* <StyledAlertField>\r\n                    <div className={classes.alert}>\r\n                    {pos === \"list\" ?\r\n                        <InnerAlertFieldMessages name={name} messages={fieldStatus?.messages} status={fieldStatus?.status} />\r\n                        :\r\n                        <PointingLabel status={fieldStatus?.status} text={<InnerAlertFieldMessages name={name} messages={fieldStatus?.messages} />} position={pos} />\r\n                    }\r\n\r\n                </StyledAlertField> */}\r\n                </>\r\n            }\r\n        </Portal>\r\n    );\r\n}\r\n\r\nexport const AlertsContainer = ({ main = false, parentPath, ...props }) => {\r\n    const parentProps = useContext(ParentContext);\r\n    const { refMainAlertContainer } = parentProps;\r\n    const [domReady, setDomReady] = useState(false);\r\n    React.useEffect(() => { setDomReady(true); }, []);\r\n    return (\r\n        <div {...(main && { ref: refMainAlertContainer })} {...props}></div>\r\n    );\r\n}\r\n\r\n\r\nconst StyledLabel = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children'].includes(prop)\r\n})`\r\n            ${({ width, align = \"start\", vAlign = \"start\", padding = \"5px\" }) => css`\r\n            display: flex;\r\n            flex-direction: row;\r\n            align-items: ${vAlign};\r\n            justify-content: ${align};\r\n            padding: ${padding};\r\n            width: ${width};\r\n            height: 100%;\r\n            font-weight: 600;\r\n            font-size: 12px;\r\n            line-height: 20px;\r\n        `\r\n    }\r\n            ${({ guides }) => guides && css`\r\n        margin: 2px;\r\n        border: 1px dotted orange;\r\n    `}\r\n\r\n            ${({ pos, required, colon }) => (pos == \"right\") ? css`\r\n        &:before{\r\n            ${colon && css`\r\n                content: \":\";\r\n                display: inline-block;\r\n                margin-left: 1px;\r\n            `}   \r\n        }    \r\n        &:after{\r\n            ${required && css`\r\n                content: \"*\";\r\n                display: inline-block;\r\n                color: red;\r\n                margin-right: 4px;\r\n            `}   \r\n        }\r\n    ` : css`\r\n        &:before{\r\n            ${required && css`\r\n                content: \"*\";\r\n                display: inline-block;\r\n                color: red;\r\n                margin-right: 4px;\r\n            `}   \r\n        }    \r\n        &:after{\r\n            ${colon && css`\r\n                content: \":\";\r\n                display: inline-block;\r\n                margin-left: 1px;\r\n            `}   \r\n        }\r\n    `};\r\n\r\n            label{\r\n                ${({ wrap, ellipsis }) => ((!wrap && !ellipsis) && css`white-space: nowrap;`)}\r\n            ${({ overflow, ellipsis }) => (!ellipsis) && `overflow: ${overflow ? \"visible\" : \"hidden\"};`}\r\n            ${({ ellipsis }) => (ellipsis && css`\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n        `)}\r\n    }\r\n\r\n\r\n            `;\r\n\r\n\r\n/* const useLabelStyles = createUseStyles({\r\n                wrapper: ({pos, wrap = false, overflow = true, colon = true, ellipsis = true, width, align = \"start\", vAlign = \"start\", padding = \"5px\", required = false, guides}) => {\r\n        return {\r\n                \"display\": \"flex\",\r\n            \"flexDirection\": \"row\",\r\n            \"alignItems\": vAlign,\r\n            \"justifyContent\": align,\r\n            \"padding\": padding,\r\n            \"width\": width,\r\n            \"height\": \"100%\",\r\n            \"fontWeight\": 600,\r\n            \"fontSize\": \"12px\",\r\n            \"lineHeight\": \"20px\",\r\n            ...(guides && {\"margin\": \"2px\", \"border\": \"1px dotted orange\" }),\r\n\r\n            '& label': {\r\n                ...((!wrap && !ellipsis) && { \"whiteSpace\": \"nowrap\" }),\r\n                ...(!ellipsis && {\"overflow\": overflow ? \"visible\" : \"hidden\" }),\r\n            ...(ellipsis && {\r\n                \"whiteSpace\": \"nowrap\",\r\n            \"overflow\": \"hidden\",\r\n            \"textOverflow\": \"ellipsis\"\r\n                })\r\n            },\r\n\r\n\r\n            ...(pos === \"right\" ? {\r\n                '&:after': {\r\n                ...(required && {\r\n                    content: '\"*\"',\r\n                    display: \"inline-block\",\r\n                    color: \"red\",\r\n                    marginRight: \"4px\"\r\n                })\r\n            },\r\n            '&:before': {\r\n                ...(colon && {\r\n                    content: '\":\"',\r\n                    display: \"inline-block\",\r\n                    marginLeft: \"1px\"\r\n                })\r\n            }\r\n            } : {\r\n                '&:before': {\r\n                ...(required && {\r\n                    content: '\"*\"',\r\n                    display: \"inline-block\",\r\n                    color: \"red\",\r\n                    marginRight: \"4px\"\r\n                })\r\n            },\r\n            '&:after': {\r\n                ...(colon && {\r\n                    content: '\":\"',\r\n                    display: \"inline-block\",\r\n                    marginLeft: \"1px\"\r\n                })\r\n            }\r\n            })\r\n        }\r\n    }\r\n}); */\r\n\r\nconst LabelRef = ({ refs, ...props }) => {\r\n    const { pos = \"top\", enabled = true } = props;\r\n    const [domReady, setDomReady] = useState(false);\r\n    React.useEffect(() => { setDomReady(true); }, []);\r\n    return (\r\n        <>\r\n            {enabled &&\r\n                <Portal elId={refs[pos].current}>\r\n                    <Label {...props} />\r\n                </Portal>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport const Label = ({ ...props }) => {\r\n    const { pos = \"top\", text = \"\", enabled = true, colon = true, required = false, className, style, container = {}, nameId } = props;\r\n    const { width = ((pos === \"left\" || pos === \"right\") && \"100px\") } = props;\r\n    //const classes = useLabelStyles({...props, width});\r\n\r\n    return (\r\n        <StyledLabel {...props} width={width} ellipsis={false} overflow={true}>\r\n            {/* <div className={classNames(classes.wrapper, className)} style={{ ...style }}> */}\r\n            <label htmlFor={nameId} title={text}>\r\n                {text}\r\n            </label>\r\n            {/* </div> */}\r\n        </StyledLabel>\r\n    );\r\n}\r\n\r\nexport const LabelField = ({ index, ...props }) => {\r\n    return (<FieldItem forInput={false} label={{ enabled: true, padding: \"0px\", pos: \"center\", ...props }} index={index} />);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* const useFieldSetStyles = createUseStyles({\r\n                fieldSet: ({grow = false, width, guides}) => ({\r\n                ...(grow ?\r\n                    {\r\n                        \"minWidth\": width\r\n                    }\r\n                    : {\r\n                        \"minWidth\": width,\r\n                        \"maxWidth\": width\r\n                    }),\r\n        ...(guides && {\"border\": \"1px solid green\" })\r\n    }),\r\n            padding: ({padding}) => ({...(padding && { \"padding\": padding })}),\r\n            margin: ({margin}) => ({...(margin && { \"margin\": margin })}),\r\n            flex: ({layout = \"horizontal\", overflow = false}) => ({\r\n                \"display\": \"flex\",\r\n            \"flexDirection\": layout == \"vertical\" ? 'column' : 'row',\r\n            \"flexGrow\": 0,\r\n            \"flexShrink\": 0,\r\n            \"flexWrap\": \"nowrap\",\r\n            \"overflow\": overflow ? \"visible\" : \"hidden\"\r\n    })\r\n}); */\r\n\r\n\r\n\r\nconst StyledFieldSet = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children'].includes(prop)\r\n})`\r\n            ${({ grow = false, width }) => grow ? css`\r\n            min-width: ${width};\r\n        ` : css`\r\n            min-width: ${width};\r\n            max-width: ${width};\r\n        `\r\n    }\r\n\r\n            ${({ margin, layout = \"horizontal\", overflow = false }) => !margin && css`\r\n        display: flex;\r\n        flex-direction:  ${layout == \"vertical\" ? 'column' : 'row'};\r\n        flex-grow: 0;\r\n        flex-shrink: 0;\r\n        flex-wrap: nowrap;\r\n        overflow: ${overflow ? \"visible\" : \"hidden\"};\r\n    `}\r\n            ${({ padding, margin }) => (padding && !margin) && css`padding: ${padding};`}\r\n            ${({ margin }) => margin && css`margin: ${margin};`}\r\n\r\n            ${({ guides }) => guides && css`\r\n        border: 1px solid green;\r\n    `}\r\n            `;\r\n\r\nconst StyledWrapperFieldSet = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['className', 'style', 'children'].includes(prop)\r\n})`\r\n            ${({ margin, padding, layout = \"horizontal\", overflow = false }) => css`\r\n    ${(layout == \"vertical\") ? css`flex-direction:column;` : css`flex-direction:row;`}\r\n    display: flex;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    flex-wrap: nowrap;\r\n    overflow: ${overflow ? \"visible\" : \"hidden\"};\r\n    ${(padding) && css`padding: ${padding};`}\r\n    ${margin && css`margin: ${margin};`}\r\n    `}\r\n            `;\r\n\r\n\r\nconst isChildrenType = (children) => {\r\n    if (children.type === AlertsContainer) {\r\n        return true;\r\n    } else if (children.type === FieldItem) {\r\n        return true;\r\n    } else if (children.type === Item) {\r\n        return true;\r\n    } else if (children.type === Field) {\r\n        return true;\r\n    } else if (children.type === AddOn) {\r\n        return true;\r\n    } else if (children.type === LabelField) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} wide Tamanho do FieldSet, tipo de dados: {int entre 1 e 16 | array no formato [int,int,'*'] }  (Atenção! wide(default) e split são mutuamente exclusivos)\r\n            * @param {*} split Tamanho do FieldSet, divide o espaço (16) pelo número de vezes indicada (Atenção! wide(default) e split são mutuamente exclusivos)\r\n            *\r\n            * @returns\r\n            */\r\nexport const FieldSet = ({ children, ...props }) => {\r\n    const parentProps = useContext(ParentContext);\r\n    const { style, ...myProps } = inheritSelf(props, parentProps?.fieldSet);\r\n    /*     const classes = useFieldSetStyles(myProps); */\r\n    const refMainAlertContainer = useRef();\r\n    const { parentPath = '' } = props;\r\n    return (\r\n        <StyledFieldSet {...myProps} {...(!myProps?.margin && { style: { ...style } })} className=\"fieldset\">\r\n            {/*         <div\r\n            className={classNames(classes.fieldSet, { [classes.flex]: !myProps?.margin }, { [classes.padding]: !myProps?.margin })}\r\n            {...(!myProps?.margin && { style: { ...style } })}\r\n> */}\r\n            <ParentContext.Provider value={propsToChildren(props, parentProps, refMainAlertContainer)}>\r\n                <ConditionalWrapper\r\n                    condition={myProps?.margin}\r\n                    wrapper={children => <StyledWrapperFieldSet {...myProps} className={classNames(myProps?.className, \"inner\")}/* className={classNames(classes.flex, classes.margin, classes.padding, myProps?.className)} */ style={{ ...style }}>{children}</StyledWrapperFieldSet>}\r\n                >\r\n                    <>\r\n                        {React.Children.map(Array.isArray(children) ? children.filter(v => v) : children, (child, i) => (\r\n                            <>\r\n                                {(React.isValidElement(child) && isChildrenType(child)) ?\r\n                                    React.cloneElement(child, { ...child.props, index: i, parentPath: `${parentPath}-${props.index}` }) :\r\n                                    child}\r\n                            </>\r\n                        ))\r\n                        }\r\n                    </>\r\n                </ConditionalWrapper>\r\n            </ParentContext.Provider>\r\n        </StyledFieldSet>\r\n    );\r\n}\r\n\r\n//['AlertsContainer', 'FieldItem', 'Item', 'Field', 'AddOn', 'LabelField'].includes(child.type.name)\r\n\r\n/* const useFormLayoutStyles = createUseStyles({\r\n                formLayout: ({layout = 'vertical', wrap = false, guides}) => ({\r\n                ...(guides && { \"border\": \"2px solid blue\" }),\r\n                \"display\": \"flex\",\r\n            \"flexDirection\": layout == \"horizontal\" ? 'row' : 'column',\r\n            \"flexWrap\": wrap ? \"wrap\" : \"nowrap\"\r\n    })\r\n}); */\r\n\r\nconst StyledFormLayout = styled('div').withConfig({\r\n    shouldForwardProp: (prop) =>\r\n        ['style', 'className', 'children'].includes(prop)\r\n})`\r\n            ${({ layout = 'vertical', wrap = false }) => css`\r\n        display: flex;\r\n        flex-direction: ${layout == \"horizontal\" ? 'row' : 'column'};\r\n        flex-wrap: ${wrap ? 'wrap' : 'nowrap'};\r\n    `}\r\n            ${({ guides }) => guides && css`\r\n        border: 2px solid blue;\r\n    `}\r\n            `;\r\n\r\n\r\n/**\r\n *\r\n * @param {*} layout Disposição dos elementos [vertical,horizontal]\r\n            * @param {*} field Parametros Globais a herdar pelo elemento Field (No override)\r\n            * @param {*} fieldSet Parametros Globais a herdar pelo elemento FieldSet (No override)\r\n            *\r\n            * @returns\r\n            */\r\n// export const FormLayout = ({className, style, field, fieldSet, schema, children, id, ...props }) => {\r\n//     /*     const classes = useFormLayoutStyles(props); */\r\n//     const dataContext = {field, fieldSet, schema, layoutId: id };\r\n//     if (!id) { throw new Error(`FormLayout key is Required!`) }\r\n//     return (\r\n//         <StyledFormLayout {...props} className={classNames(\"formlayout\", className)} style={style}>\r\n\r\n//             {/* <div className={classNames(classes.formLayout, className)} style={style}> */}\r\n//             <ParentContext.Provider value={dataContext}>\r\n//                 {\r\n//                     React.Children.map(children, (child, i) => (\r\n//                         <>\r\n//                             {(React.isValidElement(child)) ? React.cloneElement(child, { ...child.props, index: i, parentPath: id }) : child}\r\n//                         </>\r\n//                     ))\r\n//                 }\r\n//             </ParentContext.Provider>\r\n\r\n//         </StyledFormLayout>\r\n//     );\r\n// }\r\n\r\nexport const InputAddon = styled(Input)`\r\n    .ant-input{\r\n        text-align: right;\r\n    }\r\n    .ant-input-group-addon{\r\n        background: #f5f5f5;\r\n    }\r\n `;\r\n\r\nexport const FormLayout = ({ className, style, field, fieldSet, schema, children, id, fieldStatus, ...props }) => {\r\n    if (!id) { throw new Error(`FormLayout key is Required!`) }\r\n    const [localFieldStatus, setLocalFieldStatus] = useState({});\r\n    const updateLocalFieldStatus = (field, status) => {\r\n        setLocalFieldStatus(prev => ({ ...prev, [field]: status }));\r\n    }\r\n    const clearLocalFieldStatus = () => {\r\n        setLocalFieldStatus({});\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fieldStatus) {\r\n            setLocalFieldStatus(fieldStatus);\r\n        }\r\n    }, [fieldStatus]);\r\n\r\n    const dataContext = { field, fieldSet, schema: (schema ? schema : {}), layoutId: id, fieldStatus: localFieldStatus, updateFieldStatus: updateLocalFieldStatus, clearFieldStatus: clearLocalFieldStatus };\r\n\r\n    return (\r\n        <StyledFormLayout {...props} className={classNames(\"formlayout\", className)} style={style}>\r\n            <ParentContext.Provider value={dataContext}>\r\n                {\r\n                    React.Children.map(children, (child, i) => (\r\n                        <>\r\n                            {(React.isValidElement(child)) ? React.cloneElement(child, { ...child.props, index: i, parentPath: id }) : child}\r\n                        </>\r\n                    ))\r\n                }\r\n            </ParentContext.Provider>\r\n        </StyledFormLayout>\r\n    );\r\n}"],"names":["showWrapper","setShowWrapper","parentReload","children","width","rest","useState","formTitle","setFormTitle","iref","useRef","record","onVisible","prev","show","title","subTitle","type","destroyOnClose","mask","setVisible","visible","bodyStyle","height","footer","ref","id","style","textAlign","React","props","parentRef","closeParent","styled","StyledAlert","Alert","alert","status","position","text","css","classNames","pos","pointer","className","banner","message","value","onChange","startProps","endProps","format","TIME_FORMAT","endOpen","setEndOpen","display","flexDirection","alignItems","disabledTime","startValue","endValue","valueOf","placeholder","val","onOpenChange","open","marginRight","suffixIcon","ClockCircleOutlined","marginLeft","color","ParentContext","createContext","Title","TitleForm","toogleMaximize","toogleFullScreen","setNormal","justifyContent","onClick","WrapperForm","ctx","useContext","MediaContext","mode","widthMode","setWidthMode","useEffect","computeWitdth","prevMode","unit","maxWidth","maxUnit","titleForm","newMode","newWidth","minWidth","centered","onCancel","onClose","Number","prototype","pad","size","Math","sign","this","Array","concat","abs","join","slice","inheritSelf","parentProps","widthValue","wide","split","wideValue","idx","isInteger","isArray","reduce","sum","x","wideOrSplit","self","parent","ret","data","index","forInput","obj","layout","top","right","center","left","bottom","label","propsToChildren","refMainAlertContainer","field","pField","fieldSet","pFieldSet","schema","layoutId","fieldStatus","updateFieldStatus","clearFieldStatus","StyledHorizontalRule","withConfig","shouldForwardProp","prop","includes","StyledHRuleTitle","FilterDrawer","filterRules","showFilter","setShowFilter","form","paddingBottom","resetFields","submit","name","hideRequiredMark","map","line","ridx","key","gutter","Object","keys","col","cidx","span","itemWidth","$_mapLabels","labelChk","initialValue","undefined","paddingLeft","paddingRight","marginBottom","labelCol","padding","autocomplete","AutoCompleteField","allowClear","rangedate","RangeDateField","rangetime","RangeTimeField","selectmulti","SelectMultiField","checkbox","CheckboxField","AddOn","HorizontalRule","margin","description","myProps","StyledField","condition","wrapper","StyledVerticalSpace","VerticalSpace","SwitchField","v","checkedValue","uncheckedValue","checked","RangeTime","formatted","DATE_FORMAT","RangeDate","parseFromBool","target","fetchOptions","debounceTimeout","keyField","valueField","textField","optionsRender","onPressEnter","setFetching","options","setOptions","fetchRef","_optionsRender","d","debounceFetcher","debounce","current","fetchId","then","newOptions","opts","onSearch","SelectDebounceField","fetching","labelInValue","filterOption","notFoundContent","indicator","LoadingOutlined","fontSize","spin","SelectField","showSearch","arr1","arr2","selectedItems","setSelectedItems","length","filter","el","find","element","item","grow","guides","overflow","FieldRowTop","FieldRowMiddle","FieldLeft","FieldCenter","FieldRight","FieldBottom","Field","InnerField","ForView","forViewBorder","FieldItem","noItemWrap","Item","noStyle","DatePicker","Input","InputNumber","InputAddon","border","minHeight","disabled","DATETIME_FORMAT","r","whiteSpace","addonBefore","flex","addonAfter","FormItemWrapper","nameId","shouldUpdate","rule","allValues","validator","_rule","validateAsync","abortEarly","warnings","warning","messages","details","rules","validateTrigger","AddOns","refs","addons","setDomReady","elId","alias","required","container","localStatus","cssCenter","tooltipColor","tooltip","InnerAlertFieldMessages","LabelRef","AlertField","StyledAlertField","i","AlertsContainer","main","parentPath","StyledLabel","align","vAlign","colon","wrap","ellipsis","enabled","Label","htmlFor","LabelField","StyledFieldSet","StyledWrapperFieldSet","isChildrenType","FieldSet","Provider","child","StyledFormLayout","FormLayout","Error","localFieldStatus","setLocalFieldStatus","dataContext"],"sourceRoot":""}